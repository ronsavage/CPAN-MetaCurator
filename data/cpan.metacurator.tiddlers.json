[
    {
        "text": "\"\"\"\no 2FA stands for Two-Factor Authentification\n\no Auth::GoogleAuth:\n- Google Authenticator TBOT Abstraction\n- https://metacpan.org/pod/Auth::GoogleAuth\n",
        "title": "2FA",
        "modified": "20250211220751482",
        "created": "20250211220715511"
    },
    {
        "text": "\"\"\"\no Art-Net:\n- Art-Net is a simple implementation of DMX512-A protocol over UDP\n- https://en.wikipedia.org/wiki/Art-Net\n\no CIDR:\n- Classless Inter-Domain Routing\n- https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing\n\no CORS:\n- Cross-Origin Resource Sharing\n- https://en.wikipedia.org/wiki/Cross-origin_resource_sharing\n- http://www.w3.org/TR/cors\n- https://web.archive.org/web/20120724073230/http://www.html5rocks.com/en/tutorials/cors/\n\no DMARC:\n- Domain-based Message Authentication, Reporting, and Conformance\n- https://en.wikipedia.org/wiki/DMARC\n- An email authentication protocol that helps protect domain owners and recipients from email spoofing, phishing, and other email-based attacks\n\no RDM:\n- Remote Device management\n- https://en.wikipedia.org/wiki/RDM_(lighting)\n\no UDP:\n- User Datagram Protocol\n- https://en.wikipedia.org/wiki/User_Datagram_Protocol\n",
        "title": "Acronyms",
        "modified": "20250711001504892",
        "created": "20231109020407842"
    },
    {
        "text": "\"\"\"\no http://www.lenjaffe.com/AdventPlanet/\n",
        "title": "AdventPlanet",
        "modified": "20250528010723912",
        "created": "20201228073931196"
    },
    {
        "text": "\"\"\"\no Langertha:\n- The clan of fierce vikings with 🪓 and 🛡️ to AId your rAId\n- https://metacpan.org/dist/Langertha\n- This module is designed to facilitate interactions with various AI models\n\no OpenAPI::Client::OpenAI:\n- A client for the OpenAI API\n- https://metacpan.org/dist/OpenAPI-Client-OpenAI\n",
        "title": "AiEngines",
        "modified": "20250704001054383",
        "created": "20250427020226227"
    },
    {
        "text": "\"\"\"\no Algorithm::X::DLX:\n- Solve exact cover problems with Algorithm-X and Dancing Links\n- https://metacpan.org/dist/Algorithm-X\n\no Algorithm::DLX:\n- Solve exact cover problems\n- https://metacpan.org/pod/Algorithm::DLX V 0.03\n",
        "title": "AlgorithmicStuff",
        "modified": "20250713065419026",
        "created": "20250209223802941"
    },
    {
        "text": "\"\"\"\no Automate::Animate::FFmpeg:\n- Create animation from a sequence of images using FFmpeg\n- https://metacpan.org/pod/Automate::Animate::FFmpeg\n",
        "title": "AnimationStuff",
        "modified": "20250708060936583",
        "created": "20240315003618956"
    },
    {
        "text": "\"\"\"\no File::Scan::ClamAV:\n- Connect to a local Clam Anti-Virus clamd service and send commands\n- https://metacpan.org/dist/File-Scan-ClamAV\n",
        "title": "AntiVirusStuff",
        "modified": "20250326061522543",
        "created": "20250326061459334"
    },
    {
        "text": "\"\"\"\no See also:\n- Apache::Log::Parser\n- Apache::ParseLog\n- ApacheLog::Parser\n- Regexp::Long::Common\n\no Apache::Session::Browseable:\n- Add index and search methods to Apache::Session\n- https://metacpan.org/dist/Apache-Session-Browseable\n- Written to support Lemonldap::NG. See SystemMonitoring\n\no Common::Log::Parser:\n- Parse the common log format lines used by Apache\n- https://metacpan.org/pod/Common::Log::Parser\n\no ThreatDetector:\n- Apache log parser for threat detection & classification\n- https://metacpan.org/dist/ThreatDetector\n\no Thrift:\n- Apache Thrift is a software framework for scalable cross-language services development.\n- https://metacpan.org/dist/Thrift\n",
        "title": "ApacheStuff",
        "modified": "20250709010642348",
        "created": "20240319065347473"
    },
    {
        "text": "\"\"\"\no See ZipFiles\n",
        "title": "ArchiveFiles",
        "modified": "20241116054321047",
        "created": "20241116053725320"
    },
    {
        "text": "\"\"\"\no See also:\n- DataTraversal\n- NewOperators\n- [[XS]]\n- List::MoreUtils\n\no Array::Intersection:\n- Exports an array intersection function\n- https://metacpan.org/pod/Array::Intersection\n\no Array::Iterator:\n- A simple class for iterating over Perl arrays\n- https://metacpan.org/pod/Array::Iterator\n- Other modules discussed in the POD: Class::Iter, Class::Iterator, Data::Iter, Data::Iterator::EasyObj and Tie::Array::Iterable\n\no Array::Merge::Unique:\n- Merge those arrays uniquely\n- https://metacpan.org/pod/Array::Merge::Unique\n- See also List::MoreUtils\n\no Array::Transpose:\n- Transposes a 2-Dimensional Array\n- https://metacpan.org/dist/Array-Transpose\n\no Data::LnArray:\n- The great new Data::LnArray\n- https://metacpan.org/pod/Data::LnArray\n- Arrays with lots of access methods\n\no Data::LnArray::XS:\n- Arrays as just above\n- https://metacpan.org/dist/Data-LnArray-XS\n\no Data::Table:\n- Data type related to database tables, spreadsheets, CSV/TSV files, HTML table displays, etc\n- https://metacpan.org/dist/Data-Table\n\no HATX:\n- A fluent interface for Hash and Array Transformations\n- https://metacpan.org/dist/HATX\n\no List::MoreUtils:\n- Provide the stuff missing in List::Util\n- https://metacpan.org/pod/List::MoreUtils\n\no List::Util is a core module:\n- Note: List::Util::XS is available\n- use List::Util 'any' or, better, 'first' (but don't use first() for finding 0 or undef!)\n- And then 1 of:\n- if(any { $_ eq $thing } @values) ...\n- if(any { $_ == $thing } @values) ...\n- It's not limited to just string or number comparison of course; you can\nput any arbitrary code in there. if(any { $_->is_close_to(123.45) } @values) ...\n- Or\n- If you don't like the XSUB call overhead of List::Util::any, there's\nanother (non-core) CPAN module List::Keywords which implements many of\nthe same utilities as real keywords with real opcodes, so they run\nfaster.\n- use List::Keywords 'any';\n- if(any { $_ eq $thing } @values) ...\n- Or\n- if (grep { $_ eq $myval } @arr)\n\no List::UtilsBy:\n- Higher-order list utility functions\n- https://metacpan.org/pod/List::UtilsBy\n- Amazing!\n\no Math::MatrixBool:\n- Matrix of Booleans\n- https://metacpan.org/dist/Math-MatrixBool\n\no Math::MatrixReal:\n- Matrix of Reals\n- https://metacpan.org/dist/Math-MatrixReal\n\no Syntax::Operator::Zip:\n- Infix operator to compose two lists together\n- https://metacpan.org/pod/Syntax::Operator::Zip\n- Provides 2 functions: mesh and zip, both of which are in List::Util\n- Also, List::UtilsBy contains zip_by and unzip_by\n",
        "title": "ArrayHandling",
        "modified": "20250714024350364",
        "created": "20220412233720374"
    },
    {
        "text": "\"\"\"\no See also:\n- https://www.ascii-code.com/\n\no Text::ASCII::Convert:\n- Perl module to convert non-ASCII characters to their ASCII equivalents\n- https://metacpan.org/dist/Text-ASCII-Convert\n",
        "title": "AsciiCodes",
        "modified": "20250522022832151",
        "created": "20240424054040059"
    },
    {
        "text": "\"\"\"\no Convert::PEM:\n- Read/write encrypted ASN.1 PEM files\n- https://metacpan.org/dist/Convert-PEM\n",
        "title": "ASN",
        "modified": "20241023015550180",
        "created": "20241023015526434"
    },
    {
        "text": "\"\"\"\no CPU::x86_64::InstructionWriter:\n- Assemble x86-64 instructions using a pure-perl API\n- https://metacpan.org/dist/CPU-x86_64-InstructionWriter\n",
        "title": "AssemblerX86",
        "modified": "20250305211250894",
        "created": "20250304053051634"
    },
    {
        "text": "\"\"\"\no Audio::Nama:\n- Multitrack recorder and digital audio workstation\n- https://metacpan.org/dist/Audio-Nama\n\no libvlc:\n- libVLC is the core engine and the interface to the multimedia framework on which VLC media player is based\n- https://www.videolan.org/vlc/libvlc.html\n\no Perl I/F:\n- Wrapper for libvlc.so\n- https://metacpan.org/pod/VideoLAN::LibVLC\n\no SpeL::Wizard:\n- Engine to build audio files from the spel files generated by SpeL\n-  https://metacpan.org/dist/SpeL-Wizard\n\no SReview:\n- A video review and transcoding system\n- https://metacpan.org/dist/SReview\n- This is a complex package containing about 50 modules and a dozen scripts\n\no VLC media player:\n- VLC is a free and open source cross-platform multimedia player and framework that plays most multimedia files as well as DVDs, Audio CDs, VCDs, and various streaming protocols\n- http://www.videolan.org/vlc/\n",
        "title": "AudioVisual",
        "modified": "20250712065710867",
        "created": "20231128214612326"
    },
    {
        "text": "\"\"\"\no App::BackupPlan:\n- Perl extension for automated, regular backups\n- https://metacpan.org/pod/App::BackupPlan\n",
        "title": "AutomatedBackups",
        "modified": "20250309215617291",
        "created": "20250309215519560"
    },
    {
        "text": "\"\"\"\no See also:\n- SystemInfo\n\no Benchmark\n- Benchmark running times of Perl code\n- https://metacpan.org/pod/Benchmark\n\no Benchmark::DKbench:\n- Perl CPU Benchmark Suite\n- https://metacpan.org/dist/Benchmark-DKbench\n\no Benchmark::Thread::Size:\n- Report size of threads for different code approaches\n- https://metacpan.org/dist/Benchmark-Thread-Size\n\no Devel::NYTProf\n- Powerful fast feature-rich Perl source code profiler\n- https://metacpan.org/pod/Devel::NYTProf\n\no Dumbbench:\n- More reliable benchmarking with the least amount of thinking\n- https://metacpan.org/pod/Dumbbench\n\no Hyperfine:\n- https://github.com/sharkdp/hyperfine\n\no Mean Absolute Deviation:\n- https://en.wikipedia.org/wiki/Median_absolute_deviation\n\no Number::WithError\n- Numbers with error propagation and scientific rounding\n- https://metacpan.org/pod/Number::WithError\n\no Surveyor::App:\n- Run benchmarks from a package\n- https://metacpan.org/pod/Surveyor::App\n",
        "title": "BenchmarkingTools",
        "modified": "20250709063550564",
        "created": "20221005060937596"
    },
    {
        "text": "\"\"\"\no App::MARC::Filter:\n- Base class for marc-count script\n- https://metacpan.org/dist/App-MARC-Filter\n\no App::MARC::List:\n- Base class for marc-list script\n- https://metacpan.org/pod/App::MARC::List\n\no App::MARC::Validator:\n- Tool to validate records in MARC file\n- https://metacpan.org/dist/App-MARC-Validator\n\no App::NKC2MARC:\n- Tool to fetch record from National library of the Czech Republic to MARC file\n- https://metacpan.org/dist/App-NKC2MARC\n\no App::Wikidata::Template::CS::CitaceMonografie:\n- Base class for Wikidata command line tool wd-citace-monografie\n- https://metacpan.org/dist/App-Wikidata-Template-CS-CitaceMonografie\n\no Data::MARC::Field008:\n- Data object for MARC field 008\n- https://metacpan.org/dist/Data-MARC-Field008\n\no MARC::Convert::Wikidata::Object:\n- Bibliographic Wikidata object defined by MARC record\n- https://metacpan.org/dist/MARC-Convert-Wikidata-Object\n\no MARC::Field008:\n- Class for parsing and serialization of MARC field 008\n- https://metacpan.org/dist/MARC-Field008\n\no MARC::Leader:\n- MARC leader class\n- https://metacpan.org/dist/MARC-Leader\n\no MARC::Leader::Utils:\n- Utilities for MARC::Leader\n- https://metacpan.org/dist/MARC-Leader-Utils\n\no MARC::Validator:\n- Set of plugins for MARC validation\n- https://metacpan.org/dist/MARC-Validator\n\no Net::Z3950::FOLIO:\n- Z39.50 server for FOLIO bibliographic data\n- https://metacpan.org/pod/Net::Z3950::FOLIO\n- Uses Net::Z3950::SimpleServer\n\no Net::Z3950::SimpleServer:\n- Simple Perl API for building Z39.50 servers\n- https://metacpan.org/pod/Net::Z3950::SimpleServer\n",
        "title": "BibliographicStuff",
        "modified": "20250703012648124",
        "created": "20250313224600013"
    },
    {
        "text": "\"\"\"\no BibTeX::Parser:\n- A pure perl BibTeX parser\n- https://metacpan.org/dist/BibTeX-Parser\n",
        "title": "BibTeX",
        "modified": "20250710050220927",
        "created": "20250710050140073"
    },
    {
        "text": "\"\"\"\no SBOM::CycloneDX:\n- A library for generate valid CycloneDX BOM file\n- https://metacpan.org/pod/SBOM::CycloneDX\n",
        "title": "BillOfMaterials",
        "modified": "20250331220757813",
        "created": "20250331220712846"
    },
    {
        "text": "\"\"\"\no Bio::MUST::Apps::OmpaPa:\n- Main class for ompa-pa tool\n- https://metacpan.org/dist/Bio-MUST-Apps-OmpaPa\n\no Bio::MUST::Core:\n- Core classes and utilities for Bio::MUST\n- https://metacpan.org/dist/Bio-MUST-Core\n- Contains about 35 scripts\n\no Pheno::Ranker:\n- A module that performs semantic similarity in PXF/BFF data structures and beyond (JSON|YAML)\n- https://metacpan.org/dist/Pheno-Ranker\n- https://cnag-biomedical-informatics.github.io/pheno-ranker/\n\n",
        "title": "BioInformatics",
        "modified": "20250709071115910",
        "created": "20250627010113911"
    },
    {
        "text": "\"\"\"\no Blockchain::Ethereum:\n- A Ethereum toolkit in Perl\n- https://metacpan.org/dist/Blockchain-Ethereum\n",
        "title": "BlockChain",
        "modified": "20250629034808630",
        "created": "20250629034734587"
    },
    {
        "text": "\"\"\"\no See also:\n- MozRepl\n- Selenium::Firefox\n- Firefox::Application\n- Mozilla::Mechanize\n\no Chrome::Util::Profile:\n- List available Google Chrome profiles\n- https://metacpan.org/pod/Chrome::Util::Profile\n\no Firefox::Marionette:\n- Automate the Firefox browser with the Marionette protocol\n- https://metacpan.org/dist/Firefox-Marionette\n- https://firefox-source-docs.mozilla.org/testing/marionette/Protocol.html\n\no Firefox::Util::Profile:\n- Given a Firefox profile name, return its directory\n- https://metacpan.org/dist/Firefox-Util-Profile\n\no Mozilla::CA:\n- Mozilla's CA cert bundle in PEM format\n- https://metacpan.org/dist/Mozilla-CA\n\no Selenium::Remote::Driver:\n- Perl Client for Selenium Remote Driver\n- https://metacpan.org/pod/Selenium::Remote::Driver\n\no Vivaldi::Util::Profile:\n- List available Vivaldi profiles\n- https://metacpan.org/pod/Vivaldi::Util::Profile\n\no Weasel::Driver::Selenium2:\n- Weasel driver wrapping Selenium::Remote::Driver\n- https://metacpan.org/dist/Weasel-Driver-Selenium2\n\no WWW::Mechanize::Chrome:\n- Automate the Chrome browser\n- https://metacpan.org/pod/WWW::Mechanize::Chrome\n\no WWW::Mechanize::Chrome::DOMops:\n- Operations on the DOM loaded in Chrome\n- https://metacpan.org/dist/WWW-Mechanize-Chrome-DOMops\n",
        "title": "BrowserStuff",
        "modified": "20250712065758943",
        "created": "20240121223908328"
    },
    {
        "text": "\"\"\"\no Install all the new builtins from the builtin namespace:\n- use 5.40.0;\n- And then to get the list below:\n- use builtins;\n- And later make them vanish:\n- no builtins;\n\no Provides:\n- blessed\n- ceil\n- created_as_number\n- created_as_string\n- false\n- floor\n- indexed\n- is_bool\n- is_weak\n- refaddr\n- reftype\n- trim\n- true\n- unweaken\n- weaken\n",
        "title": "builtins",
        "modified": "20250709065000869",
        "created": "20230609060037236"
    },
    {
        "text": "\"\"\"\no Business::ISBN:\n- Work with International Standard Book Numbers\n- https://metacpan.org/dist/Business-ISBN\n- Contains Business::ISBN10 and Business::ISBN13\n\no Business::ISBN::Data:\n- Data pack for Business::ISBN\n- https://metacpan.org/dist/Business-ISBN-Data\n\no Business::ISMN:\n- Work with International Standard Music Numbers\n- https://metacpan.org/dist/Business-ISMN\n\no Business::ISSN:\n- Perl extension for International Standard Serial Numbers\n- https://metacpan.org/dist/Business-ISSN\n\no Business::Tax::VAT::Validation:\n- Validate EU VAT numbers against VIES/HMRC\n- https://metacpan.org/dist/Business-Tax-VAT-Validation\n",
        "title": "BusinessApps",
        "modified": "20250521224509225",
        "created": "20250128022527657"
    },
    {
        "text": "\"\"\"\no See also:\n- Curio\n- Bread::Board\n- MooX::Singleton\n- CHI::Driver::SharedMem\n\no Cache::FastMmap:\n- Uses an mmap'ed file to act as a shared memory interprocess cache\n- https://metacpan.org/dist/Cache-FastMmap\n\no Cache::File::Simple:\n- Dead simple file based caching meachanism\n- https://metacpan.org/pod/Cache::File::Simple\n\no Cache::Memcached::Fast:\n- Perl client for memcached, in C language\n- https://metacpan.org/pod/Cache::Memcached::Fast\n- The API is largely compatible with Cache::Memcached, the original pure Perl client\n- See Debian.Wiki.html's Installation para for installation of memcached\n- See http://www.memcached.org for the memory cache daemon\n\no Cache::Memcached::PDeque:\n- Implements a priority deque using memcached as storage\n- https://metacpan.org/dist/Cache-Memcached-PDeque\n- This is an implementation of a double-ended queue, with support for priorities\n\no CHI:\n- Unified cache handling interface\n- https://metacpan.org/pod/CHI\n\no Class::Simple::Cached:\n- Cache messages to an object\n- https://metacpan.org/dist/Class-Simple-Cached\n\no Class::Simple::Readonly::Cached:\n- Cache messages to an object\n- https://metacpan.org/pod/Class::Simple::Readonly::Cached\n\no Data::Buffer:\n- Read/write buffer class\n- https://metacpan.org/pod/Data::Buffer\n\no HTTP::Cache::Transparent:\n- Cache the result of http get-requests persistently\n- https://metacpan.org/pod/HTTP::Cache::Transparent\n\no LCC:\n- Content Provider Modules for the Local Content Cache system\n- https://metacpan.org/pod/LCC\n- See also https://sourceforge.net/projects/lococa/\n\no Memoize:\n- Make functions faster by trading space for time\n- https://metacpan.org/pod/Memoize\n\no  Net::Clacks\n- Fast client/server interprocess messaging and memcached replacement\n- https://metacpan.org/dist/Net-Clacks\n",
        "title": "CachingStuff",
        "modified": "20250709065601616",
        "created": "20240706053046021"
    },
    {
        "text": "\"\"\"\no  Captcha::Stateless::Text\n- Stateless, text-based CAPTCHAs\n- https://metacpan.org/dist/Captcha-Stateless-Text\n",
        "title": "CaptchaStuff",
        "modified": "20240706052627097",
        "created": "20240706052320581"
    },
    {
        "text": "\"\"\"\no See SwitchStatements\n",
        "title": "CaseStatement",
        "modified": "20240709225546561",
        "created": "20210821084525896"
    },
    {
        "text": "\"\"\"\no Changes (module):\n- Changes file management\n- Subclasses: Changes::Change, Changes::Group, Changes::NewLine, Changes::Release, Changes::Version\n\no Module::Metadata::Changes:\n- Manage machine-readable Changes/CHANGES/Changelog.ini files\n- https://metacpan.org/pod/Module::Metadata::Changes\n- Contains Ron's simple home-grown change file manager called ini.report.pl:\n",
        "title": "ChangesFiles",
        "modified": "20250709071151616",
        "created": "20231012000752932"
    },
    {
        "text": "\"\"\"\no See also:\n- Chart\n- Chart::Clicker\n- Chart::GGPlot\n- https://en.wikipedia.org/wiki/Ggplot2\n- Chart::Plotly\n- https://plot.ly/javascript/reference/\n- Color::Library\n- Convert::Color\n- Imager::Plot\n- VS::Chart\n- [[Color]]\n- [[Graphs]]\n- PdfStuff\n\no Alien::CFITSIO:\n- Build and Install the CFITSIO library\n- https://metacpan.org/pod/Alien::CFITSIO\n- See also https://heasarc.gsfc.nasa.gov/docs/software/fitsio/fitsio.html\n\no App::BlurFill:\n- A simple command line tool to create a blurred background image\n- https://metacpan.org/dist/App-BlurFill\n- Command line access to a Dancer app\n- curl -OJ -X POST http://localhost:5000/blur -F \"image=@input.jpg\"\n\no App::gimpgitbuild:\n- Build GIMP from git\n- https://metacpan.org/pod/App::gimpgitbuild\n\no App::ImageMagickUtils\n- https://metacpan.org/dist/App-ImageMagickUtils\n\no App::Image::Generator:\n- Perl class for image-generator application\n- https://metacpan.org/dist/App-Image-Generator\n\no App::imgsize:\n- Show dimensions of image files\n- https://metacpan.org/pod/App::imgsize\n\no Cairo:\n- Perl interface to the cairo 2d vector graphics library\n- https://metacpan.org/pod/Cairo\n\no File::LibMagic:\n- Determine MIME types of data or files using libmagic\n- https://metacpan.org/pod/File::LibMagic\n\no GD:\n- Interface to Gd Graphics Library\n- https://metacpan.org/pod/GD\n\no GD::Polyline:\n- Polyline object and Polygon utilities (including splines) for use with GD\n- https://metacpan.org/pod/GD::Polyline\n\no GD::Simple:\n- Simplified interface to GD library\n- https://metacpan.org/pod/GD::Simple\n- Tutorial on usage at http://perlmaven.com/drawing-images-using-gd-simple\n\no GD::SVG:\n- Seamlessly enable SVG output from scripts written using GD\n- https://metacpan.org/pod/GD::SVG\n\no Gimp:\n- Write GIMP extensions/plug-ins/load- and save-handlers in Perl\n- https://metacpan.org/pod/Gimp\n- Git repo for the module is at https://gitlab.gnome.org/GNOME/gimp-perl\n\no HTML::D3:\n- A simple Perl module for generating bar charts using D3.js\n- https://metacpan.org/dist/HTML-D3\n\no Image::Base\n- And it's submodules\n\no Image::Base::GD:\n- Draw images with GD\n\no Image::Dot:\n- Create 1x1 pixel image files (pure-perl)\n- https://metacpan.org/pod/Image::Dot\n\no Image::ExifTool\n- The command line tool exiftool has many, many options and supports a vast array of types\n- https://metacpan.org/dist/Image-ExifTool\n- https://exiftool.org/:\n- http://exiftool.sourceforge.net/\n\no Image::Info:\n- Extract meta information from image files\n- https://metacpan.org/dist/Image-Info\n\no Image::JPEG::Size:\n- Find the size of JPEG images\n- https://metacpan.org/dist/Image-JPEG-Size\n\no ImageMagick:\n- sudo apt-get install imagemagick\n- https://imagemagick.org/Usage/\n- Site has a list of exploits and many examples\n\no Image::Magick::Safer:\n- Wrap Image::Magick Read method to check magic bytes\n- https://metacpan.org/dist/Image-Magick-Safer\n\no Image::Magick::Thumbnail::PDF:\n- Make thumbnail of a page in a pdf document\n\no Image::PNG::Libpng:\n- Perl interface to the C library libpng\n- https://metacpan.org/pod/Image::PNG::Libpng\n\no Image::PNG::QRCode:\n- ABANDONED - Make PNG images containing QR codes from your text\n- https://metacpan.org/dist/Image-PNG-QRCode\n\no Image::Synchronize:\n- Synchronize filesystem modification timestamps of images, movies, and related files\n- https://metacpan.org/dist/Image-Synchronize\n\no Imager:\n- Perl extension for Generating 24 bit Images\n- https://metacpan.org/dist/Imager\n- To get my demo test.imager.tiles.pl of Imager running, I had to do:\n- sudo aptitude install libpng-dev\n- aptitude install libfreetype6-dev\n- aptitude install libfont-freetype-perl\n- Probably the 1st and 3rd only are required\n\no Imager::File::QOI:\n- Read and write QOI image files\n- https://metacpan.org/dist/Imager-File-QOI\n\no Imager::Font::FT2:\n- Font support using FreeType 2\n- https://metacpan.org/pod/Imager::Font::FT2\n\no PDL::Drawing::Prima:\n- PDL-aware drawing functions for Prima widgets\n- https://metacpan.org/dist/PDL-Drawing-Prima\n\no PDL::Graphics::PLplot:\n- https://metacpan.org/pod/PDL::Graphics::PLplot\n- Object-oriented interface from perl/PDL to the PLPLOT plotting library\no PGPLOT:\n- Allow subroutines in the PGPLOT graphics library to be called from Perl\n- https://metacpan.org/dist/PGPLOT\n\no Prima:\n- A Perl graphic toolkit\n- https://metacpan.org/pod/Prima\n\no Prima::Cairo:\n- Prima extension for Cairo drawing\n- https://metacpan.org/pod/Prima::Cairo\n\no Resizing images:\n- Calculate dimensions of image/video resized by ImageMagick-like geometry specification \n- Math::Image::CalcResized\n\no SVG:\n- Perl extension for generating Scalable Vector Graphics (SVG) documents\n- https://metacpan.org/pod/SVG\n\no SVG::Timeline:\n- Create SVG timeline charts\n- https://metacpan.org/dist/SVG-Timeline\n\no SVG::TrafficLight:\n- Perl extension to produce SVG diagrams of traffic lights\n- https://metacpan.org/dist/SVG-TrafficLight\n",
        "title": "ChartingAndPlotting",
        "modified": "20250712062815003",
        "created": "20210729071550324"
    },
    {
        "text": "\"\"\"\no Eliza::Chatbot:\n- Eliza chatbot\n- https://metacpan.org/dist/Eliza-Chatbot\n",
        "title": "ChatBots",
        "modified": "20250513212647876",
        "created": "20250513212609322"
    },
    {
        "text": "\"\"\"\no See also:\n- AnyEvent::Run\n- AnyEvent::Util\n- Argv\n- Capture::Tiny\n- Child\n- Forks::Super\n- [[HTTPHandling]]\n- [[IO]]\n- IO::Pipe\n- IPC::Capture\n- IPC::Cmd\n- IPC::Command::Multiplex\n- IPC::Exe\n- IPC::Open3\n- IPC::Open3::Simple\n- IPC::Run\n- IPC::Run3\n- IPC::RunSession::Simple\n- IPC::ShellCmd\n- IPC::System::Simple\n- ParallelProcessing\n- POE::Pipe::TwoWay\n- Proc::Background\n- Proc::Fork\n- Proc::ProcessTable::Colorizer\n- Proc::Spawn\n- Spawn::Safe\n- System::Command\n\no App::ProcUtils:\n- Command line utilities related to processes\n- https://metacpan.org/dist/App-ProcUtils\n\no Command::Runner:\n- Run external commands and Perl code refs\n- https://metacpan.org/dist/Command-Runner\n\no HTTP::Daemon:\n- A simple http server class\n- https://metacpan.org/pod/HTTP::Daemon\n\no Forks::Super:\n- Extensions and convenience methods to manage background processes\n- https://metacpan.org/pod/Forks::Super\n- Provides new definitions for the Perl functions fork, wait, and waitpid with richer functionality\n\no IPC::Cmd:\n- Finding and running system commands made easy\n- https://metacpan.org/pod/IPC::Cmd\n- system() and background procs w/ piping, redirs, ptys (Unix, Win32)\n- Can use IPC::Run\n\no IPC::Run\n- system() and background procs w/ piping, redirs, ptys (Unix, Win32)\n- https://metacpan.org/pod/IPC::Run\n- IPC::Run is a much more complete solution for running child processes (than the next)\n\no Proc::Background:\n- Much simpler than the above\n- https://metacpan.org/dist/Proc-Background\n- Supports Linux and MS Windows\n- Refers to the previous module\n- Refers to the Win32 module below\n\no POSIX::Run::Capture:\n- Run command and capture its output\n- https://metacpan.org/dist/POSIX-Run-Capture\n\no Proc::Fork:\n- Simple, intuitive interface to the fork() system call\n- https://metacpan.org/pod/Proc::Fork\n\no Proc::Forkmap:\n- Map with forking\n- https://metacpan.org/dist/Proc-Forkmap\n\no Proc::Govern:\n- Run child process and govern its various aspects\n- https://metacpan.org/dist/Proc-Govern\n\no Sys::Cmd:\n- Run a system command or spawn a system processes\n- https://metacpan.org/pod/Sys::Cmd\n\no Workflow::Inotify:\n- Script to daemonize a Linux::Inotify2 handler\n- https://metacpan.org/pod/Workflow::Inotify\n\no Win32::ShellQuote\n- Everyone quotes command line arguments the wrong way\n- https://docs.microsoft.com/en-us/archive/blogs/twistylittlepassagesallalike/everyone-quotes-command-line-arguments-the-wrong-way\n",
        "title": "ChildProcesses",
        "modified": "20250710053218849",
        "created": "20211021064151042"
    },
    {
        "text": "\"\"\"\no Jargon alert: Class aka OO aka Object Orientated\n\no Badger:\n- Perl Application Programming Toolkit\n- https://metacpan.org/dist/Badger\n\no Class::EHierarchy:\n- This is intended for use as a base class for objects that need support for class or object hierarchies\n- https://metacpan.org/pod/Class::EHierarchy\n- See also https://metacpan.org/pod/Parse::PlainConfig\n\no Class::Inspector:\n- Get information about a class and its structure\n- https://metacpan.org/pod/Class::Inspector\n\no Feature::Compat::Class:\n- Make class syntax available\n- https://metacpan.org/pod/Feature::Compat::Class\n- Probably prefer this to Object::Pad, but is not as featureful as the latter\n\no Hash::AsObject:\n- Treat hashes as objects, with arbitrary accessors/mutators\n- https://metacpan.org/pod/Hash::AsObject\n- But see Object::Adhoc\n\no Hash::Objectify:\n- Create objects from hashes on the fly\n- https://metacpan.org/pod/Hash::Objectify\n- But see Object::Adhoc\n\no Moo:\n- MooX::Press, which contains Zydeco::Lite\n- MooX::Pression\n- MooX::Singleton\n- Zydeco, which requires MooX::Press\n\no MooX::Keyword::Field:\n- Field attributes that cannot be set via the constructor\n- https://metacpan.org/pod/MooX::Keyword::Field\n\no Object::Adhoc:\n- Make objects without the hassle of defining a class first\n- https://metacpan.org/dist/Object-Adhoc\n- POD contains an important See Also\n\no Object::Anon:\n- Create objects on the fly\n- https://metacpan.org/pod/Object::Anon\n\no Object::Pad:\n- This module is essentially the basis of Perl's new keyword 'class'!\n- https://metacpan.org/dist/Object-Pad\n- A simple syntax for lexical field-based objects\n- https://metacpan.org/dist/Object-Pad/view/lib/Object/Pad/Guide/MigratingFromClassicalPerl.pod\n\no Object::Result:\n- Allow subs to build and return objects on-the-fly\n- https://metacpan.org/pod/Object::Result\n- But see Object::Adhoc\n\no Object::Simple:\n- Simplest class builder, Mojo::Base porting, fast and less memory\n- https://metacpan.org/pod/Object::Simple\n\no Quiq:\n- Class library for rapid development\n- https://metacpan.org/dist/Quiq\n",
        "title": "ClassStuff",
        "modified": "20250703012452977",
        "created": "20230609054703570"
    },
    {
        "text": "\"\"\"\no App::ClipboardUtils:\n- CLI utilities related to clipboard\n- https://metacpan.org/dist/App-ClipboardUtils\n\no Clipboard:\n- Copy and paste with any OS\n- It ships with 5 command line utilities for clipboard manipulation\n- https://metacpan.org/dist/Clipboard\n\no Clipboard::Any:\n- Common interface to clipboard manager functions\n- https://metacpan.org/dist/Clipboard-Any\n",
        "title": "ClipBoard",
        "modified": "20250530071820771",
        "created": "20240408005945394"
    },
    {
        "text": "\"\"\"\no http://www.html-tidy.org/\n- https://github.com/htacg/tidy-html5/issues/\n\no tidy [-o out_file] [-ascii | -utf8] in_file\n\no https://html5.validator.nu/\n\no Code::TidyAll:\n- Engine for tidyall, your all-in-one code tidier and validator\n- https://metacpan.org/pod/Code::TidyAll\n- Runs tidyall, which contains these pugins:\n<pre>\n    Perl: perlcritic, perltidy, perltidy-sweet\n    Pod: podchecker, podspell, podtidy\n    Mason: masontidy\n    JavaScript: js-beautify, jshint, jslint\n    JSON: JSON\n    CSS: cssunminifier\n    PHP: phpcs\n    Misc: Code::TidyAll::Plugin::SortLines\n</pre>\n\no Perl::Critic::Grape:\n- Additional Perl::Critic policies\n- https://metacpan.org/dist/Perl-Critic-Grape\n",
        "title": "CodeTidyingCode",
        "modified": "20250623015526166",
        "created": "20211101070351904"
    },
    {
        "text": "\"\"\"\no Use 'use standard' and Test::V0\n- For the former, see next item\n- For the latter, see TestingHelp\n\no Guacamole:\n- A Perl parser. Provided 'use standard'\n- https://metacpan.org/pod/standard\n\no Use Type::Tiny:\n- Contains Types::Standard\n- See DataTypes\n",
        "title": "CodingStyle",
        "modified": "20240229040008518",
        "created": "20240229035313528"
    },
    {
        "text": "\"\"\"\no See also:\n- ChartingAndPlotting\n- [[Graphs]]\n- PdfStuff\n\no ANSI::Palette:\n- ANSI Color palettes\n- https://metacpan.org/dist/ANSI-Palette\n\no App::ANSIColorUtils:\n- Utilities related to ANSI color\n- https://metacpan.org/dist/App-ANSIColorUtils\n\no Colors:\n- https://imagemagick.org/script/color.php\n\no Color::ANSI::Util:\n- Routines for dealing with ANSI colors\n- https://metacpan.org/pod/Color::ANSI::Util\n\no Color::Library:\n- An easy-to-use and comprehensive named-color library\n\no Color::RGB::Util:\n- Utilities related to RGB colors\n- https://metacpan.org/dist/Color-RGB-Util\n\no Color::Spectrum:\n- Just another HTML color generator\n- https://metacpan.org/dist/Color-Spectrum\n\no Colouring::In:\n- Color or colour\n- https://metacpan.org/pod/Colouring::In\n\no Colouring::In::XS:\n- Color or colour\n- https://metacpan.org/pod/Colouring::In::XS\n\no Graphics::ColorNamesLite::All:\n- Lots of color names and equivalent RGB values (lite version)\n- https://metacpan.org/dist/Graphics-ColorNamesLite-All\n- There is also Graphics::ColorNamesLite::All\n- https://metacpan.org/dist/Graphics-ColorNamesLite-EN\n\no Graphics::Toolkit::Color:\n- Color palette creation helper\n- https://metacpan.org/dist/Graphics-Toolkit-Color\n\no Term::ANSI::Sprintf:\n- Sprintf with ANSI colors\n- https://metacpan.org/dist/Term-ANSI-Sprintf\n\no Term::ANSIColor:\n- Color screen output using ANSI escape sequences\n- https://metacpan.org/pod/Term::ANSIColor\n\no Term::Chrome:\n- DSL for colors and other terminal chrome\n- https://metacpan.org/pod/Term::Chrome\n\no Term::ExtendedColor:\n- Color screen output using 256 colors\n- https://metacpan.org/pod/Term::ExtendedColor\n",
        "title": "Color",
        "modified": "20250620023135815",
        "created": "20200412013735187"
    },
    {
        "text": "\"\"\"\no See also:\n- DataTypes, eg for Rope\n\no App::optex:\n- General purpose command option wrapper\n- https://metacpan.org/dist/App-optex\n\no App::cat::v:\n- cat-v command implementation\n- https://metacpan.org/dist/App-cat-v\n\no CLI::Helpers:\n- Subroutines for making simple command line scripts\n- https://metacpan.org/dist/CLI-Helpers\n\no Getopt::App:\n- Write and test your script with ease\n- Helps you structure your scripts and integrates Getopt::Long with a very simple API\n- Makes it very easy to test your script, since the script file can be sourced without actually being run\n- https://metacpan.org/dist/Getopt-App\n\no Getopt::Class:\n- Extended dictionary version of Getopt::Long\n- https://metacpan.org/dist/Getopt-Class\n- Fancy!\n\no Getopt::EX:\n- Getopt Extender\n- https://metacpan.org/pod/Getopt::EX\n\no Getopt::EX::Config:\n- Getopt::EX module configuration interface\n- https://metacpan.org/pod/Getopt::EX::Config\n\no Getopt::EX::i18n:\n- General i18n module\n- https://metacpan.org/dist/Getopt-EX-i18n\n\no Getopt::Lazier:\n- Lazy Getopt-like command-line options and argument parser\n- https://metacpan.org/pod/Getopt::Lazier\n\no OptArgs2:\n- Command-line argument and option processor\n- https://metacpan.org/pod/OptArgs2\n\no Rope::Cmd:\n- Command Line Applications via Rope\n- https://metacpan.org/dist/Rope-Cmd\n\no Sample code from Dave Cross:\n<pre>#!/usr/bin/env bash\nBINDIR=`dirname $0`\nBINDIR=\"$BINDIR/../bin\"\nTIMELINE=\"$BINDIR/timeline\"\n$TIMELINE --years_per_grid=10 < $BINDIR/../examples/henry-viii.dat > henry-viii.svg\n</pre>\n\no Term::ReadLine:\n- Perl interface to various readline packages. If no real package is found, substitutes stubs instead of basic functions\n- https://metacpan.org/dist/Term-ReadLine\n\no Term::ReadLine::Gnu:\n- Perl extension for the GNU Readline/History Library\n- https://metacpan.org/pod/Term::ReadLine::Gnu\n",
        "title": "CommandLineStuff",
        "modified": "20250710230127693",
        "created": "20220518014106038"
    },
    {
        "text": "\"\"\"\no See ZipFiles\n",
        "title": "CompressionUtils",
        "modified": "20250403225748279",
        "created": "20240706053645813"
    },
    {
        "text": "\"\"\"\no See also:\n- [[SSH]]\n\no Advanced::Config:\n- Perl module reads configuation files from various sources\n- https://metacpan.org/pod/Advanced::Config\n- Advanced::Config is an enhanced implementation of a config file manager that allows you to manage almost any config file as a true object with a common interface\n\no App::Cme:\n- Configuration data checker or editor based on Config::Model\n- https://metacpan.org/dist/App-Cme\n- Contains the cms command\n\no Configuration Files:\n- Hint: Start with Config::IOD::Reader below\n- App::Options - Combine command line options, environment vars, and option file values (for program configuration). Also discusses a range of other config-type modules\n- Config::ROFL - Yet another config module. Uses Config::ZOMG\n- Config::ZOMG - Yet another layer over Config::Any\n- Config::Any - Load configuration from different file formats, transparently\n- Config::Dot\n- ConfigReader::Simple - https://metacpan.org/pod/ConfigReader::Simple\n- Config::Structured - Provides generalized and structured configuration value access \n- https://metacpan.org/dist/Config-Structured\n- Config::Tiny\n- Config::Tiny::Ordered\n- Config::Simple::Conf\n- Config::Parser\n- Config::INI::Tiny\n- Config::INI::RefVars - INI file reader, allows the referencing of INI and environment variables within the INI file\n- Config::Param - All you want to do with parameters for your program (or someone else's)\n  Also discusses a range of other config-type modules\n- Config::Structured - Provides generalized and structured configuration value access\n- https://metacpan.org/pod/Config::Structured\n- Parse::PlainConfig - Provides hierarchical config file structures. See also Parse::PlainConfig in ClassStuff\n- https://metacpan.org/pod/Parse::PlainConfig\n\no Config::Abstraction:\n- Configuration Abstraction Layer\n- https://metacpan.org/pod/Config::Abstraction\n\no Config::General:\n- Generic Config Module\n- Has many features\n- https://metacpan.org/dist/Config-General\n\no Config::IOD:\n- Read and write IOD/INI configuration files\n- This module is a round-trip parser for IOD configuration format\n- If you only need to read IOD configuration files, you might want to use Config::IOD::Reader instead\n- https://metacpan.org/pod/Config::IOD\n- See IOD below\n\no Config::IOD::Reader:\n- Read IOD/INI configuration files\n- It is a minimalist alternative to the more fully-featured Config::IOD\n- https://metacpan.org/pod/Config::IOD::Reader\n- See IOD below\n\no Config::Model:\n- A framework to validate, migrate and edit configuration files\n- https://metacpan.org/dist/Config-Model\n\no Config::Model::Itself:\n- Model (or schema) editor for Config::Model\n- https://metacpan.org/dist/Config-Model-Itself\n\no Config::Model::OpenSsh:\n- https://metacpan.org/dist/Config-Model-OpenSsh\n- A graphical config editor for /etc/ssh/sshd_config, /etc/ssh/ssh_config and ~/.ssh/config\n\no Config::Model::Systemd:\n- Editor and validator for systemd configuration files\n- https://metacpan.org/dist/Config-Model-Systemd\n\no Config::MorePerl:\n- Convenient and flexible config loader in perl format\n- https://metacpan.org/dist/Config-MorePerl\n\no Env::Dot:\n- Read environment variables from a .env file\n- https://metacpan.org/pod/Env::Dot\n\no ENV::Util:\n- https://metacpan.org/pod/ENV::Util\n- Parse prefixed environment variables and dotenv (.env) files into Perl\n\no IOD:\n- IOD (INI On Drugs) file format specification\n- https://metacpan.org/pod/IOD\n- See Config::IOD and Config::IOD::Reader above\n\no TOML::Tiny:\n- TOML aims to be a minimal configuration file format that's easy to read due to obvious semantics. TOML is designed to map unambiguously to a hash table\n- https://github.com/toml-lang/toml\n- See also the next 2 modules\n- https://metacpan.org/pod/TOML\n- https://metacpan.org/pod/TOML::Parser\n- https://github.com/toml-lang/toml/wiki\n",
        "title": "ConfigFiles",
        "modified": "20250528011419057",
        "created": "20211025035342798"
    },
    {
        "text": "\"\"\"\no Const::Exporter\n- Declare constants for export\n\no Constant::Export::Lazy\n- This module only allows you to declare function symbol constants, akin to the constant module by defining functions that are only called as needed. The interface is rather complex\n\no Constant::Exporter\n- This module only allows you to declare function symbol constants, akin to the constant module, although you can specify tags\n\no Const::Fast\n- Facility for creating read-only scalars, arrays, and hashes\n- https://metacpan.org/dist/Const-Fast\n- But see Const::XS for speed tests\n\no Const::Fast::Exporter\n-This module will export all constants declared in the package's namespace\n\no Const::XS:\n- Facility for creating read-only scalars, arrays, hashes\n- https://metacpan.org/dist/Const-XS\n\no Exporter::Constants\n- This module only allows you to declare function symbol constants, akin to the constant module, without tags\n\no Readonly:\n- Facility for creating read-only scalars, arrays, hashes\n- https://metacpan.org/dist/Readonly\n- But see Const::XS for speed tests\n\no Readonly::Values::Months:\n- Months Constants\n- https://metacpan.org/dist/Readonly-Values-Months\n",
        "title": "ConstantStuff",
        "modified": "20250625000149680",
        "created": "20230612013501835"
    },
    {
        "text": "\"\"\"\no Run utility corelist as:\n- corelist Some::Module\n- Tells you whether or not that module is shipped as part of code\n",
        "title": "CoreList",
        "modified": "20250528011529905",
        "created": "20220329000213737"
    },
    {
        "text": "\"\"\"\no https://ovid.github.io/articles/corinna-in-the-perl-core.html\n\no https://andrewshitov.com/2023/07/06/built-in-classes-in-perl-5-38/\n",
        "title": "Corinna",
        "modified": "20230711060803417",
        "created": "20230711060717000"
    },
    {
        "created": "20200206233503146",
        "text": "\"\"\"\no See also:\n- https://metacpan.org\n- https://fastapi.metacpan.org\n\no A daily report on new releases:\n- https://cpanscan.com/\n- Nice!\n\no App::CPAN::Get:\n- Tool to fetch module from CPAN archive\n- https://metacpan.org/pod/App::CPAN::Get\n\no App::cpm:\n- A fast CPAN module installer\n- https://metacpan.org/dist/App-cpm\n\no App::cpx:\n- Install and execute CPAN package binaries\n- https://metacpan.org/dist/App-cpx\n\no App::lcpan:\n- Manage your local CPAN mirror\n- https://metacpan.org/pod/lcpan\n\no App::sourcepan:\n- Modulino implementation of soucepan\n- https://metacpan.org/dist/App-sourcepan\n- Contains  sourcepan, to fetch source archives from CPAN\n\no CPAN::Changes:\n- Parser for CPAN style change logs\n- https://metacpan.org/pod/CPAN::Changes\n\no CPAN::Maker:\n- Create a CPAN distribution\n- https://metacpan.org/dist/CPAN-Maker\n\no CPAN::Mini::Inject:\n- Inject modules into a CPAN::Mini mirror.\n- https://metacpan.org/dist/CPAN-Mini-Inject\n\no CPAN::Perl::Releases:\n- Mapping Perl releases on CPAN to the location of the tarballs\n- https://metacpan.org/dist/CPAN-Perl-Releases\n\no CPAN::Requirements::Dynamic:\n- Dynamic prerequisites in meta files\n- https://metacpan.org/dist/CPAN-Requirements-Dynamic\n\no CPAN::Testers::Schema:\n- Schema for CPANTesters database processed from test reports\n- https://metacpan.org/dist/CPAN-Testers-Schema\n\no CPAN Testers wiki:\n- http://cpantesters.org/page/help.html\n\no CPAN::Testers::ParseReport:\n- Parse reports to www.cpantesters.org from various sources\n- https://metacpan.org/dist/CPAN-Testers-ParseReport\n\no CPAN::UnsupportedFinder:\n- Identify unsupported or poorly maintained CPAN modules\n- https://metacpan.org/pod/CPAN::UnsupportedFinder\n\no Custom CPAN modules\n- https://perlmaven.com/pinto-tutorial\n- https://pinguinorodriguez.cl/blog/bundling-vendored-modules/\n\no CPAN Tester results:\n- http://fast-matrix.cpantesters.org/?dist=libwww-perl\n\no CPANPLUS::Dist::Debora:\n- Create Debian or RPM packages from Perl modules\n- https://metacpan.org/dist/CPANPLUS-Dist-Debora\n\no MetaCPAN::Client:\n- A comprehensive, DWIM-featured client to the MetaCPAN API\n- https://metacpan.org/dist/MetaCPAN-Client\n\no MetaCPAN::Role:\n- A collection of roles useful to MetaCPAN project\n- https://metacpan.org/dist/MetaCPAN-Role\n",
        "title": "CPAN",
        "modified": "20250714073357356"
    },
    {
        "text": "\"\"\"\no The docs here were copied from Google's Gemini, when I asked it how to generate a cpanfile\n\no CPAN::Audit:\n- Audit CPAN distributions for known vulnerabilities\n- https://metacpan.org/dist/CPAN-Audit\n- This module contains cpan-audit, which uses a cpanfile or a cpanfile.snapshot file\n\no Docs:\n<pre>\n**1. Manual Creation**\n\n* **Create a file named `cpanfile`:** This file will reside in the root directory of your project.\n* **Add dependencies:**\n    * Each line in the `cpanfile` represents a dependency.\n    * Use the following syntax: `require 'ModuleName';`\n    * Example:\n      ```perl\n        require 'JSON';\n        require 'Template';\n        require 'DateTime';\n        require 'DBIx::Class';\n        `\n\n**2. Using `Mojolicious::Command::Author::generate::cpanfile`**\n\n* **Install the Mojolicious framework (if not already installed):**\n    ```bash\n    cpanm Mojolicious\n    ```\n* **Generate the `cpanfile`:**\n    ```bash\n    mojo generate cpanfile\n    ```\n    This command analyzes your Perl source code files (usually located in the `lib` directory) to identify used modules and generates the `cpanfile` accordingly.\n\n**3. Using Carton**\n\n* **Install Carton:**\n    ```bash\n    cpanm Carton\n    ```\n* **Create a `cpanfile`:**\n    ```bash\n    carton init\n    ```\n    This creates a basic `cpanfile` with some default settings. You can then manually add your project's specific dependencies.\n\n**Key Considerations**\n\n* **Version Constraints:** You can specify version constraints for your dependencies to ensure compatibility and stability. For example:\n    ```perl\n    require 'Module::Name' => '>= 1.2.3';\n    ```\n* **Local Modules:** If you have local modules that are not on CPAN, you can add them to your `cpanfile` using special directives.\n* **Testing:** After generating your `cpanfile`, always test your application to ensure all dependencies are installed correctly and your application functions as expected.\n\n**Example `cpanfile`**\n\n```perl\nrequire 'JSON';\nrequire 'Template' => '>= 2.18';\nrequire 'DateTime';\nrequire 'DBIx::Class';\nrequire 'MyLocalModule'; # A hypothetical local module\n```\n\nBy using a `cpanfile`, you can easily manage and install the necessary dependencies for your Perl projects, making your development process more efficient and reproducible.\n</pre>\n",
        "title": "CpanFile",
        "modified": "20250520023712383",
        "created": "20250115212848154"
    },
    {
        "text": "\"\"\"\no Shedule::Cron\n- Use it to create a daemon\n",
        "title": "cron",
        "modified": "20220913061121200",
        "created": "20220913061044632"
    },
    {
        "text": "\"\"\"\no This big topic is under active discussion:\n- https://www.nntp.perl.org/group/perl.perl5.porters/2024/11/msg269033.html\n\no App::bcrypt:\n- https://metacpan.org/dist/App-bcrypt\n\no Authen::Passphrase:\n- Hashed passwords/passphrases as objects\n- https://metacpan.org/pod/Authen::Passphrase\n<pre>\n\nModules Authen::Passphrase\nhashed passwords/passphrases as objects\nAuthen::Passphrase::AcceptAll\naccept any passphrase\nAuthen::Passphrase::BigCrypt\npassphrases using bigcrypt algorithm\nAuthen::Passphrase::BlowfishCrypt\npassphrases using the Blowfish-based Unix crypt()\nAuthen::Passphrase::Clear\ncleartext passphrases\nAuthen::Passphrase::Crypt16\npassphrases using Ultrix crypt16 algorithm\nAuthen::Passphrase::DESCrypt\npassphrases using the DES-based Unix crypt()\nAuthen::Passphrase::EggdropBlowfish\npassphrases using Eggdrop's blowfish.mod\nAuthen::Passphrase::LANManager\npassphrases using the LAN Manager hash algorithm\nAuthen::Passphrase::LANManagerHalf\npassphrases using half the LAN Manager algorithm\nAuthen::Passphrase::MD5Crypt\npassphrases using the MD5-based Unix crypt()\nAuthen::Passphrase::MySQL323\npassphrases using the MySQL v3.23 algorithm\nAuthen::Passphrase::MySQL41\npassphrases using the MySQL v4.1 algorithm\nAuthen::Passphrase::NTHash\npassphrases using the NT-Hash algorithm\nAuthen::Passphrase::NetscapeMail\npassphrases using Netscape Mail Server's method\nAuthen::Passphrase::PHPass\npassphrases using the phpass algorithm\nAuthen::Passphrase::RejectAll\nreject all passphrases\nAuthen::Passphrase::SaltedDigest\npassphrases using the generic salted digest algorithm\nAuthen::Passphrase::VMSPurdy\npassphrases with the VMS Purdy polynomial system\n</pre>\n\no Authen::Passphrase::Argon2:\n- Store and check password using Argon2\n- This is an attempt to make Crypt::Argon2 compliant with Authen::Passphrase\n- https://metacpan.org/dist/Authen-Passphrase-Argon2\n\no Circle::Chain:\n- The Circle::Chain SDks\n- See also Circle::User, Circle::Wallet, Circle::Block, Circle::Node modules\n\no Crypt::Argon2:\n- Perl interface to the Argon2 key derivation functions\n- https://metacpan.org/dist/Crypt-Argon2\n\no Crypt::Bear:\n- BearSSL for Perl\n- https://metacpan.org/dist/Crypt-Bear\n\no Crypt::CBC:\n- Encrypt Data with Cipher Block Chaining Mode\n- https://metacpan.org/pod/Crypt::CBC\n\no Crypt::Credentials:\n- Manage credential files\n- https://metacpan.org/pod/Crypt::Credentials\n\no Crypt::Curve25519:\n- Generate shared secret using elliptic-curve Diffie-Hellman function\n- https://metacpan.org/dist/Crypt-Curve25519\n\no Crypt::DES:\n- Perl DES encryption module\n- https://metacpan.org/pod/Crypt::DES\n- Warning: Do note that DES only uses 8 byte keys and only works on 8 byte data blocks. If you're intending to encrypt larger blocks or entire files, please use Crypt::CBC in conjunction with this module\n\no Crypt::DES_EDE3:\n- Triple-DES EDE encryption/decryption\n- https://metacpan.org/dist/Crypt-DES_EDE3\n- This is a wrapper around Crypt::DES\n\no Crypt::Diceware:\n- Random passphrase generator loosely based on the Diceware algorithm\n- https://metacpan.org/pod/Crypt::Diceware\n\no Crypt::DSA:\n- DSA Signatures and Key Generation\n- Crypt::DSA is an implementation of the DSA (Digital Signature Algorithm) signature verification system\n- The heavy-duty mathematics underneath are provided by the Math::Pari library\n- DSA (Digital Signature Algorithm) signatures are no longer considered to be adequate for security\n\no Crypt::Fernet:\n- Perl extension for Fernet (symmetric encryption)\n- https://metacpan.org/dist/Crypt-Fernet\n\no  Crypt::HSM\n- A PKCS11 interface for Perl\n- https://metacpan.org/dist/Crypt-HSM\n\no Crypt::JWT:\n- JSON Web Token (JWT, JWS, JWE) as defined by RFC7519, RFC7515, RFC7516\n- https://metacpan.org/pod/Crypt::JWT\n\no Crypt::Komihash:\n- Komihash implementation in Perl\n- https://metacpan.org/pod/Crypt::Komihash\n\no Crypt::MatrixSSL3:\n- Perl extension for SSL and TLS using MatrixSSL.org v3.9.3\n- https://metacpan.org/dist/Crypt-MatrixSSL3\n\no Crypt::OpenSSL::AES:\n- https://metacpan.org/pod/Crypt::OpenSSL::AES\n- A Perl wrapper around OpenSSL's AES library\n- See also Crypt::CBC\n\no  Crypt::OpenSSL::PKCS12\n- Perl extension to OpenSSL's PKCS12 API\n- https://metacpan.org/dist/Crypt-OpenSSL-PKCS12\n\no Crypt::OpenSSL::RSA:\n- RSA encoding and decoding, using the openSSL libraries\n- https://metacpan.org/dist/Crypt-OpenSSL-RSA\n\no Crypt::OpenSSL::BaseFunc:\n- Base Functions, using the OpenSSL libraries\n- https://metacpan.org/dist/Crypt-OpenSSL-BaseFunc\n\no Crypt::Passphrase:\n- Crypt::Passphrase::Argon2::AES (See below for Crypt::Argon)\n- Crypt::Passphrase::Bcrypt::AES. Far better than the above. See article\n- Crypt::Passphrase::Yescrypt\n- https://metacpan.org/dist/Crypt-Passphrase-Yescrypt\n- https://blogs.perl.org/users/leon_timmermans/2024/02/using-peppers-with-cryptpassphrase.html\n- https://www.vaultproject.io/\n- https://github.com/bitnami-labs/sealed-secrets. Careful. Uses Kubernetes, so must be pathologically complex\n- Mojolicious::Plugin::Credentials\n\no Crypt::Perl:\n- Cryptography in pure Perl\n- https://metacpan.org/dist/Crypt-Perl\n- Can create and sign in X509 in pure Perl. Slow without the XS addons\n\no Crypt::PostgreSQL:\n- Module for generating encrypted password for PostgreSQL\n- https://metacpan.org/dist/Crypt-PostgreSQL\n\no Crypt::Protocol:\n- No POD\n- https://metacpan.org/dist/Crypt-Protocol\n\no  Crypt::Random::Source:\n- Get weak or strong random data from pluggable sources\n- https://metacpan.org/dist/Crypt-Random-Source\n\no Crypt::Rhash:\n- Compute message digests and magnet links\n- https://metacpan.org/pod/Crypt::Rhash\n\no Crypt::RSA::Blind:\n- Blind RSA signatures\n- https://metacpan.org/dist/Crypt-RSA-Blind\n\no Crypt::SecretBuffer:\n- Prevent accidentally leaking a string of sensitive data\n- https://metacpan.org/pod/Crypt::SecretBuffer\n\no Crypt::SMIME:\n- S/MIME message signing, verification, encryption and decryption\n- https://metacpan.org/dist/Crypt-SMIME\n\no Crypt::Sodium::XS:\n- Perl XS bindings for libsodium\n- https://metacpan.org/dist/Crypt-Sodium-XS\n- https://doc.libsodium.org/\n\no Crypt::SysRandom:\n- Perl interface to system randomness\n- https://metacpan.org/dist/Crypt-SysRandom\n\no Crypt::SysRandom::XS:\n- Perl interface to system randomness, XS version\n- https://metacpan.org/dist/Crypt-SysRandom-XS\n\no Crypt::URandom\n- Provide non blocking randomness\n- https://metacpan.org/pod/Crypt::URandom\n- This is a pure-Perl module that reads data from /dev/urandom. It also uses Win32::API to read random bytes on Windows\n\no Crypt::URandom::MonkeyPatch:\n- Override core rand function to use system random sources\n Deprecated\n\no Crypt::URandom::Token:\n- Generate secure strings for passwords, secrets and similar\n- https://metacpan.org/pod/Crypt::URandom::Token\n\no Crypt::Yescrypt:\n- A Perl interface to the yescrypt password hash\n- https://metacpan.org/dist/Crypt-Yescrypt\n\no CryptX:\n- This is a huge crypto toolkit\n- Bytes::Random::Secure::Tiny\n- Crypt::Passphrase::*. Included timeout/refresh help\n- Crypt::PRNG::ChaCha20 - Cryptographically secure PRNG based on ChaCha20 (stream cipher) algorithm. Used in UUID\n- Random numbers: CryptX::PrNG::Fortuna\n- App::xsum\n\no Data::Entropy:\n- Entropy (randomness) management\n- https://metacpan.org/dist/Data-Entropy\n- Deprecated\n\no Digest::HMAC:\n- Keyed-Hashing for Message Authentication\n- https://metacpan.org/dist/Digest-HMAC\n\no Digest::SHA3:\n- Prefer this to Digest::SHA\n\no Digests:\n- Digest::BLAKE2 - Message digest algorithm (which is an excellent security improvement: Bruce Scheiner)\n- Digest::MD5\n- Alt::Digest::MD5::OpenSSL\n- https://metacpan.org/pod/Alt::Digest::MD5::OpenSSL\n\no Filter::Crypto:\n- Create runnable Perl files encrypted with OpenSSL libcrypto\n- https://metacpan.org/dist/Filter-Crypto\n\no Filter::Crypto::Decrypt:\n- Perl source code filter to run encrypted Perl files\n- https://metacpan.org/pod/Filter::Crypto::Decrypt\n\no libcrypto:\n- See http://www.openssl.org\n\no Math::Random::Secure:\n- Cryptographically-secure, cross-platform replacement for rand()\n- https://metacpan.org/dist/Math-Random-Secure\n\no Random::Any:\n- Try to use Data::Entropy::Algorithms::rand(), fallback on builtin rand()\n- https://metacpan.org/dist/Random-Any\n\no Random::Simple:\n- Simple, usable, real world random numbers\n- https://metacpan.org/dist/Random-Simple\n\no Rand::URandom\n- Replaces rand() with /dev/urandom\n- https://metacpan.org/dist/Rand-Urandom\n- This is a pure-Perl module that makes syscalls to getrandom(2), but falls back to reading from /dev/urandom\n\no RT::Extension::TOTPMFA:\n- Multi-factor authentication with time-based one-time passcodes\n- https://metacpan.org/dist/RT-Extension-TOTPMFA\n\no Sys::GetRandom\n- Perl interface to getrandom(2)\n- This is an XS module that calls getrandom(2) directly. It has a slightly different interface but is faster\n- https://metacpan.org/pod/Sys::GetRandom\n\no Sys::GetRandom::PP:\n- Pure Perl interface to getrandom(2)\n- https://metacpan.org/dist/Sys-GetRandom-PP\n",
        "title": "CryptoStuff",
        "modified": "20250713065552202",
        "created": "20191115192547844"
    },
    {
        "text": "\"\"\"\no HTML::Selector::XPath:\n- CSS Selector to XPath compiler\n- https://metacpan.org/pod/HTML::Selector::XPath\n\no The CSS 2024 Snapshot:\n- https://www.w3.org/TR/css-2024/\n- See especially these sub-sections:\n- https://www.w3.org/TR/selectors-4/\n- https://www.w3.org/TR/css-color-4/\n- https://www.w3.org/TR/css-box-3/\n- https://www.w3.org/TR/css-grid-1/\n- https://www.w3.org/TR/css-flexbox-1/\n\no CSS::Inliner:\n- Library for converting CSS style blocks to inline styles\n- https://metacpan.org/dist/CSS-Inliner\n- Contains CSS::Inliner::Parser and CSS::Inliner::TreeBuilder\n\no CSS::Object:\n- Is an object-oriented CSS parser and manipulator\n",
        "title": "CssHandling",
        "modified": "20250509010840961",
        "created": "20231012001733636"
    },
    {
        "text": "\"\"\"\no See also:\n- ConfigFiles\n- FileHandling\n- UsernamePassword\n\no Note: GraphViz2::DBI ships with db.schema.pl, which creates an SVG image of a schema:\n- To run it you need to set three environment variables as below\n- dbi.schema.pl takes an option parameter of image type, which defaults to svg\n- Edit the code if you wish to change the output dir's name\n- The last line, the copy, is for my setup. $DR points to a RAM disk. Debian automatically creates a RAM disk, so I configure the free web server Engine X, aka nginx, to use it. See my other TiddlyWiki, Debian.Wiki.html, for details about nginx\n- And yes, you can use empty strings for the username and password\n- Lastly, $ is just the command line prompt\n<pre>\n$ DBI_DSN=dbi:SQLite:dbname=data/levies.sqlite\n$ DBI_USER=local\n$ DBI_PASS=local\n$ export DBI_DSN DBI_USER DBI_PASS\n$ mkdir html\n$ dbi.schema.pl (my version)\n$ cp html/dbi.schema.svg $DR/levy.schema.svg\n</pre>\n\no Alien::DuckDB:\n- Find or build DuckDB\n- https://metacpan.org/dist/Alien-DuckDB\n\no AnyEvent::Redis:\n- Non-blocking Redis client\n- https://metacpan.org/pod/AnyEvent::Redis\n\no App::DBBrowser:\n- Browse SQLite/MySQL/PostgreSQL databases and their tables interactively\n- https://metacpan.org/dist/App-DBBrowser\n\no App::Sqitch:\n- Sensible database change management\n- Sqitch is a database change management application\n- https://metacpan.org/dist/App-Sqitch\n- http://sqitch.org/\n\no App::SQLiteUtils\n\no App::dbitemplater:\n- A utility for running a SQL query via DBI and using the output in a template\n- https://metacpan.org/dist/App-dbitemplater\n\no BerkeleyDB:\n- Perl extension for Berkeley DB version 2, 3, 4, 5 or 6\n- https://metacpan.org/dist/BerkeleyDB\n\no Catmandu::DBI:\n- Catmandu tools to communicate with DBI based interfaces\n- https://metacpan.org/pod/Catmandu::DBI\n- This is (presumably) unrelated to Catmandu in DataTraversal\n\no Couch::DB:\n- CouchDB database client\n- https://metacpan.org/dist/Couch-DB\n\no Data::ObjectDriver:\n- Simple, transparent data interface, with caching\n- https://metacpan.org/dist/Data-ObjectDriver\n\no Data::Record::Serialize:\n- https://metacpan.org/pod/Data::Record::Serialize\n- Flexible serialization of a record\n- A module which encodes data in various ways and can further transmit the result\n- This module is primarily useful for output of sets of uniformly structured data records. It provides a uniform, thin, interface to various serializers and output sinks. Its raison d'etre is its ability to manipulate the records prior to encoding and output\n\no Data::SimpleKV:\n- A simple key-value database with memory cache and disk persistence\n- https://metacpan.org/dist/Data-SimpleKV\n\no Data::TagDB\n- Work with Tag databases\n- https://metacpan.org/dist/Data-TagDB\n- See also File::FStore in FileHandling\n\no Data::TagDB::Tag:\n- Work with Tag databases\n- https://metacpan.org/pod/Data::TagDB::Tag\n\no Database - various:\n- App::dbinfo\n- Data::ObjectDriver\n- https://metacpan.org/pod/Data::ObjectDriver\n- DBIx::Simple[::Concrete, Interpol]\n- DBIx::Placeholder::Named\n- PGObject::Util::DBAdmin\n- DBIx::Raw\n- DBIx::Connector::Retry[::MySQL]\n\no Database which auto-removes itself after use:\n- Database::Temp\n\no Database::Abstraction:\n- Database abstraction layer\n- https://metacpan.org/pod/Database::Abstraction\n- Abstract class giving read-only access to CSV, XML and SQLite databases via Perl without writing any SQL\n\no Database::ManagedHandle:\n- Manage database handles safely for long running processes\n- https://metacpan.org/pod/Database::ManagedHandle\n\no DB::Berkeley:\n- XS-based OO Berkeley DB HASH interface\n- https://metacpan.org/dist/DB-Berkeley\n\no DB::Object:\n- SQL API\n- By Jacques Deguest\n- https://metacpan.org/pod/DB::Object\n\no DB_File:\n- Perl5 access to Berkeley DB version 1.x\n- https://metacpan.org/pod/DB_File\n\no DBD::AnyData:\n- DBI access to XML, CSV and other formats\n- Awating DBD::AnyData2\n\no DBD::Firebird:\n- DBI driver for Firebird RDBMS server\n- https://metacpan.org/dist/DBD-Firebird\n\no DBD::KB:\n- Kingbase database driver for the DBI module\n- https://metacpan.org/dist/DBD-KB\n\no DBD::Oracle:\n- Oracle database driver for the DBI module\n- https://metacpan.org/pod/DBD::Oracle\n\no DBD::Pg:\n- PostgreSQL database driver for the DBI module\n- https://metacpan.org/dist/DBD-Pg\n\no DBD::PgAsync:\n- A PostgreSQL database driver for the DBI module\n- https://metacpan.org/dist/DBD-PgAsync\n\no DBD::Sybase:\n- Sybase database driver for the DBI module\n- https://metacpan.org/dist/DBD-Sybase\n\no DBD::XMLSimple:\n- Access XML data via the DBI interface\n- https://metacpan.org/dist/DBD-XMLSimple\n\no DBIx::Admin::TableInfo:\n- A wrapper for all of table_info(), column_info(), *_key_info()\n- https://metacpan.org/dist/DBIx-Admin-TableInfo\n\no DBIx::AutoUpgrade::NativeStrings:\n- https://metacpan.org/pod/DBIx::AutoUpgrade::NativeStrings\n- Automatically upgrade Perl native strings to utf8 before sending them to the database\n- Primarily for DBD::Oracle, DPD::Pg and DBD::SQLite\n\no DBIx::BatchChunker:\n- Run large database changes safely\n- For DML\n- https://metacpan.org/pod/DBIx::BatchChunker\n- See also DBIx::BulkLoader::Mysql, DBIx::Class::BatchUpdate, DBIx::BulkUtil\n- See also DBIx::OnlineDDL below for DDL\n\no DBIx::Class:\n- Why are there no details for this module?\n- Because it is effectively dead. Who says?\n- See DBIx::QuickORM as a similar alternative, where the docs discuss and criticize DBIx::Class\n- Or consider simple alternatives like DBIx::Simple or DBIx::Squirrel\n- Or see the great article on DBIx::Class::Result::PrettyPrint at https://peateasea.de/introducing-dbix-class-resultset-prettyprint/\n\no DBIx::Class::EncodedColumn:\n- Automatically encode columns\n- https://metacpan.org/dist/DBIx-Class-EncodedColumn\n\no DBIx::Class::Helpers:\n- Simplify the common case stuff for DBIx::Class\n- https://metacpan.org/dist/DBIx-Class-Helpers\n\no DBIx::Class::Helper::ColumnNames:\n- Retrieve column names from a resultset\n- https://metacpan.org/dist/DBIx-Class-Helper-ColumnNames\n\no DBIx::Class::Schema:\n- Composable schemas\n- https://metacpan.org/pod/DBIx::Class::Schema\n\no DBIx::Class::Schema::Loader:\n- Create a DBIx::Class::Schema based on a database\n- https://metacpan.org/dist/DBIx-Class-Schema-Loader\n\no DBIx::Connector:\n- Fast, safe DBI connection and transaction management\n- https://metacpan.org/dist/DBIx-Connector\n\no DBIx::Custom:\n- DBI extension to execute insert, update, delete, and select easily\n- It extends Object::Simple\n- https://metacpan.org/pod/DBIx::Custom\n\no DBIx::DataModel:\n- UML-based Object-Relational Mapping (ORM) framework\n- https://metacpan.org/pod/DBIx::DataModel\n\no DBIx::Diff::Schema:\n- Compare schema of two DBI databases\n- https://metacpan.org/pod/DBIx::Diff::Schema\n\no DBIx::Fast:\n- DBI fast & easy (another one...)\n- https://metacpan.org/pod/DBIx::Fast\n\no DBIx::Lite:\n- Chained and minimal ORM\n- https://metacpan.org/pod/DBIx::Lite\n- This module tries very hard to do a lot of work for you\n\no DBIx::Migration:\n- Seamless DB schema up- and downgrades\n- https://metacpan.org/dist/DBIx-Migration\n\no DBIx::DBO:\n- An OO interface to SQL queries and results\n- Easily constructs SQL queries, and simplifies processing of the returned data\n- https://metacpan.org/dist/DBIx-DBO\n\no DBIx::OnlineDDL:\n- Run DDL on online databases safely\n- See also gh-ost\n- See also https://docs.percona.com/percona-toolkit/pt-online-schema-change.html\n- See also https://dev.mysql.com/doc/refman/8.4/en/innodb-online-ddl.html\n\no DBIx::Query:\n- Simplified abstracted chained DBI subclass\n- A subclass of DBI\n- https://metacpan.org/dist/DBIx-Query\n- Can use Perl data structures described by SQL::Abstract::Complete\n\no DBIx::QuickDB:\n- Quickly start a db server\n- https://metacpan.org/pod/DBIx::QuickDB\n- PostgreSQL and MySQL are the initially supported drivers\n\no DBIx::QuickORM:\n- Actively maintained Object Relational Mapping that makes getting started Quick and has a rich feature set\n- An alternative to DBIx::Class, but not a drop-in replacement.\n- https://metacpan.org/dist/DBIx-QuickORM\n\no DBIx::SearchBuilder:\n- Encapsulate SQL queries and rows in simple Perl objects\n\no DBIx::Squirrel:\n- A DBI extension\n- https://metacpan.org/pod/DBIx::Squirrel\n- The DBIx::Squirrel package extends the DBI by providing a few extra conveniences that are subtle and additive in nature, and, hopefully, quite useful\n- Looks good\n\no DBIx::Sunny:\n- https://metacpan.org/pod/DBIx::Sunny\n- DBIx::Sunny is a simple DBI wrapper. It provides better usability for you\n- DBIx::Sunny supports only SQLite and MySQL\n- Supports nested transaction management using DBIx::TransactionManager\n- See also SQL::Maker::SQLType\n- https://metacpan.org/pod/SQL::Maker::SQLType\n\no DiaColloDB:\n- Diachronic collocation database, top-level\n- https://metacpan.org/dist/DiaColloDB\n\no Fey:\n- Better SQL Generation Through Perl\n- https://metacpan.org/dist/Fey\n\no Fey::ORM:\n- A Fey-based ORM\n- https://metacpan.org/dist/Fey-ORM\n\no gh-ost:\n- Is a triggerless online schema migration solution for MySQL\n- https://github.com/github/gh-ost\n\no GraphViz2::DBI:\n- Visualize a database schema as a graph\n- https://metacpan.org/pod/GraphViz2::DBI\n- Uses DBIx::Admin::TableInfo\n\no LMDB_File:\n- Tie to LMDB (OpenLDAP's Lightning Memory-Mapped Database)\n- https://metacpan.org/dist/LMDB_File\n\no Mojo::Redis:\n- Redis driver based on Mojo::IOLoop\n- https://metacpan.org/pod/Mojo::Redis\n\no MongoDB:\n- Official MongoDB Driver for Perl (EOL)\n- https://metacpan.org/pod/MongoDB\n- End of life: August 13, 2020\n\no MySQL-specific:\n- DateTime::Format::MySQL\n\no MySQL::Hi:\n- Credentials for MySQL/MariaDB from config files\n- https://metacpan.org/pod/MySQL::Hi\n\no Neo4j::Driver:\n- Neo4j community graph database driver for Bolt and HTTP\n- https://metacpan.org/dist/Neo4j-Driver\n\no Paws::DynamoDB::Response::Parser:\n- Convert Paws DynamoDB response objects to Perl data structures\n- https://metacpan.org/pod/Paws::DynamoDB::Response::Parser\n\no Pg::Explain:\n- Object approach at reading explain analyze output\n- https://metacpan.org/dist/Pg-Explain\n\no PGXN::Site:\n- Maintain and serve a PGXN web site for talking to Postgres\n- https://metacpan.org/pod/PGXN::Site\n\no Pongo:\n- A Perl MongoDB interface using XS and the MongoDB C driver\n- https://metacpan.org/dist/Pongo\n\no Protocol::Redis:\n- Redis protocol parser/encoder with asynchronous capabilities.\n- https://metacpan.org/pod/Protocol::Redis\n\no Protocol::Redis::XS:\n- hiredis based parser compatible with Protocol::Redis\n- https://metacpan.org/pod/Protocol::Redis::XS\n\no Redis:\n- Perl binding for Redis database\n- https://metacpan.org/pod/Redis\n\no Redis::hiredis:\n- Interact with Redis using the hiredis client\n- https://metacpan.org/pod/Redis::hiredis\n\no Rose::DB::Object:\n- Extensible, high performance object-relational mapper (ORM)\n- Contains Rose::DB::Object::Tutorial - A guided tour of the basics of Rose::DB::Object\n- https://metacpan.org/dist/Rose-DB-Object\n- See also https://dev.to/dragostrif/rosedb-orm-and-perl-3dig\n\no SQL::Inserter:\n- Efficient buffered DBI inserter and fast INSERT SQL builder\n\no SQL:\n- SQL::Abstract\n- SQL::Abstract::Complete - Generate complete SQL from Perl data structures\n- SQL::Abstract::More\n- Uses the above. Looks good. Related to DBIx::DataModel\n- https://metacpan.org/pod/SQL::Abstract::More\n- DBI::Abstract\n\no SQL::Abstract::ExtraClauses:\n- New/experimental additions to SQL::Abstract\n- https://metacpan.org/pod/SQL::Abstract::Plugin::ExtraClauses\n\no SQL::Abstract::Plugin::TableAlias:\n- Automagical table aliasing\n- https://metacpan.org/dist/SQL-Abstract-Plugin-TableAlias\n- This module is an extension of the SQL::Abstract::Plugin::ExtraClauses plugin\n\no SQL::Interp:\n- Interpolate Perl variables into SQL statements\n- https://metacpan.org/dist/SQL-Interp\n- Includes DBIx::Interp\n- POD discusses Class::DBI, DBIx::Simple, FU::SQL, SQL::Abstract, SQL::Interpol, SQL::KeywordSearch, SQL::Preproc and SQL::String\n\no SQL::Parser:\n- Validate and parse SQL strings\n- https://metacpan.org/pod/SQL::Parser\n- This module is part of SQL::Statement\n- https://metacpan.org/dist/SQL-Statement\n\no SQL::Translator:\n- Manipulate structured data definitions (SQL and more)\n- https://metacpan.org/dist/SQL-Translator\n\no TDB_FileX:\n- Perl access to the trivial database library\n- https://metacpan.org/pod/TDB_FileX\n\no TheSchwartz ecosystem:\n- A reliable job queue\n- TheSchwartz::Simple - Lightweight TheSchwartz job dispatcher using plain DBI\n- TheSchwartz::JobScheduler - Lightweight TheSchwartz job dispatcher with maintained database connections\n",
        "title": "DatabaseAndSQL",
        "modified": "20250713065642061",
        "created": "20210124005554193"
    },
    {
        "text": "\"\"\"\no See also:\n- DataTraversal\n\no PerlIO::eol:\n- PerlIO layer for normalizing line endings\n\no Data::Censor:\n- Censor sensitive stuff in a data structure\n- https://metacpan.org/pod/Data::Censor\n\no Data::Domain:\n- Data description and validation\n- https://metacpan.org/pod/Data::Domain\n\no File::LocalizeNewlines:\n- Sample code:\n<pre>- 1 of 2: dos2unix.pl:\n#!/usr/bin/env perl\n\nuse 5.018;\nuse strict;\nuse warnings;\n\nuse File::LocalizeNewlines;\n\n# --------------------\n\nmy($file_name) = shift || die \"Usage: $0 file_name\\n\";\nmy($localizer) = File::LocalizeNewlines -> new(verbose => 1);\n\nsay $localizer -> localized($file_name) ? 'Yes' : 'No';</pre>\n<pre>- 2 of 2: unix2dos.pl:\n#!/usr/bin/env perl\n\nuse 5.018;\nuse strict;\nuse warnings;\n\nuse File::LocalizeNewlines;\n\n# ---------------------\n\nmy($file_name) = shift || die \"Usage: $0 file_name\\n\";\nmy($localizer) = File::LocalizeNewlines -> new(newline => \"\\015\\012\", verbose => 1);\n\nsay $localizer -> localized($file_name) ? 'Yes' : 'No';</pre>\n\no Data::Sah:\n- Fast and featureful data structure validation\n- https://metacpan.org/pod/Data::Sah\n- It's See Also contains a long list of validators\n\no Params::ValidationCompiler:\n- Build an optimized subroutine parameter validator once, use it forever\n- https://metacpan.org/pod/Params::ValidationCompiler\n- Recommended by Dave Rolsky\n",
        "title": "DataCleaning",
        "modified": "20250620052131208",
        "created": "20230501013831386"
    },
    {
        "text": "\"\"\"\no See also:\n- ArrayHandling\n- DataCleaning\n- DebuggingStuff\n- HashHandling\n- ParallelProcessing\n- RedBlackTrees\n- RestfulInterface\n- SpreadsheetStuff\n- StringStuff\n- [[XS]]\n\no See also:\n- Data::Fake\n- Data::Grid\n- Data::Table::Text. Write data in tabular text format. Very flexible. Vast list of methods. Aimed at Amazon Web Services\n- Data::Transmute\n- TableDataRoles::Standard\n- Table::Data::Text\n- Text::Table::Manifold\n- Text::Table::Tiny\n\no Algorithm::CurveFit:\n- Nonlinear Least Squares Fitting\n- https://metacpan.org/dist/Algorithm-CurveFit\n\no App::abgrep\n- Print lines matching a pattern\n- Has many options\n- https://metacpan.org/dist/App-abgrep\n\no App::bookmarks:\n- Export bookmarks from browsers and files\n- https://metacpan.org/dist/App-bookmarks\n\no App::csvtool:\n- Implements the csvtool core commands\n- https://metacpan.org/dist/App-csvtool\n\no App::DPath:\n-A Cmdline tool around Data::DPath (see below)\n- https://metacpan.org/dist/App-DPath\n\no App::Greple:\n- Extensible grep with lexical expression and region control\n- https://metacpan.org/dist/App-Greple\n\no App::Greple::charcode:\n- Greple module to annotate unicode character data\n- https://metacpan.org/dist/App-Greple-charcode\n- Greple module -Mcharcode (or -Mcc for short) displays information about the matched characters. It can also visualize Unicode zero-width combining or hidden characters, which can be useful for examining text containing visually indistinguishable or imperceptible elements\n- The POD page https://metacpan.org/pod/App::Greple::charcode shows various outputs worthy of close study\n\no App::Greple::stripe:\n- Greple zebra stripe module\n- https://metacpan.org/dist/App-Greple-stripe\n- Produces coloured background bars of output\n\no App::Greple::subst:\n- Greple module for text search and substitution\n- https://metacpan.org/dist/App-Greple-subst\n\no App::Greple::xlate:\n- Translation support module for greple\n- https://metacpan.org/dist/App-Greple-xlate\n- This module is amazing. Check the demo:\n- https://metacpan.org/pod/App::Greple::xlate\n\no App::Greple::xp:\n- Extended pattern module\n- https://metacpan.org/pod/App::Greple::xp\n\no App::remotediff:\n- Remote diff over rsync\n- https://metacpan.org/dist/App-remotediff\n\no App::sdif\n- sdif (side-by-side) and family tools, cdif (visual char diff) and watchdiff (repetition of diff)\n- https://metacpan.org/dist/App-sdif\n\no App::td:\n- Does for tables what jq does for JSON\n- Has a huge range of options\n- https://metacpan.org/dist/App-td\n- Can be used in conjunction with csv2td from App::CSVUtils\n\no App::uricolor:\n- Colorize URIs with ANSI colors\n- https://metacpan.org/dist/App-uricolor\n\no Archive::BagIt:\n- The main module to handle bags\n- https://metacpan.org/pod/Archive::BagIt\n- See also https://datatracker.ietf.org/doc/html/rfc8493\n\no Array::Contains:\n- Check if an array contains a specific element\n- https://metacpan.org/dist/Array-Contains\n\no assign:\n- Destructuring Assignment Syntax for Perl\n- Instead of assigning a value to a variable, you can now assign to a data structure (array-ref or hash-ref) that specifies how to unpack a data structure into all the variables you need\n- https://metacpan.org/pod/assign\n\no autobox:\n- Call methods on native types\n- https://metacpan.org/pod/autobox\n\no autobox::Lookup:\n- Easy autoboxed lookup\n- https://metacpan.org/pod/autobox::Lookup\n\no autobox::Text:\n- Turns baubles into trinkets\n- https://metacpan.org/pod/autobox::Text\n\no autobox::Time::Piece:\n- On-the-fly date conversion\n- https://metacpan.org/dist/autobox-Time-Piece\n\no Catmandu:\n- A data toolkit\n- https://metacpan.org/dist/Catmandu\n- This is (presumably) unrelated to Catmandu in DatabaseAndSQL\n\no Class::XPath:\n- Adds xpath matching to object trees\n- http://metacpan.org/dist/Class-XPath\n\no Connector:\n- A generic connection to a hierarchical-structured data set\n- https://metacpan.org/pod/Connector\n\no csvgrep:\n- Search for patterns in a CSV and display results in a table\n- https://metacpan.org/dist/csvgrep\n\no CSV-oriented:\n- App::CSVUtils\n- Data::Tools\n- Parse::CSV\n- Text::AutoCSV\n- Text::CSV\n\no CXC::Data::Visitor:\n- Invoke a callback on every element at every level of a data structure.\n- https://metacpan.org/dist/CXC-Data-Visitor\n\no Data::Alias:\n- Comprehensive set of aliasing operations\n- https://metacpan.org/dist/Data-Alias\n- See also Data::Reuse\n\no Data::Clone\n- Polymorphic data cloning\n- https://metacpan.org/dist/Data-Clone\n- Does data cloning, i.e. copies things recursively\no Data::Difference:\n- Compare simple hierarchical data\n- https://metacpan.org/dist/Data-Difference\n\no Data::DPath:\n- DPath is not XPath!\n- With this module you can address points in a datastructure by describing a 'path' to it using hash keys, array indexes or some wildcard-like steps. It is inspired by XPath but differs from it\n- https://metacpan.org/dist/Data-DPath\n\no Data::DRef:\n- Delimited-key access to complex data structures\n- https://metacpan.org/dist/Data-DRef\n\no Data::Dump\n- https://metacpan.org/pod/Data::Dump\n- Can be used by Struct::Dumb. See DataTypes\n- See also Data::Pretty\n\no Data::Dump::Color:\n- Like Data::Dump, but with color\n- https://metacpan.org/dist/Data-Dump-Color\n\no Data::Dump::HTML::Collapsible\n- https://metacpan.org/dist/Data-Dump-HTML-Collapsible\n- Data::Printer\n\no Data::Dump::Partial:\n- Dump data structure compactly and potentially partially\n- https://metacpan.org/pod/Data::Dump::Partial\n\no Data::Dumper:\n- Stringified perl data structures, suitable for both printing and eval\n- https://metacpan.org/dist/Data-Dumper\n\no Data::Dumper::Concise:\n- Less indentation and newlines plus sub deparsing\n- https://metacpan.org/dist/Data-Dumper-Concise\n\no Data::Dumper::Interp:\n- Interpolate Data::Dumper output into strings for human consumption\n- https://metacpan.org/dist/Data-Dumper-Interp\n\no Data::Edit::Xml:\n- Edit data held in the XML format\n- https://metacpan.org/pod/Data::Edit::Xml\n- This intriguing module has a huge POD full of example code\n\no Data::Edit::Xml::Reuse:\n- Reuse Xml via the Dita conref facility\n- https://metacpan.org/dist/Data-Edit-Xml-Reuse\n\no Data::FastPack:\n- FastPack Record format, Parsing and Serialising\n- https://metacpan.org/pod/Data::FastPack\n\no Data::HexDump:\n- Hexadecimal Dumper\n- https://metacpan.org/dist/Data-HexDump\n- Contains links to 8 other dumpers\n\no Data::LNPath:\n- Lookup on nested data via path\n- https://metacpan.org/pod/Data::LNPath\n\no Data::Match:\n- Complex data structure pattern matching\n- https://metacpan.org/pod/Data::Match\n\no Data::Mirror:\n- A simple way to efficiently retrieve data from the World Wide Web\n- Handles JSON objects, YAML documents, XML instances and CSV files\n- Can create objects, files, file handles and strings\n\no Data::Munge:\n- Various utility functions\n- https://metacpan.org/pod/Data::Munge\n\no Data::NestedKey:\n- Object-oriented handling of deeply nested hash structures\n- Uses dot-separated keys to access nested hashes\n- https://metacpan.org/pod/Data::NestedKey\n\no Data::Page:\n- Help when paging through sets of results\n- https://metacpan.org/pod/Data::Page\n\no Data::Pageset:\n- Page numbering and page sets\n- https://metacpan.org/pod/Data::Pageset\n\no Data::Pageset::Exponential:\n- Page numbering for very large page numbers\n- https://metacpan.org/dist/Data-Pageset-Exponential\n\no Data::Path:\n- http://metacpan.org\n- Search for Data::Path to get a long list of related modules, but no Data::Path as such\n\no Data::Peek:\n- A collection of low-level debug facilities\n- https://metacpan.org/dist/Data-Peek\n\no Data::Pretty:\n- Data Dump Beautifier\n- https://metacpan.org/pod/Data::Pretty\n\no Data::Printer:\n- Colored & full-featured pretty print of Perl data structures and objects\n- Does some things very well, but apparently does not handle expressions being passed to p(...)\n- https://metacpan.org/dist/Data-Printer\n\no Data::Printer::Filter::JMAP:\n- A Data::Printer filter for JMAP::Tester-related objects\n- https://metacpan.org/pod/Data::Printer::Filter::JMAP\n\no Data::Record::Serialize::Encode::csv:\n- Encode a record as csv\n- https://metacpan.org/pod/Data::Record::Serialize::Encode::csv\n\no Data::Reuse:\n- Share constant values with Data::Alias\n- https://metacpan.org/dist/Data-Reuse\n\no Data::Rmap:\n- Recursive map, apply a block to a data structure\n- https://metacpan.org/dist/Data-Rmap\n\no Data::Roundtrip:\n- Convert between Perl data structures, YAML and JSON with unicode support (I believe ...)\n- https://metacpan.org/pod/Data::Roundtrip\n\no Data::Section:\n- Read multiple, named, chunks of data out of your __DATA__ section\n- https://metacpan.org/pod/Data::Section\n\no Data::Section::Pluggable:\n- Read structured data from __DATA__\n- https://metacpan.org/dist/Data-Section-Pluggable\n\no Data::Section::Simple:\n- Read multiple, named, chunks of data out of your __DATA__ section\n- https://metacpan.org/pod/Data::Section::Simple\n\no Data::Show:\n- Dump data structures with name and point-of-origin\n- https://metacpan.org/pod/Data::Show\n\no Data::Transfigure:\n- Performs rule-based data transfigurations of arbitrary structures\n- https://metacpan.org/pod/Data::Transfigure\n\no Data::Transform:\n- Performs rule-based data transformations of arbitrary structures\n- https://metacpan.org/pod/Data::Transform\n\no Data::Traverse:\n- Callback-based depth-first traversal of Perl data structures\n- https://metacpan.org/pod/Data::Traverse\n\no Data::Unixish:\n- Implementation for Unixish, a data transformation framework\n- https://metacpan.org/pod/Data::Unixish\n\no Data::Visitor:\n- Visitor style traversal of Perl data structures\n- https://metacpan.org/dist/Data-Visitor\n\no Data::Visitor::Lite:\n- An easy implementation of Data::Visitor::Callback\n- https://metacpan.org/pod/Data::Visitor::Lite\n\no Data::Visitor::Tiny:\n- Recursively walk data structures\n- https://metacpan.org/pod/Data::Visitor::Tiny\n\no Data::Walk:\n- Traverse Perl data structures\n- https://metacpan.org/pod/Data::Walk\n\no Data::Walker:\n- A tool for navigating through Perl data structures\n- https://metacpan.org/pod/Data::Walker\n\no See also DBD::XMLSimple under DatabaseAndSQL\n\no DBIx::Array:\n- DBI Wrapper with Perl style data structure interfaces\n- https://metacpan.org/pod/DBIx::Array\n\no DBIx::HTML:\n- Just another HTML table generating DBI extension\n- https://metacpan.org/dist/DBIx-HTML\n\no Devel::Walk:\n- Walk a complex object or reference\n- https://metacpan.org/dist/Devel-Walk\n\no Directory::Diff:\n- Recursively find differences between similar directories\n- https://metacpan.org/dist/Directory-Diff\n\no Doubly:\n- Doubly linked lists\n- https://metacpan.org/pod/Doubly\n- This module provides access to a C-based doubly linked list\n\no Doubly::Linked:\n- Doubly linked lists\n- https://metacpan.org/pod/Doubly::Linked\n- But see Doubly just above\n\no Doubly::Linked::PP:\n- Linked lists\n- https://metacpan.org/dist/Doubly-Linked-PP\n\no File::LoadLines:\n- Fancy!\n- Load lines from files and network\n- https://metacpan.org/dist/File-LoadLines\n- Handles URLs, encoding and line terminators\n\no Hash::Path:\n- A simple way to return a path of HoH\n- http://metacpan.org/dist/Hash-Path\n\no Iterator:\n- A general-purpose iterator class\n- https://metacpan.org/pod/Iterator\n\no Iterator::DBI:\n- An iterator for returning DBI query results\n- https://metacpan.org/pod/Iterator::DBI\n\no Iterator::Flex:\n- Iterators with flexible behaviors\n- https://metacpan.org/dist/Iterator-Flex\n\no Iterator::IO:\n- Filesystem and stream iterators\n- https://metacpan.org/pod/Iterator::IO\n\no Iterator::Misc:\n- Miscellaneous iterator functions\n- https://metacpan.org/pod/Iterator::Misc\n\no Iterator::Simple:\n- Simple iterator and utilities\n- https://metacpan.org/pod/Iterator::Simple\n- POD says: About 10 times faster than Iterator::Util\n\no Iterator::Util:\n- Essential utilities for the Iterator class\n- Uses Iterator\n- https://metacpan.org/pod/Iterator::Util\n- But see Iterator::Simple\n\no List::Gen:\n- Provides functions for generating lists\n- Contains List::Gen::Cookbook - how to get the most out of List::Gen, etc\n- https://metacpan.org/pod/List::Gen::Cookbook\n\no List::Lazy:\n- Generate lists lazily\n- https://metacpan.org/dist/List-Lazy\n\no List::Regexp:\n- Convert list of strings to a regular expression\n- https://metacpan.org/dist/List-Regexp\n- Ships with regexp-opt\n\no List::Util:\n- A selection of general-utility list subroutines\n- https://metacpan.org/pod/List::Util\n\no meta:\n- Meta-programming API\n- https://metacpan.org/pod/meta\n- This package provides an API for metaprogramming; that is, allowing code to inspect or manipulate parts of its own program structure\n\no Module::Features::PluginSystem:\n- https://metacpan.org/pod/Module::Features::PluginSystem\n- Features of modules that generate text tables\n\no Number::Iterator::XS:\n- Iterate numbers faster\n- https://metacpan.org/dist/Number-Iterator-XS\n\no NumSeq::Iter:\n- Generate a coderef iterator from a number sequence specification\n- https://metacpan.org/pod/NumSeq::Iter\n\no Object::Iterate:\n- Iterators for objects that know the next element\n- https://metacpan.org/dist/Object-Iterate\n\no OMOP::CSV::Validator:\n- Validates OMOP CDM CSV files against their expected data types\n- https://metacpan.org/pod/OMOP::CSV::Validator\n\no Parser::FIT:\n- A parser for garmin FIT (Flexible and Interoperable Data Transfer) files\n- https://metacpan.org/dist/Parser-FIT\n\no Syntax::Keyword::Junction:\n- Perl6 style Junction operators in Perl5\n- https://metacpan.org/pod/Syntax::Keyword::Junction\n- Essentially a fork of Perl6::Junction without the name Perl6\n- Perl6::Junction - Perl6 style Junction operators in Perl5\n\no Scalar::List::Utils:\n- A distribution of general-utility subroutines\n- https://metacpan.org/dist/Scalar-List-Utils\n\no Term::TablePrint:\n- Print a table to the terminal and browse it interactively\n- https://metacpan.org/dist/Term-TablePrint\n\no Text::ANSITable:\n- Create nice formatted tables using extended ASCII and ANSI colors\n- https://metacpan.org/pod/Text::ANSITable\n\no Text::ASCIITable:\n- Create a nice formatted table using ASCII characters\n- https://metacpan.org/pod/Text::ASCIITable\n\no Text::NumericData:\n- Many tools for parsing and writing of textual numeric data files\n- https://metacpan.org/pod/Text::NumericData\n\no Text::Pipe:\n- Common text filter API\n- https://metacpan.org/dist/Text-Pipe\n- This is a clever module for pipelining textual transformations\n- It has about 30 sub-modules\n\no Tree::DAG_Mode:\n- An N-ary tree\n- https://metacpan.org/dist/Tree-DAG_Node\n\no Tree::Simple::VisitorFactory\n- A factory object for dispensing Visitor objects\n- https://metacpan.org/pod/Tree::Simple::VisitorFactory\n\no Text::Treesitter:\n- Perl binding for tree-sitter\n- https://metacpan.org/pod/Text::Treesitter\n- Tree-sitter aims to be: General enough to parse any programming language\n- https://github.com/tree-sitter\n- https://github.com/tree-sitter-perl/\n\no Text::Table::Read::RelationOn::Tiny:\n- Read binary \"relation on (over) a set\" from a text table\n- https://metacpan.org/dist/Text-Table-Read-RelationOn-Tiny\n\no Tree::XPathEngine:\n- A re-usable XPath engine\n- http://metacpan.org/dist/Tree-XPathEngine\n\no Util::Medley::List:\n- Utility methods for working with lists\n- https://metacpan.org/pod/Util::Medley::List\n\no XML::XPathEngine:\n- A re-usable XPath engine for DOM-like trees\n- http://metacpan.org/dist/XML-XPathEngine\n",
        "title": "DataTraversal",
        "modified": "20250714020232217",
        "created": "20230501012018764"
    },
    {
        "text": "\"\"\"\no See also:\n- LinguaStuff\n- ParameterTypes\n\no Basic::Types::XS:\n- The great new Basic::Types::XS!\n\no CEFACT::Unit:\n- CEFACT unit handling\n- https://metacpan.org/dist/CEFACT-Unit\n- Uses Data::CEFACT::Unit below\n\no Contract::Declare:\n- Simple contract system for Perl interfaces\n- https://metacpan.org/pod/Contract::Declare\n\no Data types in SQLite:\n- https://www.sqlite.org/datatype3.html\n\no Data::CEFACT::Unit:\n- Data object for CEFACT unit\n- https://metacpan.org/pod/Data::CEFACT::Unit\n- See  CEFACT::Unit above\n\no Data::Float:\n- Details of the floating point data type\n- https://metacpan.org/pod/Data::Float\n\no Data::HashType:\n- Data object for hash type\n- https://metacpan.org/dist/Data-HashType\n\no Data::IconText:\n- Work with icon text\n- https://metacpan.org/dist/Data-IconText\n\no Data::Identifier:\n- Format independent identifier object\n- https://metacpan.org/pod/Data::Identifier\n\no Data::Identifier::Cloudlet:\n- Format independent identifier object\n- https://metacpan.org/pod/Data::Identifier::Cloudlet\n\no Data::Identifier::Generate:\n- Format independent identifier object\n- https://metacpan.org/pod/Data::Identifier::Generate\n\no Data::Identifier::Interface::Known:\n- Format independent identifier object\n- https://metacpan.org/pod/Data::Identifier::Interface::Known\n\no Data::Identifier::Interface::Userdata:\n- Format independent identifier object\n- https://metacpan.org/pod/Data::Identifier::Interface::Userdata\n\no Data::Integer:\n- Details of the native integer data type\n- https://metacpan.org/dist/Data-Integer\n\no Data::Perl:\n- Base classes wrapping fundamental Perl data types.\n- https://metacpan.org/pod/Data::Perl\n- Data::Perl is a collection of classes that wrap fundamental data types that exist in Perl\n\no Data::Pond:\n- Perl-based open notation for data\n- https://metacpan.org/dist/Data-Pond\n\no Keyword::Anonymous::Object:\n- Anonymous objects\n- https://metacpan.org/dist/Keyword-Anonymous-Object\n\no MooseX::Types:\n- Organize your Moose types in libraries\n- https://metacpan.org/dist/MooseX-Types\n\no MooX::HandlesVia:\n- NativeTrait-like behavior for Moo.\n- https://metacpan.org/pod/MooX::HandlesVia\n- But prefer Sub::HandlesVia below\n\no Number::Format:\n- Perl extension for formatting numbers\n- https://metacpan.org/dist/Number-Format\n\no Perl::Types:\n- Enable Perl data types\n- https://metacpan.org/dist/Perl-Types\n\no Range::Merge:\n- Merges ranges of data including subset/superset ranges\n- https://metacpan.org/dist/Range-Merge\n\no Rope:\n- Tied objects\n- https://metacpan.org/dist/Rope\n\no Scalar::Number:\n- Numeric aspects of scalars\n- https://metacpan.org/pod/Scalar::Number\n\no Specio:\n- Type constraints and coercions for Perl\n- https://metacpan.org/dist/Specio\n\no String::BooleanSimple:\n- Gets the boolean representative of a string\n- https://metacpan.org/pod/String::BooleanSimple\n\no Struct::Dumb:\n- Make simple lightweight record-like structures\n- https://metacpan.org/dist/Struct-Dumb\n\no Sub::HandlesVia:\n- Alternative handles_via implementation\n- https://metacpan.org/pod/Sub::HandlesVia\n- Replaces MooX::HandlesVia above for trait handling\n\no Tie::BoundedInteger:\n- Limit the magnitude of a number in a scalar\n- https://metacpan.org/dist/Tie-BoundedInteger\n\no Tie::Cycle:\n- Cycle through a list of values via a scalar\n- https://metacpan.org/dist/Tie-Cycle\n\no Tie::Toggle:\n- False and true, alternately, ad infinitum\n- https://metacpan.org/dist/Tie-Toggle\n- An endless series of Booleans\n\no Type::Guess:\n- Infer data types from an array of scalars\n- https://metacpan.org/pod/Type::Guess\n\no Type::Params:\n- Sub signature validation using Type::Tiny type constraints and coercions\n- https://metacpan.org/pod/Type::Params\n- https://blogs.perl.org/users/toby_inkster/2023/02/using-typeparams-effectively.html\n\no Type::Tiny:\n- Tiny, yet Moo(se)-compatible, type constraint\n- Contains Types::Standard amongst many other modules\n\no Types::Equal:\n- Type constraints for single value equality\n- https://metacpan.org/dist/Types-Equal\n\no Types::Music:\n- Type Library for Music Programming\n- https://metacpan.org/pod/Types::Music\n",
        "title": "DataTypes",
        "modified": "20250713014235176",
        "created": "20220628023742776"
    },
    {
        "text": "\"\"\"\no Brick:\n- Complex business rule data validation\n- https://metacpan.org/pod/Brick\n- See also Brick::Tutorial, Brick::UserGuide\n\no Data::Checks:\n- Value constraint checking\n- https://metacpan.org/dist/Data-Checks\n\no Data::Constraint:\n- https://metacpan.org/pod/Data::Constraint\n\no Data::Domain:\n- See also CGI::Expand and Test::InDomain\n\no Data::Message::Simple:\n- Data object for simple message\n- https://metacpan.org/pod/Data::Message::Simple\n\no Data::Transmute:\n- Transmute (transform) data structure using rules data\n\no Data::Validate:\n- Common data validation methods\n- https://metacpan.org/pod/Data::Validate\n\no Data::Validate::Domain:\n- Domain and host name validation\n- https://metacpan.org/dist/Data-Validate-Domain\n\no Data::Validate::IP:\n- IPv4 and IPv6 validation methods\n- https://metacpan.org/pod/Data::Validate::IP\n\no kura:\n- Store constraints for Data::Checks, Type::Tiny, Moose and more\n- https://metacpan.org/pod/kura\n\no Mo::utils:\n- Mo utilities\n- Contains 19 methods for checking data properties\n- https://metacpan.org/pod/Mo::utils\n\no Mo::utils::CEFACT:\n- Mo UN/CEFACT Common Code utilities\n- https://metacpan.org/dist/Mo-utils-CEFACT\n\no Mo::utils::CSS:\n- Mo CSS utilities\n- https://metacpan.org/dist/Mo-utils-CSS\n\no Mo::utils::URI:\n- Mo utilities for URIs\n- https://metacpan.org/dist/Mo-utils-URI\n\no Mo::utils::Number:\n- Mo number utilities\n- https://metacpan.org/pod/Mo::utils::Number\n\no Number::ZipCode::JP:\n- Validate Japanese zip-codes\n- https://metacpan.org/pod/Number::ZipCode::JP\n\no Params::Validate::Strict:\n- Validates a set of parameters against a schema\n- https://metacpan.org/pod/Params::Validate::Strict\n\no Poz:\n- A simple, composable, and extensible data validation library for Perl\n- https://metacpan.org/dist/Poz\n\no Scalar::Util::looks_like_number:\n- The name says it all\n- https://metacpan.org/dist/Scalar-Util-LooksLikeNumber\n\no Valiant:\n- https://metacpan.org/pod/Valiant\n\no Validate::Simple:\n- https://metacpan.org/dist/Validate-Simple\n\no Validate::Tiny:\n- Minimalistic data validation\n- https://metacpan.org/dist/Validate-Tiny\n",
        "title": "DataValidation",
        "modified": "20250713065914696",
        "created": "20210907042849986"
    },
    {
        "text": "\"\"\"\no See also:\n- LocaleStuff\n\no App::SpreadRevolutionaryDate:\n- Spread date and time from Revolutionary (Republican) Calendar on Bluesky, Twitter, Mastodon, Freenode and Liberachat.\n- https://metacpan.org/dist/App-SpreadRevolutionaryDate\n\no Calendar FAQ:\n- https://www.tondering.dk/claus/calendar.html\n\no https://dev.to/davorg/processing-dates-and-times-with-perl-31gh:\n- Discusses Time::Piece and DateTime\n- Deprecates Date::Calc and Date::Manip\n\no An FAQ for calendars:\n- https://www.tondering.dk/claus/calendar.html\n\no App::week:\n- Colorful calendar command for ANSI terminal\n- https://metacpan.org/dist/App-week\n\no Calendar::Simple:\n- Perl extension to create simple calendars\n- https://metacpan.org/pod/Calendar::Simple\n- Uses DateTime if installed\n\no Date::Age:\n- Return an age or age range from date(s)\n- https://metacpan.org/pod/Date::Age\n\no Date::Cmp:\n- Compare two dates with approximate parsing support\n- https://metacpan.org/dist/Date-Cmp\n\no Date::Parse::Modern\n- https://metacpan.org/pod/Date::Parse::Modern\n- Provide string to unixtime conversions\n\no Date::RangeParser::EN:\n- Parser for plain English date/time range strings\n- https://metacpan.org/pod/Date::RangeParser::EN\n- Extremely flexible\n\no Date::Utility:\n- A class that represents a datetime in various formats\n- Has a huge number of methods\n\no Date modules in general:\n- Date\n- HTTP::Date\n- Date::Utils (a Moo::Role)\n- Panda::Date\n- Class::Date\n- Print options for Date::Manip\n- http://pradeeppant.com/2019/08/date-print-formats-perl-datemanip/\n\no DateTime:\n- A date and time object for Perl\n- https://metacpan.org/pod/DateTime\n\no DateTime::Format::DB2:\n- Parse and format DB2 dates and times\n- https://metacpan.org/pod/DateTime::Format::DB2\n\no DateTime::Format::Intl:\n- A Web Intl.DateTimeFormat Class Implementation\n- This is a big module with a huge range of features\n- https://metacpan.org/pod/DateTime::Format::Intl\n\no DateTime::Format::ISO8601:\n- Parses ISO8601 formats\n- https://metacpan.org/dist/DateTime-Format-ISO8601\n\no DateTime::Format::Mail:\n- Convert between DateTime and RFC2822/822 formats\n- https://metacpan.org/pod/DateTime::Format::Mail\n\no DateTime::Format::Natural:\n- Parse informal natural language date/time strings\n- https://metacpan.org/dist/DateTime-Format-Natural\n- Note: This package contains various modules, including DateTime::Format::Natural::Lang::EN, which provides the English specific grammar and variables\n\no DateTime::Format::Text:\n- Find a Date in Text\n- https://metacpan.org/dist/DateTime-Format-Text\n\no DateTime::Format::W3CDTF:\n- Parse and format W3CDTF datetime strings\n- https://metacpan.org/pod/DateTime::Format::W3CDTF\n\no DateTime::Locale::FromCLDR:\n- DateTime Localised Data from Unicode CLDR\n- https://metacpan.org/dist/DateTime-Locale-FromCLDR\n\no DateTime::Ordinal:\n- The great new DateTime::Ordinal!\n- https://metacpan.org/dist/DateTime-Ordinal\n\no DateTime::Schedule:\n- Determine scheduled days in range based on exclusions\n- https://metacpan.org/dist/DateTime-Schedule\n\no DateTime::TimeZone:\n- Time zone object base class and factory\n- https://metacpan.org/dist/DateTime-TimeZone\n- Normally use via DateTime above\n\no  DateTime::Tiny:\n- A date object, with as little code as possible\n- https://metacpan.org/dist/DateTime-Tiny\n\no DateTimeX::Easy:\n- Parse a date/time string using the best method available\n- https://metacpan.org/dist/DateTimeX-Easy\n\no HTML::CalendarMonth:\n- Generate and manipulate HTML calendar months\n-https://metacpan.org/pod/HTML::CalendarMonth\n\no HTML::CalendarMonthSimple:\n- Perl Module for Generating HTML Calendars\n- https://metacpan.org/dist/HTML-CalendarMonthSimple\n- But use the previous module\n\no Oxford::Calendar:\n- University of Oxford calendar conversion routines\n- https://metacpan.org/dist/Oxford-Calendar\n\no Time::Duration:\n- Rounded or exact English expression of durations\n- https://metacpan.org/pod/Time::Duration\n- Preferred because it ships with Perl\n\no Time::Elapsed:\n- This module transforms the elapsed seconds into a human readable string\n- https://metacpan.org/pod/Time::Elapsed\n\no Time::Local:\n- Efficiently compute time from local and GMT time\n- https://metacpan.org/pod/Time::Local\n\no Time::OlsonTZ::Data:\n- Olson timezone data\n- https://metacpan.org/dist/Time-OlsonTZ-Data\n\no Time::Piece:\n- Object Oriented time objects\n- https://metacpan.org/pod/Time::Piece\n- Preferred because it ships with Perl\n- https://www.kcaran.com/posts/utc-local-date-conversion-in-perl-with-time-piece.html\n\no Time::Precise:\n- Extending standard time related functions to always include nanoseconds and always use full year\n- https://metacpan.org/dist/Time-Precise\n\no Time::Spec:\n- A wrapper arount struct timespec\n- https://metacpan.org/pod/Time::Spec\n\no TimeZone::TimeZoneDB:\n- Interface to https://timezonedb.com for looking up Timezone data\n- https://metacpan.org/dist/TimeZone-TimeZoneDB\n",
        "title": "DatesAndTimes",
        "modified": "20250714022435870",
        "created": "20211116071525287"
    },
    {
        "text": "\"\"\"\no See also:\n- SeismicOS\n- UnixWare\n- My home page http://savage.net.au/index.html for the Debian.Wiki\n\no Dpkg:\n- Module with core variables\n- https://metacpan.org/dist/Dpkg\n",
        "title": "DebianOS",
        "modified": "20250702023317395",
        "created": "20231030235520589"
    },
    {
        "text": "\"\"\"\no See also:\n- DataTraversal\n- TestingHelp\n\no  Carp::Always:\n- Warns and dies noisily with stack backtraces\n\no Carp::Object:\n- https://metacpan.org/pod/Carp::Object\n- https://blogs.perl.org/users/dami/2024/05/carpobject-an-object-oriented-replacement-for-carp-and-carpclan.html\n\no Debug::Easy:\n- A Handy Debugging Module With Colorized Output and Formatting\n- https://metacpan.org/pod/Debug::Easy\n\no Devel::REPL:\n- A modern perl interactive shell\n- https://metacpan.org/dist/Devel-REPL\n- Unfortunately, I (author of Runtime::Debugger) did not find a way to get the lexical variables in a scope\n\no perl5db.pl\n- The standard perl debugger\n\no Reply:\n- Read, eval, print, loop, yay!\n- https://metacpan.org/dist/Reply\n- Same problem as Devel::REPL\n\no Runtime::Debugger:\n- Easy to use REPL with existing lexical support and DWIM tab completion\n- https://metacpan.org/dist/Runtime-Debugger\n",
        "title": "DebuggingStuff",
        "modified": "20250713013724623",
        "created": "20231128072702029"
    },
    {
        "text": "\"\"\"\no See also:\n- MathsLibraries\n\no App::GUI::Cellgraph:\n- Draw pattern by cellular automata\n- https://metacpan.org/dist/App-GUI-Cellgraph\n\no DFA::Kleene:\n- Kleene's Algorithm for Deterministic Finite Automata\n- https://metacpan.org/dist/DFA-Kleene\n\n",
        "title": "DFA",
        "modified": "20250528012018129",
        "created": "20250108060633490"
    },
    {
        "text": "\"\"\"\no See also:\n- [[IETF]]\n- [[HTTPHandling]]\n- SocketStuff\n\no Data::DNS:\n- An interface to the DNS root zone database\n- https://metacpan.org/dist/Data-DNS\n\no IO::Socket::SSL:\n- SSL sockets with IO::Socket interface\n- https://metacpan.org/dist/IO-Socket-SSL\n- Has lots of docs and sample code\n\no Net::DNS::Paranoid:\n- Paranoid dns resolver\n- https://metacpan.org/dist/Net-DNS-Paranoid\n- Can use with Furl::HTTP\n- If using LWP, should wrap Net::DNS::Paranoid module with LWPx::ParanoidHandler\n\no Net::DNS::Resolver::Unbound:\n- Net::DNS resolver based on libunbound\n- https://metacpan.org/dist/Net-DNS-Resolver-Unbound\n\no Net::Domain::Parts:\n- Extract sub-domain, domain and TLD parts of a domain name.\n- https://metacpan.org/dist/Net-Domain-Parts\n- Meaning 'www.perlmonks.org' => Domain: perlmonks.org, Subdomain: www, TLD: org\n\no Net::Domain::TLD:\n- Work with TLD names\n- https://metacpan.org/pod/Net::Domain::TLD\n\no Net::DNS::SEC:\n- DNSSEC extensions to Net::DNS\n- https://metacpan.org/dist/Net-DNS-SEC\n\no Net::IDN::Encode:\n- Internationalizing Domain Names in Applications (IDNA)\n- https://metacpan.org/pod/Net::IDN::Encode\n- https://datatracker.ietf.org/doc/html/rfc3492\n- https://datatracker.ietf.org/doc/html/rfc5890\n- See also URI in [[HTTPHandling]]\n\no Net::SSLeay:\n- Steps\n- 1 sudo apt-get install libssl-dev\n- 2 cpanm Net::SSLeay\n- 3 HTTP::Tiny with https support. See [[HTTPHandling]] or\n- 4 IO::Socket::SSL\n\no OpenDNS::MyIP:\n- Get your public IP address\n- https://metacpan.org/dist/OpenDNS-MyIP\n\no Zonemaster::Backend:\n- A system for running Zonemaster tests asynchronously through an RPC-API\n- https://metacpan.org/dist/Zonemaster-Backend\n\no Zonemaster::CLI:\n- Run Zonemaster tests from the command line\n- https://metacpan.org/dist/Zonemaster-CLI\n\no Zonemaster::Engine:\n- A tool to check the quality of a DNS zone\n- One of a set of Zonemaster::* modules\n- https://metacpan.org/dist/Zonemaster-Engine\n\no Zonemaster::LDNS:\n- Perl wrapper for the ldns DNS library\n- https://metacpan.org/dist/Zonemaster-LDNS\n",
        "title": "DnsStuff",
        "modified": "20250702022740558",
        "created": "20240206231240082"
    },
    {
        "text": "\"\"\"\no https://publicsuffix.org/list/public_suffix_list.dat\n\no App::sslmaker:\n- Be your own SSL certificate authority\n- https://metacpan.org/dist/App-sslmaker\n\no App::url:\n- Format a URL according to a sprintf-like template\n- https://metacpan.org/pod/App::url\n\no Net::PublicSuffixList:\n- https://metacpan.org/pod/Net::PublicSuffixList\n",
        "title": "DomainNames",
        "modified": "20250313063649710",
        "created": "20240212023128448"
    },
    {
        "created": "20240717002307158",
        "text": "\"\"\"\no Author:\n- Ron Savage\n- Melbourne, Victoria, Australia\n- http://savage.net.au. Has links to various wikis\n- https://symboliciq.au\n- https://quantumiq.au\n- https://metacpan.org/author/RSAVAGE\n\no version:\n- Perl extension for Version Objects\n- https://metacpan.org/dist/versionhttps://metacpan.org/dist/version\n\no V 1.29:\n- Unreleased\n- Add Alien::Bit, Data::OFN::Address, Math::AnyNum, Math::Interpolator, Math::NLopt, Math::Permutation to MathsLibraries\n- Add Alien::gdal, Data::OFN::Common to GeographicStuff\n- Add Alien::YAMLScript, YAMLScript to YamlStuff\n- Add App::PAUSE::Comaint to GitHubAndPause\n- Add App::KGB, Net::CampaignMonitor, Net::Azure::NotificationHubs, Net::Flickr::Backup, Opsview::RestAPI, Playwright, WebService::Simple, WebService::TogetherWeRemember, WWW::YaCyBlacklist, XML::Compile::WSS, XML::Compile::WSS::Signature to WebServices\n- Add App::MARC::Validator, Data::MARC::Field008, MARC::Field008, MARC::Validator to BibliographicStuff\n- Add App::pepper to ExtensibleProvisioningProtocol\n- Add App::safer, Encode::Wide, Text::Safer, Unicode::Escape to [[UTF8]]\n- Add App::SpreadRevolutionaryDate, Date::Cmp to DatesAndTimes\n- Add App::sshca to [[SSH]]\n- Add App::traveller, IPCamera::Reolink, Net::Cloudflare::DNS, Travel::Routing::DE::DBRIS, Travel::Status::DE::DBRIS, Travel::Status::DE::HAFAS, Travel::Status::MOTIS to SystemMonitoring\n- Add Art-Net, CIDR, CORS, DMARC, RDM, UPD to [[Acronyms]]\n- Add AsposeCellsCloud::CellsApi to OfficeFiles\n- Add AWS::Lambda, AWS::XRay, BsDiPa, File::Find::Rule, File::FStore, File::FStore::Base, File::FStore::File, File::Information::Base, File::Information::Filesystem, File::Information::Inode, File::Open::NoCache::ReadOnly, File::Stubb, Filename::Type::Audio, Filename::Type::Backup, Filename::Type::Ebook, Filename::Type::Executable, Filename::Type::Image, Filename::Type::Perl::Release to FileHandling\n- Add B::Keywords, exact, Module::Signature, PAR::Packer, URI::PackageURL to ModuleBuilding\n- Add BibTeX para containing BibTeX::Parser\n- Add BioInformatics para containing Bio::MUST::Apps::OmpaPa, Bio::MUST::Core and shift Pheno::Ranker there from DataTraversal\n- Add Blockchain para containing Blockchain::Ethereum\n- Add Bluesky::Poster to SocialMedia\n- Add App::dbitemplater, Couch::DB, DB_File, DBD::KB, DBD::Pg, DBD::PgAsync to DatabaseAndSQL\n- Add CPAN::Testers::Schema to [[CPAN]]\n- Add Crypt::Bear, Crypt::OpenSSL::BaseFunc, Crypt::Protocol, Crypt::Sodium::XS, Filter::Crypto, Filter::Crypto::Decrypt to CryptoStuff\n- Add CtrlO::PDF, PDFio::Architect, PDF::Reuse to PdfStuff\n- Add CVSS to SecurityPolicy\n- Add autobox, autobox::Text, autobox::Time::Piece, CXC::Data::Visitor, Data::Alias, Data::Edit::Xml::Reuse, Data::Printer::Filter::JMAP, Data::Reuse, Data::Visitor::Lite, Data::Visitor::Tiny, Data::Walk, List::Lazy to DataTraversal\n- Add CXC::Exporter::Util to ExportHandling\n- Add Data::Censor to DataCleaning\n- Add CEFACT::Unit, Data::CEFACT::Unit, Data::HashType, Data::IconText, Data::Identifier::Cloudlet, Data::Identifier::Interface::Userdata, Data::Identifier::Generate to DataTypes\n- Add Data::Fetch, Parallel::Pipes to ParallelProcessing\n- Add Data::Power::Inspection to [[IoT]]\n- Add Data::SimpleKV, Data::TagDB::Tag, DB::Berkeley, DiaColloDB, Paws::DynamoDB::Response::Parser to DatabaseAndSQL\n- Add Data::URIID::Base, HTTP::ServerEvent, Query::Param to [[HTTPHandling]]\n- Add Date::Holidays, Date::Holidays::TW, Lingua::RU::Num2Word to LinguaStuff\n- Add Device::AVR::UPDI, Net::Async::ArtNet to HardwareStuff\n- Add Dispatch::Class to SwitchStatements\n- Add Dpkg to DebianOS\n- Add Email::Send::YYClouds, Mail::AuthenticationResults, Mail::DMARC, Mail::DWIM to EmailStuff\n- Add Event::RPC, Future, Future::Selector, Future::XS, Promises to EventStuff\n- Add [[Games]] para containing Games::Mahjongg::Solver::deBondt::FFI, Games::Solitaire::BlackHole::Solver\n- Add Genealogy::Obituary::Lookup, Genealogy::Obituary::Parse, Genealogy::Relationship to GenealogyStuff\n- Add Geo::Coder::XYZ, Geo::GDAL::FFI to GeographicStuff\n- Add Getopt::EX::i18n to CommandLineStuff\n- Add GoogleAds para containing Google::Ads::GoogleAds::Client\n- Add Hash::AsObject, Hash::Objectify, Object::Adhoc, Object::Anon, Object::Result to ClassStuff\n- Add Hash::Util::Exists::Tiny, Tie::Hash::MultiValue to HashHandling\n- Add HTML::Parser, HTML::Tabulate to [[HTMLHandling]]\n- Add HTTP::Tiny::Mech, HTTP::Tiny::UA, IO::Socket::SSL, Query::Param, URI::Escape to [[HTTPHandling]]\n- Add Imager::File::QOI, PDL::Drawing::Prima to ChartingAndPlotting\n- Add InlineStuff para containing Inline, Inline::C, Inline::Lua\n- Add IO::AIO, IO::AIO::LoadLimited, IO::AIO::Util, IO::Handle, IO::Socket, IO::Socket::IP to [[IO]]\n- Add Iterator, Iterator::DBI, Iterator::IO, Iterator::Misc, Iterator::Simple, Iterator::Util to DataTraversal\n- Add JSON::PP, JSON::Typist, JSONL::Subset to JsonStuff\n- AddLaTeX::ToUnicode to LaTeX\n- Add Lemonldap::NG::Manager, OIDC::Client to UsernamePassword\n- Add Log::Dispatch::UnixSyslog, Log::Report::Template to LoggingStuff\n- Add Markdown::Simple, Term::ANSIEncode to MarkdownHandling\n- Add Mo::utils::CEFACT, Mo::utils::CSS, Number::ZipCode::JP to DataValidation\n- Add Net::Async::HTTP::Server, Net::Firewall::BlockerHelper, Plack::Middleware::Session to [[HTTPServers]]\n- Add Net::IDN::Encode, Net::DNS::Resolver::Unbound, Zonemaster::LDNS to DnsStuff\n- Add Net::UPnP to NetworkProgramming\n- Add OpenAPI::Client::OpenAI to AiEngines\n- Add OrgINI to OrgDocHandling\n- Add Pegex, Query::Tags to ParsingStuff\n- Add PerlBench to PerlDistros\n- Add Perl::Critic::Grape to CodeTidyingCode\n- Add perlfaq to PerlDocumentation\n- Add PerlInternals para containing B::CC, Opcode, Opcodes, Safe\n- Add PhpStuff para containing PHP::Serialization, PHP::Serialization::XS\n- Add Plack::Test::Agent, TAP::DOM, Test::MockModule, Test::Signature, Test2::Require::ProgramInPath, Test2::Util::DistFiles to TestingHelp\n- Add Pod::Example, Pod::Html, Pod::L10N to PodHandling\n- Add Poker::Eval to [[Games]]\n- Add [[POSIX]] para containing POSIX::2008\n- Add RT::Extension::ActivityReports, RT::Extension::AI, RT::Extension::AutomaticAssignment,  RT::Extension::CommandByMail, RT::Extension::CSAT, RT::Extension::ExcelFeed, RT::Extension::FormTools, RT::Extension::ExtractCustomFieldValues, RT::Extension::HelpDesk, RT::Extension::InlineHelp, RT::Extension::JSGantt, RT::Extension::RepeatTicket, RT::Extension::Tags to RequestTracker\n- Add SeismicOS containing App::SeismicUnixGui\n- Add Socket to SocketStuff\n- Add String::Truncate, Text::Wrap to StringStuff\n- Add Telugu::TGC to LocaleStuff\n- Add String::Interpolate::RE, Template::Tiny to TemplateStuff\n- Add Term::ReadLine, Term::ReadLine::Gnu to CommandLineStuff\n- Add Thrift to ApacheStuff\n- Add WebAssembly para containing Extism\n- Add WWW::Noss to [[RSS]]\n- Add [[X11]] para containing X11::XCB\n- Add XML::Entities to [[XML]]\n- Delete OpenSCAD para\n- Fold contents of CloneStuff into DataTraversal\n- Fold contents of HashVersusObject into HashHandling\n- Fold contents of LocalCPAN into [[CPAN]]\n- Fold contents of Net::SSLeay into [[HTTPHandling]]\n- Rename DebianStuff to DebianOS\n- Update ChildProcesses\n- Update [[Color]] para re Graphics::Toolkit::Color's link to MetaCPAN\n- Update [[Graphs]] para re Graph::Nauty, SVG, Svg::Simple, SVG::TT::Graph\n- Update ModernPerl para re discouraging Modern::Perl for V 5.38 and newer\n\no V 1.28:\n- 2025-06-01\n- Add Aion, Module::Patch, Object::Configure, Perl::APIReference to ModuleBuilding\n- Add Alien::PDFio, PDFio::FFI to PdfStuff, and reorder some entries in that para\n- Add App::CdUtils, File::URIList, Filename::Type::Archive to FileHandling\n- Add App::ClipboardUtils to ClipBoard\n- Add App::rdapper, Net::Whois::Raw to [[RDAP]]\n- Add Basic::Coercion::XS to StringStuff\n- Add Basic::Types::XS to DataTypes\n- Add Business::LetterWriter to TemplateStuff\n- Add Business::Tax::VAT::Validation to BusinessApps\n- Add CPAN::Perl::Releases, CPAN::Testers::ParseReport to [[CPAN]]\n- Add Crypt::SecretBuffer to CryptoStuff\n- Add Cucumber::TagExpressions, Devel::Size, Gherkin, Test::BDD::Cucumber, Test::DescribeMe, Test::Is, Test::Needs, Test::Settings to TestingHelp\n- Add Data::Sah, Params::ValidationCompiler to DataCleaning\n- Add Date::Age to DatesAndTimes\n- Add GraphViz2, GraphViz2::Marpa, GraphViz2::Marpa::PathUtils, JSON::Pointer::Marpa, Marpa::R2, MarpaX::Grammar::GraphViz2, MarpaX::Grammar::Parser, MarpaX::Languages::Dash, MarpaX::Languages::SVG::Parser to [[Marpa]]\n- Add HTML::HTMLdoc, Text::Table::HTML::DataTables to [[HTMLHandling]]\n- Add ICANN::gTLD to RegistrySystemTesting\n- Add Lingua::FR::Numbers::Ordinate to LinguaStuff\n- Add MIDI::RtController::Filter::CC to MidiControllers\n- Add Mo::utils::URI to DataValidation\n- Add Module::CoreList to PerlDocumentation\n- Add Net::CIDR::Set to NetworkProgramming\n- Add Net::SAML2 to UsernamePassword\n- Add Object::Adhoc, Quiq to ClassStuff\n- Add Pheno::Ranker to DataTraversal\n- Add Quiq to ClassStuff\n- Add RT::Extension::Announce, RT::Extension::MandatoryOnTransition, RTx::Calendar to RequestTracker\n- Add Text::Names::Abbreviate to ProperNames\n- Add Thread::CSP to ParallelProcessing\n- Add Wanted to WantArray\n- Delete Class::Debug from DebuggingStuff. Now called Object::Configure\n- Fix a few typos where para [[HTMLHandling]] lacked a closing bracket which make it a TiddlyWiki link-able token\n- Fold contents of GitGUIs into GitStuff\n- Reformat 'See also' at the start of many paras\n- Rename VideoStuff to AudioVisual and add Audio::Nama\n- Try again to make TestingHelp list things in alphabetical order, and add link to CPAN Testers test results for a typical module\n\no V 1.27\n- 21-05-2025\n- Add AnyEvent::Redis, DBD::Oracle, Protocol::Redis::XS, Redis, Redis::hiredis to DatabaseAndSQL\n- Add App::Greple::xlate, Directory::Diff, Doubly, Doubly::Linked, Doubly::Linked::PP to DataTraversal\n- Add App::BlurFill, App::Image::Generator, Image::PNG::QRCode, SVG::Timeline, SVG::TrafficLight to ChartingAndPlotting\n- Add App::Netdisco, App::NetdiscoX::Web::Plugin::Observium to NetworkProgramming\n- Add App::NKC2MARC to BibliographicStuff\n- Add App::PPI::Dumper (was in DataTraversal), Dist::Surveyor, PPIx::Regexp, PPIx::Utilities, PPIx::Utils, Text::FindIndent, Text::Minify::XS to TextAnalysisAndFormatting\n- Add App::Wikidata::Template::CS::CitaceMonografie to BibliographicStuff\n- Add Archive::Unzip::Burst, Archive::Zip, Archive::Zip::SimpleZip, Archive::Zip::SimpleUnzip, Compress::Zstd, FU::Util, IO::Compress::Brotli, IO::Uncompress::Unzip, streamzip to ZipFIles\n- Add Business::ISBN::Data to BusinessApps\n- Add Cache::FastMmap, Cache::File::Simple to CachingStuff\n- Add CGI::Expand, Hash::Flatten, HTTP::Rollup to HashHandling\n- Add CGI::Info, CGI::Session, CGI::Session::Driver::mariadb, CGI::Simple, HTTP::Message, Net::Amazon::Glacier, Net::Amazon::Signature::V4, URI, Web::Components, Web::ComposableRequest, Web::Simple to HTTPHandling\n- Add Char::Replace to RegexpStuff\n- Add para ChatBots containing Eliza::Chatbot\n- Add Class::Debug to DebuggingStuff\n- Add Const::Fast, Const::XS, Readonly, Readonly::Values::Months to ConstantStuff\n- Add Crypt::JWT, Crypt::OpenSSL::RSA, RT::Extension::TOTPMFA to CryptoStuff\n- Add Data::DNS to DnsStuff\n- Add Data::LnArray, Data::LnArray::XS to ArrayHandling\n- Add Datastar::SSE, Monitoring::Livestatus to SystemMonitoring\n- Add Debug::CodeBlock, Module::Mask, Test::Class::Moose, Test::JSON::Schema, Test::MixedScripts, Test::MockFile, Test::YAFT to TestingHelp\n- Add EBook::Gutenberg to EBookHandling\n- Add Encode::IMAPUTF7, Mail::SPF to EmailStuff\n- Add Exporter, Exporter::Tiny, Sub::Exporter to ExportHandling\n- Add ExtUtils::ParseXS, Subclass::Of, Xerarch to ModuleBuilding\n- Add File::Syslogger, Log::Abstraction, Readonly::Values::Syslog to LoggingStuff\n- Add Filename::Type::Compressed, Redirection to FileHandling\n- Add Geo::CheapRuler to GeographicStuff\n- Add HTML::Blitz, HTML::Blitz::Builder, Mojo::Template, Template::Plugin::StringTree, Text::Textile, Text::Textile2MarcdownStandalone, YATT::Lite to TemplateStuff\n- Add HTML::Selector::XPath to CssHandling\n- Add I18N::Langinfo, Lingua::Boolean::Tiny to LinguaStuff\n- Add JavaScript::Packer to JavaScript\n- Add para LibVirt containing Protocol::Sys::Virt, Sys::Async::Virt, Sys::Virt\n- Add Pod::Markdown::Github, Text::Markdown, Text::Markup to MarkdownHandling\n- Add Math::Polygon to MathsLibraries\n- Add MetaCPAN::Client to CPAN\n- Add Net::eBay, WebService::AbuseIPDB to WebServices\n- Add para OpenSCAN containing CAD::OpenSCAD\n- Add OpenTelemetry::Exporter::OTLP, OpenTelemetry::SDK to OpenTelemetry\n- Add Path::Tiny, Text::Iconv to [[UTF8]]\n- Add PDF::API2::Resource::XObject::Image::Imager to PdfStuff\n- Add Perl::Metrics::Halstead, SlapbirdAPM::Agent::Dancer2 to MeasureMetrics\n- Add Perl::Types, String::BooleanSimple to DataTypes\n- Add Pod::Github, Pod::Markdown::Github, Pod::Simple::HTML, Pod::Pod::Webserver to PodHandling\n- Add POE::Loop::EV, prefork to ParallelProcessing\n- Add POSIX::RT::Signal to TimerWare\n- Add para RequestTracker containing Module::Install::RTx, RT::Extension::QuickAssign\n- Add Rope::Cmd to CommandLineStuff\n- Add Safe::Isa to NewOperators\n- Add Selenium::Remote::Driver, Weasel::Driver::Selenium2 to BrowserStuff\n- Add SpeL::Wizard VideoStuff\n- Add Math::Random::MT, Statistics::CaseResampling to StatisticsStuff\n- Add Term::ANSI::Sprintf to [[Color]]\n- Add Text::Table::HTML to [[HTMLHandling]]\n- Add Unexpected to ExceptionHandling\n- Add URN::OASIS::SAML2 to UsernamePassword\n- Add User::Information to OsStuff\n- Add XML::IETF, XML::PP, XML::Simple to [[XML]]\n- Delete para DataMirror since Data::Mirror is in DataTraversal. Also delete same module from WebServices\n- Fold the contents of IpAddresses into NetworkProgramming\n- Fold the contents of DebianStuff into Debian.Wiki.html\n- Simplify this para by replacing all ' and ' with ','\n- Sort modules by name in HTTPHandling\n- Update IoLayers with a note about :raw\n- Update HTTP::Promise in HTTPHandling\n\no V 1.26:\n- 2025-05-02\n- Add para AiEngines containing Langertha\n- Add Alien::Build, Alien::cmake3, App::Module::Lister, B, Blessed::Merge, Caller::Reverse, Class::Accessor, Class::Accessor::Fast, Class::Accessor::Validated, Devel::MaintBlead, DBIx::VersionedSubs, Devel::Required, Devel::ThreadsForks, ExtUtils::Typemaps::Magic, ExtUtils::Typemaps::Misc, Factory::Sub, Hades, Hades::Exporter, Hades::Realm::Import::Export, Local::No::Longer::Indexable, Mite, Module::Extract::VERSION, Module::Generate, Module::Runtime, Nefariousm ODS, ogd, PPI::Dumper, Simple::Tuple, SourceCode::LineCounter::Perl, Variable::Magic, YAOO to ModuleBuilding\n- Add Alien::CFITSIO to ChartingAndPlotting\n- Add App::cpm, App::cpx, CPAN::Mini::Inject, CPAN::Requirements::Dynamic, cpanscan.com to [[CPAN]]\n- Add App::DownloadsDirUtils to GitHubAndPause\n- Add App::GitUtils to GitStuff\n- Add App::MARC::Filter, App::MARC::List, MARC::Leader, MARC::Leader::Utils to BibliographicStuff\n- Add App::PPI::Dumper, Array::Contains, Data::FastPack, Data::LNPath, Data::Page, Data::Pageset, Data::Pageset::Exponential, Object::Iterate to DataTraversal\n- Add App::Mxpress::PDF, PkgConfig to PdfStuff\n- Add Archive::SCS to ZipFiles\n- Add ArrayData::Lingua::Word::ID::KBBI::Proverb, WordList::ID::KBBI::Proverb to LinguaStuff\n- Add Array::Merge::Unique to ArrayHandling\n- Add Authen::Passphrase, Crypt::Curve2551, Crypt::SysRandom::XS, Crypt::URandom::MonkeyPatch  to CryptoStuff\n- Add Benchmark::Thread::Size to BenchmarkingTools\n- Add Bijection, Bijection::XS, Math::GMatrix, Number::Equation,  Number::Equation::XS, Number::Fraction, smallnum, smallnum::XS to MathsLibraries\n- Add para BillOfMaterials containing SBOM::CycloneDX\n- Add Brick, Mo::utils::Number to DataValidation\n- Add Business::ISMN to BusinessApps\n- Add CHI, Class::Simple::Cached, Class::Simple::Readonly::Cached, LCC, Memoize to CachingStuff\n- Add Chrome::Util::Profile, Firefox::Util::Profile, WWW::Mechanize::Chrome, WWW::Mechanize::Chrome::DOMops, Vivaldi::Util::Profile to BrowserStuff\n- Add para CodeTidyingCode containing Code::TinyAll\n- Add Command::Runner to ChildProcesses\n- Add Config::Abstraction, Config::Model, Config::Model::Itself, Config::Model::OpenSsh, Config::Model::Systemd to ConfigFiles. Config::Model::OpenSsh was in para [[SSH]]\n- Add Config::LNPath to YamlStuff\n- Add Cookie,  HTTP::Cookies, HTTP::Cookies::Microsoft, HTTP::Cookies::Mozilla, HTTP::Cookies::Netscape, HTTP::CookieJar::LWP, HTTP::Server::Simple, HTTP::Server::Simple::CGI, Net::Server, Router::R3, Router::Ragel, Router::XS to [[HTTPHandling]]\n- Add Data::OFAC, Data::Validate::Sanctions to SecurityPolicy\n- Add Data::Integer, Tie::BoundedInteger, Tie::Cycle, Tie::Toggle, Types::Music to DataTypes\n- Add Data::Message::Simple, Mo::utils to DataValidation\n- Add DateTime::Ordinal to DatesAndTimes\n- Add DBIx::Class::Helper::ColumnNames, Data::ObjectDriver, TDB_FileX to DatabaseAndSQL\n- Add Data::XLSX::Parser, Excel::ValueReader::XLSX, Excel::XLSX to SpreadsheetStuff\n- Add Devel::Cover, Grafana, InfluxDB, Telegraf, Lab::Measurement::Manual to MeasureMetrics\n- Add Document::OOXML, MsOffice::Word::Template to OfficeFiles\n- Add Enterprise::Licence, Software::Copyright to LicenceStuff\n- Add File::Copy::clonefile, File::Fetch, File::Find::Closures, File::FindUniq, File::Store, File::Util::Copy, Linux::FD to FileHandling\n- Add File::Util::Sort to SortModules\n- Add para FinancialStuff containing Finance::Quote\n- Add gb64, IOLayer::QuotedPrint, PerlIO::via::Include, PerlIO::via::Pod to IoLayers (previously called PerlIoLayers)\n- Add Genealogy::Wills to GenealogyStuff\n- Add Geo::Coder::GeocodeFarm, Geo::Location::IP, Geo::WebService::OpenCellID, IP::Geolocation::MMDB, Starlink::AST to GeographicStuff\n- Add para HardwareStuff containing OPCUA::Open62541\n- Add IO::Interactive to [[IO]]\n- Add sample code to JQ::Lite in para JavaScript\n- Add JSON::MaybeXS, JSON::Schema::Generate, JSON::Schema::Tiny to JsonStuff\n- Add Linux::Statm::Tiny to MeasureMetrics\n- Add Locale::Intl to LocaleStuff\n- Add Log::Dispatch::Buffer, Log::Dispatch::TAP, Log::Dispatch::WarnDie, Log::Dispatch::XML, Log::JSON::Lines, Log::Report, Log::Report::Lexicon, LWP::CurlLog, Parse::Syslog::Line to LoggingStuff\n- Add Mail::Box::IMAP4, Mail::Box::POP3, Mail::Message, MIME::Types to EmailStuff\n- Add Net::EPP to ExtensibleProvisioningProtocol\n- Add Net::FullAuto to [[SSH]]\n- Add Net::OAuth, WWW::OAuth to WebSecurity\n- Add Net::RDAP::Server to [[RDAP]]\n- Add para OpenTelemetry containing OpenTelemetry\n- Add OptArgs2 to CommandLineStuff\n- Add Params::Get to ParameterTypes\n- Add Phone::Valid::International::Loose to PhoneNumbers\n- Add Rule::Engine, Sub::Chain, Sub::Middler, Sub::Pipeline to PipeLines\n- Add para ScreenStuff containing Imager::Screenshot, Screensaver::Any\n- Add SMS::AQL to WebServices\n- Add para SocialMedia containing HTML::SocialMeta\n- Add para StaticSiteGenerators containing App::sitelenmute\n- Add PDL to StatisticsStuff\n- Add para RaspberryPi containing HiPi\n- Add Software::Security::Policy to SecurityPolicy\n- Add String::Elide::Lines, String::Elide::Tiny, String::Lookup, String::Trim::More to StringStuff\n- Add Struct::Match to SwitchStatements because I can't think of a better place for it :-)\n- Add para SystemMonitoring containing Lemonldap::NG::Common, Lemonldap::NG::Handler, Lemonldap::NG::Manager, Lemonldap::NG::Portal, Monitoring::Sneck, Sys::OsPackage\n- Add Template to TemplateStuff\n- Add Test::Builder, Test::CheckGitStatus, Test::Data, Test::Deep, Test::Env, Test::Harness, Test::ISBN, Test::JSON::Schema::Acceptance, Test::Manifest, Test::More, Test::URI to TestingHelp\n- Add IO::Async, IO::Async::Loop::Epoll, IO::Async::Loop::Epoll::FD, Parallel::Iterator, POSIX::AtFork, Thread::Bless, Thread::Conveyor, Thread::Conveyor::Monitored, Thread::Deadlock, Thread::Exit, threads::farm, Thread::Needs, Thread::Pool, Thread::Pool::Resolve, Thread::Queue::Any, Thread::Queue::Any::Monitored, Thread::Rand, Thread::Running, Thread::Serialize, Thread::Status, Thread::Synchronized, Thread::Use to ParallelProcessing\n- Add Text::Transliterator::Unaccent, Unicode::Precis, Unicode::Precis::Preparation, Unicode::Tussle to [[UTF8]]\n- Add validator.w3.org/nu/ to [[HTMLHandling]\n- Add para VirtualEnvironment containing Net::Proxmox::VE\n- Fold contents of RandomStuff into CryptoStuff\n- Fold contents of ReadPipe into ParallelProcessing\n- Fold contents of UtilLibraries into DataTraversal\n- Fold contents of VariableMagic into ModuleBuilding\n- Rename ApacheLogs to ApacheStuff, add Apache::Session::Browseable\n\no V 1.25:\n- 2025-03-31\n- Add Alien, ExtUtils::Depends, LaunchDarkly::Server, Module::List, Package::Subroutine, XS::Framework, XS::Install, XS::Manifesto to ModuleBuilding\n- Add para AntiVirusStuff containing File::Scan::ClamAV\n- Add App::ANSIColorUtils, Color::ANSI::Util, Color::RGB::Util, Term::ANSIColor, Term::Chrome, Term::ExtendedColor,  to [[Color]]\n- Add App::cat::v to CommandLineStuff\n- Add App::Greple::stripe, autobox::Lookup, Devel::Walk, OMOP::CSV::Validator, Text::Pipe to DataTraversal\n- Add App::ipinfo, Net::Whois::IANA to [[RDAP]]\n- Add App::perlimports to ModuleBuilding\n- Add Array::Intersection to ArrayHandling\n- Add ArrayData::Lingua::Word::ID::KBBI::FigureOfSpeech, Calendar::Indonesia::Holiday, Koha::Contrib::Tamil, Lingua::String, Unicode::Japanese, WordList::ID::KBBI::ByClass::Adverb to LinguaStuff\n- Add para AssemblerX86 containing CPU::x86_64::InstructionWriter\n- Add para AutomatedBackups containing App::BackupPlan\n- Add Benchmark::DKbench to BenchmarkingTools\n- Add para BibliographicStuff containing MARC::Convert::Wikidata::Object, Net::Z3950::FOLIO, Net::Z3950::SimpleServer\n- Add Calendar FAQ, DateTime::Format::DB2, DateTime::Format::Natural, HTML::CalendarMonth, HTML::CalendarMonthSimple to DatesAndTimes\n- Add Config::MorePerl to ConfigFiles\n- Add CPAN::Maker to [[CPAN]]\n- Add Authen::SASL, CPANSA::DB to SecurityPolicy\n- Add a link to 'The CSS 2024 Snapshot', CSS::Inliner to CssHandling\n- Add Crypt::Diceware, Crypt::SMIME, libcrypto to CryptoStuff\n- Add Data::Entropy to RandomStuff\n- Add Data::Float, Data::Perl, Data::Pond, MooseX::Types, MooX::HandlesVia, Scalar::Number, Sub::HandlesVia, Type::Guess to DataTypes\n- Add Data::Validate, Data::Validate::Domain, Data::Validate::IP, Scalar::Util::Looks_like_number to DataValidation\n- Add DBD::Sybase, DBIx::Class::EncodedColumn, DBIx::Class::Schema, DBIx::Class::Schema::Loader, LMDB_File, SQL::Interp to DatabaseAndSQL\n- Add Email::Sender::Transport::SMTP, Email::Sender::Transport::SMTP::Persistent to EmailStuff\n- Add Export::XS to ExportHandling\n- Add File::Copy::NoClobber, File::Lockfile::Emacs, File::Sticker, File::Util::Rename, Module::Filename, Storage::Abstract to FileHandling\n- Add Firefox::Marionette etc in BrowserStuff\n- Add Geo::AnomalyDetector, Geo::Coder::GeoApify, Geo::IPinfo to GeographicStuff\n- Add a link to 'The HTML Living Standard', HTML::ElementTable to [[HTMLHandling]]\n- Add https://imagetragick.com/, File::LibMagic, Image::JPEG::Size, Image::Magick::Safer, Imager::Font::FT2 to ChartingAndPlotting\n- Add JQ::Lite to JavaScript\n- Add Locale::Codes to LocaleStuff\n- Add Mail::SpamAssassin::Plugin::DBSCORE to EmailStuff\n- Add App::GUI::Harmonograph, App::GUI::Juliagraph, Math::BigInt, Math::BigInt::BitVect, Math::BigInt::FastCalc, Math::BigInt::GMP, Math::BigInt::GMPz, Math::BigInt::Lite, Math::BigInt::Pari, Math::Pari, Math::PlanePath, Math::Symbolic::Custom::CollectSimplify, Math::Symbolic::Custom::Matrix, Math::Symbolic::Custom::ToShorterString, Math::Symbolic::Custom::ToTallString to MathsLibraries\n- Add para MidiControllers containing MIDI::RtController\n- Add Minima, Mojolicious, UniEvent::HTTP::Manager to HTTPServers. Mojo was in InterestingModules\n- Add Net::Domain::TLD to DnsStuff\n- Add Net::Versa::Director to NetworkProgramming\n- Add next::XS to ModulePlugins\n- Add para OpenGL containing OpenGL, OpenGL::GLFW,  OpenGL::GLUT, OpenGL::Modern\n- Add OpenDNS::MyIP to DsnStuff\n- Add para PacketCapture containing File::PCAP, Image::ExifTool::PCAP, Metabrik::Forensic::Pcap, Net::Inspect, Net::Pcap, Net::Pcap::Easy, Sniffer::HTTP\n- Add PDF::WebKit, https://tools.pdf24.org/en/, extra links to PdfStuff\n- Add para PhoneNumbers containing Number::Phone\n- Add Pod::Coverage, Pod::Coverage::TrustMe, Pod::Usage to PodHandling\n- Add Power::Outlet to [[IoT]]\n- Add para ProjectManagement containing App::Dest\n- Add Rex to RemoteDesktops\n- Add Scientist, Test2::Plugin::UUID to TestingHelp\n- Add ssh_config to [[SSH]]\n- Add para SlackWare containing Slackware::SBoKeeper\n- Add String::CRC32C, String::Fuzzy to StringStuff\n- Add Sys::Cmd to ChildProcesses\n- Add Sys::CpuLoad to SystemInfo\n- Add Text::MustacheTemplate to TemplateStuff\n- Add Time::Progress to MeasureMetrics\n- Add para TimerWare containing POSIX::RT::Clock, POSIX::RT::TImer\n- Add para TrueTypeFonts containing Font::TTF, Font::TTF::Font, HarfBuzz::Shaper, Text::Layout\n- Add Types::MIDI to MidiControllers\n- Add Types::Standard to EnumStuff\n- Add WebService::HashiCorp::Vault to WebServices\n- Add para ZeframsStuff\n- Add Zonemaster::Backend, Zonemaster::CLI to DsnStuff\n- Fold SymbolicMaths into MathsLibraries\n- Fold WorkFlows into WebServices, add WebService::IdoitAPI, WebService::Slack::WebApi\n- Update ConfigFiles with the URL of the TOML wiki\n- Update DomainNames entry App::url\n\no V 1.24:\n- 2025-03-01\n- Add para [[2FA]] containing Auth::GoogleAuth\n- Add AI::Ollama::Client to LargeLanguageModels\n- Add para AlgorithmicStuff containing Algorithm::DLX (2 people released modules with the same name). Now Steffen has released Algorithm::X::DLX\n- Add ANSI::Palette to [[Color]]\n- Add App::CPAN::Get to [[CPAN]]\n- Add App::gimpgitbuild to ChartingAndPlotting\n- Add App::GUI::Cellgraph to [[DFA]]\n- Add Archive::BagIt, App::Greple::charcode, Data::Dump::Color, Data::Edit::Xml, Data::NestedKey,  Data::Record::Serialize::Encode::csv, Data::Unixish, Text::ANSITable, Text::ASCIITable, Term::TablePrint to DataTraversal\n- Add App::orgadb to OrgDocHandling\n- Add App::pause to GitHubAndPause\n- Add App::ReslirpTunnel to NetworkProgramming\n- Add ArrayData::Lingua::Word::ID::KBBI::ByClass::Adjective, ArrayData::Lingua::Word::ID::KBBI::ByClass::Verb, CGI::Lingua, Convert::Number::Ethiopic, Date::Ethiopic, DateTime::Calendar::Coptic, Lingua-RU-Numeral, Text::WagnerFischer::Amharic to LinguaStuff\n- Add Array::Iterator to ArrayHandling\n- Add AWS::S3, FindApp, File::Print::Many, rename to FileHandling\n- Add Config::IOD, Config::IOD::Reader, IOD to ConfigFiles\n- Add Common Vulnerabilities, Exposures, CSAF to SecurityPolicy\n- Add Data::Localize::Format::Maketext, Data::Localize::Format::Sprintf to LocaleStuff\n- Add Data::Maker, Data::Person, Data::RandomPerson, DBD::Mock::Session::GenerateFixtures, Test::Fixme, Text::GenderFromName, Test::Simpler to TestingHelp\n- Add DateTime::Format::ISO8601, DateTime::Format::Mail, DateTime::Format::W3CDTF, Time::Spec, TimeZone::TimeZoneDB to DatesAndTimes\n- Add DBIx::DBO to DatabaseAndSQL\n- Add Excel::ValueWriter::XLSX, Excel::Writer::XLSX, Spreadsheet::ParseExcel, Spreadsheet::WriteExcel to SpreadsheetStuff\n- Add para EBookHandling containing EBook::Ishmael\n- Add para ExtensibleProvisioningProtocol containing Net::EPP::Server\n- Add Genealogy::ChroniclingAmerica to GenealogyStuff\n- Add Geo::Coder::All, Geo::Coder::Bing, Geo::Coder::CA, Geo::Coder::Google::V3, Geo::Coder::GooglePlaces, Geo::Coder::List, Geo::Coder::Many, Geo::Coder::OSM, Geo::Coder::Ovi, Geo::Coder::TomTom, Geo::Inverse, HTML::GoogleMaps::V3, HTML::OSM to GeographicStuff\n- Add Getopt::EX::Config to CommandLineStuff\n- Add Glitch to ExceptionHandling\n- Add GitHub::Actions to GitStuff\n- Add Hustle::Table, Smart::Dispatch to SwitchStatements\n- Add FU, HTTP::Cookies, HTTP::Cookies::Chrome, Router::Boom, Router::Simple, Terse, URI::Router, URI::Shortener to [[HTTPHandling]]\n- Add IO::Async, MCE to ParallelProcessing\n- Add JSON::Lines, OpenAPI::Modern to JsonStuff\n- Add JavaScript::Duktape, JavaScript::V8::XS to JavaScript\n- Add libnet (and its module list), Net::LMTP2 to NetworkProgramming\n- Add para IoLayers containing PerlIO::Via::Base64, PerlIO::via::LineNumber, PerlIO::via::MD5, - Add Log::LogMethods to LoggingStuff\n- Add Mail::Exim::ACL::Geolocation to EmailStuff\n- Add Math::Basic, Math::Basic::XS, Math::Cephes, Math::GMPq, Math::GMPz, Math::MPFR, Math::Polynomial, Math::Polynomial::Solve, Math::Symbolic, Math::Symbolic::Custom::Collect, Math::Symbolic::Custom::Factor, Math::Symbolic::Custom::Equation, Math::Symbolic::Custom::Polynomial, Qhull to MathsLibraries\n- Add MooX::Keyword::Field to ClassStuff\n- Add MooX::LazierAttributes, MooX::Private::Attribute, Role::Basic to ModuleBuilding\n- Add para MusicStuff containing LyricFinder\nPerlIO::via::QuotedPrint, PerlIO::via::Rotate, PerlIO::via::StripHTML, PerlIO::via::UnComment, PerlIO::via::UnPod, PerlIO::via:xz. The latter was moved out of [[UTF8]]\n- Add Plate to TemplateStuff\n- Add para RegistrySystemTesting containing ICANN::RST\n- Add para [[RSS]] containing App::jupiter, XML::RSS\n- Add Params::Validate::Strict to DataValidation\n- Add Specio in DataTypes\n- Add Pg::Explain, SQL::Abstract::ExtraClauses, SQL::Abstract::Plugin::TableAlias to DatabaseAndSQL\n- Add Statistics::Krippendorff to StatisticsStuff\n- Add para SymbolicMaths containing Math::Symbolic, Math::Symbolic::Custom::Factor\n- Add Test::Instruction to TestingHelp\n- Add Text::ANSI::Fold, Text::ANSI::Printf, Text::Conceal, Text::VisualPrintf in TextAnalysisAndFormatting\n- Clean up para [[HTMLHandling]]\n- Clean up para RegexpStuff trying to get the TiddyWiki to display code nicely\n- Delete Data::Search from DataTraversal. It is not on MetaCPAN\n- Extend Data::Random::Person in TestingHelp\n- Extend HTML::T5 in [[HTMLHandling]]\n- Fold SmartMatch in SwitchStatements, delete para SmartMatch\n- Fold TableData into DataTraversal, delete para TableData\n- Move git commands from para GitStuff to Debian.Wiki.html, leaving git-related modules\n- Rename para VLC to VideoStuff, add SReview\n- Move WebService::Chromadb from DatabaseAndSQL to LargeLanguageModels\n\no V 1.23:\n- 2025-02-07\n- Add https://quantumiq.au to the Author block above\n- Add Advanced::Config to ConfigFiles\n- Add AnyEvent::Net::Curl::Queued to EventStuff\n- Add App::Dapper to TemplateStuff\n- Add para BusinessApps with Business::ISBN, Business::ISSN\n- Add Check::NetworkSpans to NetworkProgramming\n- Add Colouring::In::XS to Color\n- Add Convert::CEGH, Convert::Number::Coptic, Convert::Number::Digits, Convert::Number::Roman, String::Equivalence::Amharic, Text::DoubleMetaphone, Text::Metaphone, Text::Metaphone::Amharic, Text::Phonetic::Metaphone, Text::TransMetaphone to LinguaStuff\n- Add Coro, Coro::LWP, Coro::Multicore, Coro::Select to ParallelProcessing\n- Add Crypt::Credentials to CryptoStuff\n- Add Data::Random, Data::SimplePassword, Date::Range, Date::Simple, Mock::Data, Mock::Populate to TestingHelp\n- Add Data::Record::Serialize, DBD::Firebird, DBIx::Migration to DatabaseAndSQL\n- Add Geo::Coder::US::Census, Geo::StreetAddress::US to GeographicStuff\n- Add Image::Dot to ChartingAndPlotting\n- Add JSON::Schema::Modern to JsonStuff\n- Add HTTP::Request::FromCurl, LWP::Protocol::Net::Curl to [[HTTPHandling]]\n- Add para LargeLanguageModels containing Ollama, WebService::Ollama\n- Add Mozilla::CA to BrowserStuff\n- Add Net::Domain::Parts to DnsStuff\n- Add Parser::FIT to DataTraversal\n- Add Statistics::Distributions to StatisticsStuff\n- Add Text::Password::Pronounceable to UsernamePassword\n- Add Text::Unidecode to [[UTF8]]\n- Add Time::Local, Time::Precise to DatesAndTimes\n\no V 1.22:\n- 2025-01-20\n- Add Algorithm::CurveFit, App::bookmarks, App::remotediff, App::uricolor, Catmandu, Data::Match, Data::DRef, Data::Difference, Data::Peek, Data::Walker, DBIx::Array to DataTraversal\n- Add App::geoip, Geo::Spline to GeographicStuff\n- Add App::subsort, Sort::Sub to SortStuff\n- Add Array::Transpose,Math::MatrixBool, Math::MatrixReal to ArrayHandling\n- Add Bit::Vector, Set::CrossProduct to SetStuff\n- Add Config::General to ConfigFiles\n- Add Control::CLI, Control::CLI::Extreme to NetworkProgramming\n- Add CPAN::UnsupportedFinder to [[CPAN]]\n- Add para CpanFile, on how to generate a cpanfile. Add CPAN::Audit\n- Add Crypt::Komihash, Crypt::URandom, Crypt::URandom::Token, Rand::URandom, Random::Any, Sys::GetRandom to RandomStuff\n- Add Crypt::Passphrase::Yescrypt, Crypt::SysRandom, Crypt::Yescrypt to CryptoStuff\n- Add App::Sqitch, Class::Phrasebook::SQL, Data::Phrasebook, Fey, Fey::ORM, MySQL::Hi, Rose::DB::Object, SQL::Library, WebService::Chroma to DatabaseAndSQL\n- Add Data::Identifier to DataTypes\n- Add DateTime::Format::Text, DateTime::TimeZone, DateTimeX::Easy, Oxford::Calendar to DatesAndTimes\n- Add DBIx::Array::Connect, DBIx::MyPassword, DBIx::Password, DBIx::PasswordIniFile, Pass::OTP to UsernamePassword\n- Add Devel::REPL, perldb.pl, Reply, Runtime::Debugger to DebuggingStuff\n- Add para [[DFA]] with module DFA::Kleene\n- Add para EnterpriseApps with EAI::Wrap\n- Add Feersum to EventStuff\n- Add File::Information to FileHandling\n- Add Function::Parameters to ParameterTypes\n- Add Genealogy::FindaGrave in GenealogyStuff\n- Add para GrammarProcessing with module Grammar::Improver\n- Add Hash::Match to HashHandling\n- Add HTML::D3 to ChartingAndPlotting\n- Add HTTP::Parser::XS to [[HTTPHandling]]\n- Add para HTTPServers with modules Furl, Plack, PSGI, Starlet, Starman, mention nginx, picohttpparser\n- Add Graph::Kruskal to [[Graphs]]\n- Add JE to JavaScript\n- Add JSON_LD, Schema.org, Rose::HTML::Objects to [[HTMLHandling]]\n- Add Locale::TextDomain, Locale::TextDomain::OO::Extract to LocaleStuff\n- Add Log::Dispatchouli to LoggingStuff\n- Add para SecurityPolicy\n- Add Module::LicenseScanner to LicenceStuff\n- Add Pod::Perldoc::ToToc to PodHandling\n- Add Poz to DataValidation\n- Add Regexp::Compare, Regex::Range::Number to RegexpStuff. Expand some entries\n- Add String::Sprintf to StringStuff\n- Add Surveyor::App to BenchmarkingTools\n- Add Syntax::Feature::Loop, Syntax::Feature::QwComments, Syntax::Feature::Void to NewOperators\n- Add Test::File, Test::HTTPStatus, Test::Mockingbird, Test::Output to TestingHelp\n- Add Text::HTML::Turndown to MarkdownHandling\n- Add Text::Table::Read::RelationOn::Tiny to TableData\n- Add Time::OlsonTZ::Data to DatesAndTimes\n- Add Unicode::GCString to [[UTF8]]\n- Add VAPID to WebPush, add details for HTTP::Request::Webpush\n- Add para WorkFlows, module Workflow\n- Add XS::Parse::Sublike, Sublike::Extended to [[XS]]\n- Fold contents of SecretManagement into UsernamePassword\n- Rename para RegexpExamples to RegexpStuff\n- Update para builtins\n\no V 1.21:\n- 2024-12-26\n- Add a comment in InterestingModules for PerlPowerTools about the way they can clash with standard Linux tools\n- Add Algorithm::Diff, String::Diff to TextAnalysisAndFormatting\n- Add App::Cme to ConfigFiles\n- Add App::DPath, App::Greple::xp, Data::Dumper::Interp, Data::Section, Data::Section::Pluggable, Data::Section::Simple, Util::Medley::List to DataTraversal\n- Add App::sourcepan to CPAN\n- Add App::perl::distrolint to PerlDistros\n- Add App::ProcUtils to ChildProcesses\n- Add App::sdif to FileHandling\n- Add Archive::Libarchive::Compress, Archive::Libarchive::Peek to ZipFiles\n- Add CPANPLUS::Dist::Debora to [[CPAN]]\n- Add Circle::Chain, Crypt::DSA, Crypt::MatrixSSL3, Crypt::Random::Source, Math::Random::Secure to CryptoStuff\n- Add Data::Password::Common to UsernamePassword\n- Add DateTime::Locale::FromCLDR to DatesAndTimes\n- Expand DB::Object in DatabaseAndSQL\n- Add DBIx::Class::Helpers, DBIx::Lite, Mongo, PGXN::Site, Pongo to DatabaseAndSQL\n- Add Environment::Is, Result::Simple, Tapper::Cmd, Test::Dependencies, Test::Smoke, Test::utf8, Test2::Tools::ComboObject, Test2::Suite, Test2::Transition, Time::RTM to TestingHelp\n- Add Geo::Coordinates::DecimalDegrees to GeographicStuff\n- Add Getopt::EX, Getopt::Lazier to CommandLineStuff\n- Add Gimp to ChartingAndPlotting\n- Expand para GitStuff\n- Add Graph::MaxFlow to [[Graphs]]\n- Add HTML::RewriteAttributes to [[HTMLHandling]]\n- Add a note about INSTALL_BASE, PREFIX in InstallPerl\n- Add Lingua::Interset to LinguaStuff\n- Add Locale::Maketext::Utils, Locale::Unicode::Data to LocaleStuff\n- Add Markdown::Render to MakrdownHandling\n- Add Module::Generic to ModuleBuilding\n- Add Module::ScanDeps::Static to FindDependencies\n- Add Net::IP, Net::IP::XS to IpAddresses\n- Add Object::Simple to ClassStuff\n- Add para ParallelProcessing containing Parallel::WorkUnit\n- Add Parse-Gitignore to GitStuff\n- Add para ProperNames\n- Add para RandomStuff. Add Random::Simple to it, move *Random* from Crypto into it\n- Add Proc::Forkmap to ChildProcesses. Add details for Proc::Fork too\n- Add Signature::Attribute::Checked to ParameterTypes\n- Add Spreadsheet::Write, Spreadsheet::Wright to SpreadsheetStuff\n- Add String::Util to StringStuff\n- Add Switch::Back to SwitchStatements\n- Add para WebSecurity. Add HTTP::CSPHeader, HTTP::SecureHeaders to it\n- Add Zonemaster::Engine to DnsStuff\n- Expand Text::PO in [[UTF8]]\n- Merge CompressionUtils into ZipFIles. Make ArchiveFiles, CompressionUtils point to ZipFiles\n- Rearrange [[UTF8]] into alphabetical order\n- Rename para PerlDoc to PerlDocumentation, add https://niceperl.blogspot.com/\n\no V 1.20:\n- 2024-10-29\n- Fold CaptureTiny para into ExceptionHandling\n- Add Workflow::Inotify to ChildProcesses\n- Update CommandLineStuff\n- Add Pod::Spell to PodHandling\n- Add Cache::Memcached::Fast, Cache::Memcached::PDeque to CachingStuff\n- Expand CaptureTiny, ModulePlugins\n- Add Cairo, Prima, Prima::Cairo to ChartingAndPlotting\n- Add Convert::PEM in new para ASN\n- Add Crypt::RHash, Crypt::CBC, Crypt::DES, Crypt::DES_EDE3 to CryptoStuff\n- Expand DataTraversal a bit, PdfStuff re versions of PDF spec\n- Add Neo4j::Driver to DatabaseAndSQL, expand latter to describe how to generate a database schema image with GraphViz2::DBI\n- Add DateTime::Locale to LocaleStuff, cross-link that with DatesAndTimes\n- Add DBIx::Connector, DBIx::QuickORM to DatabaseAndSQL, deprecate DBIx::Class. Expand note for App::DBBrowser\n- Add File::chdir to FileHandling\n- Add Geo::Address::Formatter to GeographicStuff\n- Rename PDFStuff to PdfStuff to make it a TiddlyWord\n- Add Pod::Spell to PodHandling\n- Add Mock::Data::Regex to TestingHelp\n- Add IO::Async::Process, IPC::Run3, IPC::System::Simple to ReadPipe\n\no V 1.09:\n- 2024-10-19\n- Fold ImageHandling, ImageTags into ChartingAndPlotting\n- Rearrange latter into alphabetical order\n- Update para Color\n- Update DataTraversal. Expand. Rearrange into alphabetical order\n- Expand DataTypes, Struct::Dumb\n- Add Sort::Maker, Sort::Naturally, Sort::Versions to SortModules\n\no V 1.08:\n- 2024-10-18\n- Add Pragma para\n- Update the XML para\n- Rearrange [[HTMLHandling]] into alphabetical order\n- Add HTTP::DAV to HTTPHandling\n- Add List::MoreUtils, List::UtilsBy, XS::Parse::Infix to ArrayHandling\n- Add Data::Buffer to CachingStuff\n- Add Berkeley::DB to DatabaseAndSQL\n- Add Hash::Merge::Simple to HashHandling\n- Add Lingua::EN::Titlecase::Simple to LinguaStuff\n- Add Log::Journald to LoggingStuff\n- Add App::pod, Pod::LOL, Pod::Query, Pod::Simple to PodHandling\n- Add Devel::StatProfiler, Tiny::Prof to ProfilingCode\n- Add Subs::Trace, Test::ExpectAndCheck, Test::WWW::Simple, Test::XML::Simple to TestingHelp\n- Rearrange TestingHelp, XML into alphabetical order\n- Update TiddlyWikis, UseUse\n- Add or expand XML::Fast, XML::GDOME, XML::Hash::XS, XML::Sig , XML::Twig in XML\n- Fold TryCatch into ExceptionHandling, expand latter\n- Add Tree::RB::XS, Tree::RedBlack: to RedBlackTrees\n- Add Digest::HMAC to CryptoStuff, rearrange into alphabetical order\n\no V 1.07:\n- 2024-10-12\n- Add DBIx::BatchChunker, DBIx::OnlineDDL, gh-ost to DatabaseAndSQL\n- Add Algorithm::Graphs::Reachable::Tiny to Graphs\n- Note App::rdapper under [[RDAP]]\n- Sort DatesAndTimes into alphabetical order\n- Add a calendar FAQ, Calendar::Simple, Time::Elapsed to DatesAndTimes\n- Expand Email::Stuff\n- Update FileHandling with File::MoreUtil, File::Process. Warn that File::Temp uses global variables\n- Update LaTeX slightly\n- Update ParsingStuff with Parser::MGC\n- Update StatisticsStuff with Math::LiveStats, Statistics::Running, Statistics::Running::Tiny, Statistics::Welford\n- Update StringStuff with String::Random::Regexp::regxstring\n- Update TestingHelp with TAP::Harness, Test::TempDir::Tiny\n\no V 1.06:\n- 2024-10-02\n- Rename ParseTaxonomy to ParsingStuff\n- Add analizo, Lingua::Word::Parser, Syntax::Kamelon to ParsingStuff\n- Add PipeLines\n- Add App::PTP, Atomic::Pipe, File::Collector to PipeLines\n- Add Range::Merge to DataTypes. Sort latter into alphabetical order\n- Add App::week to DatesAndTimes\n- Add Devel::Events to EventStuff\n- Add App::pdfresize to PdfStuff\n\no V 1.05:\n- 2024-09-27\n- Add DateTime::Schedule to DatesAndTimes\n- Expand details about PDF::API2\n- Expand details about Poppler not installing under Debian bookworm\n- Add qpdf etc, App::PDFUtils in PDFStuff\n- Add exim4/sendmail to EmailStuff\n- Add IRI para\n- Add Text::ASCII::Convert to para AsciiCodes\n\no V 1.04:\n- 2024-09-11\n- Add Data::TagDB to DatabaseAndSQL\n- Add OpenGraphProtocol\n- Add UIIID to HTTPHandling\n- Rearrange HTTPHandling so module names are in alphabetical order\n- Add String::Mask, String::Mask::XS to SecretManagement\n- Rearrange SecretManagement so module names are in alphabetical order\n- Add Crypt::Fernet, Data::Mirror, WebService::Client\n- Rearrange TemplateStuff so module names are in alphabetical order\n- Add Mason, Template::EmbeddedPerl to TemplateStuff\n- Add Sys::GetRandom::PP to para CryptoStuff\n- Add para XWindowStuff, App::DesktopNotifyUtils, Desktop::Notify, Net::DBus\n\no V 1.03:\n- 2024-08-27\n- Add notes about Mermaid to MarkdownHandling\n- Rearrange, extend PDFStuff\n- Add Locale::Unicode,  Minilla, Net::DNS::SEC, Number::Iterator::XS, Forks::Super\n- Add Forks::Super, IPC::Cmd, Authen::WebAuthn\n- Add App::optex, Geo::Coder::Abbreviations, HTTP::Cache::Transparent\n- Add Number::Format, Syntax::Keyword::Assert\n- Rearrange TestingHelp so module names are in alphabetical order\n- Rearrange module names in DatabaseAndSQL\n- Add DBI::Shell, kura\n- Add App::csvtool, Regexp::Pattern::License\n- Add version as above\n- Add PPI. Rearrange TextAnalysisAndFormatting into alphabetical order\n- Add Mail::Milter::Authentication. Rearrange EmailStuff into alphabetical order\n- Add Spreadsheet::Read, which reads many formats\n- Add XDGBaseDirectorySpecification. Update MarkdownHandling, ZipFiles\n- Add Clipboard::Any, ExtUtils::Helpers\n\no V 1.02:\n- Previously there was no such para so there is no history\n- Fix typo in MainMenu re SwitchStatements being singular\n- Add List::Gen\n- Transfer contents of para IteratorStuff to DataTraversal. See next line\n- Specifically Iterator::Flex, NumSeq::Iter, Seq\n- Add heaps of stuff about DataTraversal, LoggingStuff, MarkdownHandling, PerlDoc\n- Add App::sdview, Getopt::Class, Markdown::Perl, Prima\n",
        "title": "Draft of 'VersionInfo'",
        "modified": "20250714073453013",
        "draft.title": "VersionInfo",
        "draft.of": "VersionInfo"
    },
    {
        "text": "\"\"\"\no EBook::Gutenberg:\n- Fetch ebooks from Project Gutenberg\n- https://metacpan.org/dist/EBook-Gutenberg\n\no EBook::Ishmael:\n- Convert ebook documents to plain text\n- https://metacpan.org/dist/EBook-Ishmael\n- Formats supported:\n<pre>EPUB\nFictionBook2\nHTML\nMobi\nPalmDoc\nPDF\nText\nXHTML\nzTXT</pre>\n",
        "title": "EBookHandling",
        "modified": "20250513214058766",
        "created": "20250210035411437"
    },
    {
        "text": "\"\"\"\no See also:\n- ConfigFiles\n\no Config::Neat\no https://editorconfig.org/\n- .editorconfig\n",
        "title": "EditorConfigFiles",
        "modified": "20250528012112121",
        "created": "20200330020441159"
    },
    {
        "text": "\"\"\"\no See also:\n- [[Acronyms]]\n- MailingLists\n- NetworkProgramming\n\no Email:\n- JMAP rather than IMAP: https://jmap.io/\n- EAV::XS (Address validation)\n\no Email::Mailer:\n- Multi-purpose emailer for HTML, auto-text, attachments, and templates\n- https://metacpan.org/dist/Email-Mailer\n- Modelled on Email::Simple\n- Looks good\n\no Email::Send::YYClouds:\n- Send simple mail using smtp relay server\n- https://metacpan.org/dist/Email-Send-YYClouds\n\no Email::Sender:\n- https://metacpan.org/pod/Email::Sender\n- This module has a huge list of contributors\n\no Email::Sender::Transport::SMTP:\n- Send email over SMTP\n- https://metacpan.org/pod/Email::Sender::Transport::SMTP\n- Replaces Email::Sender::Transport::SMTPS\n\no Email::Sender::Transport::SMTP::Persistent:\n- An SMTP client that stays online\n- https://metacpan.org/pod/Email::Sender::Transport::SMTP::Persistent\n- The stock Email::Sender::Transport::SMTP reconnects each time it sends a message. This transport only reconnects when the existing connection fails\n\no Email::Simple:\n- Simple parsing of RFC2822 message format and headers\n- https://metacpan.org/pod/Email::Simple\n\no Encode::IMAPUTF7:\n- Modification of UTF-7 encoding for IMAP\n- https://metacpan.org/dist/Encode-IMAPUTF7\n\no Exim:\n- Supercedes sendmail, under Linux at least\n- https://www.exim.org/\n\no Mail::AuthenticationResults:\n- Object Oriented Authentication-Results Headers\n- https://metacpan.org/dist/Mail-AuthenticationResults\n\no Mail::Box:\n- Manage a mailbox, a folder with messages\n- https://metacpan.org/dist/Mail-Box\n\no Mail::Exim::ACL::Geolocation:\n- Map IP addresses to location information\n- https://metacpan.org/dist/Mail-Exim-ACL-Geolocation\n\no Mail::Box::IMAP4:\n- Handle IMAP4 folders as client\n- https://metacpan.org/dist/Mail-Box-IMAP4\n\no Mail::Box::POP3:\n- Handle POP3 folders as client\n- https://metacpan.org/dist/Mail-Box-POP3\n\no Mail::DMARC:\n- Perl implementation of DMARC\n- https://metacpan.org/dist/Mail-DMARC\n\no Mail::DWIM:\n- Do-What-I-Mean Mailer\n- https://metacpan.org/dist/Mail-DWIM\n\no Mail::IMAPClient\n\no Mail::Message:\n- General message object\n- https://metacpan.org/dist/Mail-Message\n\no Mail::Milter::Authentication:\n- A Perl Mail Authentication Milter\n- https://metacpan.org/dist/Mail-Milter-Authentication\n\no Mail::POP3Client\n- Perl 5 module to talk to a POP3 (RFC1939) server\n- https://metacpan.org/dist/Mail-POP3Client\n\no Mail::SPF:\n- An object-oriented implementation of Sender Policy Framework\n- https://metacpan.org/dist/Mail-SPF\n\no Mail::SpamAssassin::Plugin::DBSCORE:\n- Spamassassin scores from database\n -https://metacpan.org/dist/Mail-SpamAssassin-Plugin-DBSCORE\n\no MailboxValidator::SingleValidation:\n- https://metacpan.org/pod/MailboxValidator::SingleValidation\n\no MIME::Mini:\n- Minimal code to parse/create mbox files and mail messages\n- https://metacpan.org/dist/MIME-Mini\n\no MIME::Types:\n- Definition of MIME types\n- \"MIME Type\" is the old name for \"Media Type\"\n- https://metacpan.org/dist/MIME-Types\n\no Net::validMX:\n- Use DNS and/or regular expressions to verify if an email address could be valid\n- https://metacpan.org/pod/Net::validMX\n\no Sisimai:\n- Analyze bounce mails\n- https://metacpan.org/dist/Sisimai\n",
        "title": "EmailStuff",
        "modified": "20250714035855197",
        "created": "20200917062056119"
    },
    {
        "text": "\"\"\"\no See also:\n- ParallelProcessing\n\no EAI::Wrap:\n- Framework for easy creation of Enterprise Application Integration tasks\n- https://metacpan.org/pod/EAI::Wrap\n- Functionality: DB, DateUtil, FTP and File\n\no NBI::Slurm:\n- NBI Slurm module\n- SLURM stands for Simple Linux Utility for Resource Management\n- Debian via apt has available 7 basic components of SLURM\n- https://metacpan.org/dist/NBI-Slurm\n",
        "title": "EnterpriseApps",
        "modified": "20250528012153541",
        "created": "20250112234112039"
    },
    {
        "text": "\"\"\"\no Class::Enum\n- https://metacpan.\n\no Const::Exporter\n\no Data::Enum\n\no Object::Enum\n\no MooseX::Enumeration\n\no MooX::Enumeration\n\no Type::Tiny::Enum\n\no Sample code using Types::Standard and Enum:\n- /home/ron/perl.modules/Local-Levy/lib/Local/Levy/Util/HTML.pm\n",
        "title": "EnumStuff",
        "modified": "20250323224053205",
        "created": "20230612012815961"
    },
    {
        "text": "\"\"\"\no See also:\n- ParallelProcessing\n- [[XS]]\n\no AnyEvent:\n- The DBI of event loop programming\n- https://metacpan.org/pod/AnyEvent\n\no AnyEvent::Net::Curl::Queued:\n- Moo wrapper for queued downloads via Net::Curl & AnyEvent\n- Aka YAYA \"Yet Another Download Accelerator\"\n- https://metacpan.org/pod/AnyEvent::Net::Curl::Queued\n\no Devel::Events:\n- Extensible instrumentation framework\n- https://metacpan.org/dist/Devel-Events\n\no EV:\n- Perl interface to libev, a high performance full-featured event loop\n- https://metacpan.org/pod/EV\n\no Event::RPC:\n- Event based transparent Client/Server RPC framework\n- https://metacpan.org/dist/Event-RPC\n\no Feersum:\n- A PSGI engine for Perl based on EV/libev\n- https://metacpan.org/dist/Feersum\n\no Future:\n- Represent an operation awaiting completion\n- https://metacpan.org/dist/Future\n\no Future::Selector:\n- Manage a collection of pending futures\n- https://metacpan.org/dist/Future-Selector\n\no Future::XS:\n- Experimental XS implementation of Future\n- https://metacpan.org/dist/Future-XS\n\no libev:\n- http://software.schmorp.de/pkg/libev.html\n- http://pod.tst.eu/http://cvs.schmorp.de/libev/ev.pod\n\no Promises:\n- An implementation of Promises in Perl\n- https://metacpan.org/dist/Promises\n",
        "title": "EventStuff",
        "modified": "20250713013828765",
        "created": "20231009225516915"
    },
    {
        "text": "\"\"\"\no See also:\n- ParallelProcessing\n- TestingHelp\n- WantArray\n\no https://gist.github.com/Ovid/5205534f7dcc52e4d931aaff301b39aa:\n- An article by Ovid\n\no Capture::Tiny:\n- Capture STDOUT and STDERR from Perl, XS or external programs\n- In core, so 1st choice\n- https://metacpan.org/pod/Capture::Tiny\n- This module has a huge See Also list\n\no Exceptions:\n- https://phoenixtrap.com/2021/12/07/sweeter-perl-exception-classes/\n- Throwable::SugarFactory\n- Throwable. It's a Moo role!\n- Exception::Class. See Throwable!\n- X::Tiny\n\no  Exception::Sink:\n- General purpose compact exception handling\n- https://metacpan.org/dist/Exception-Sink\n\no Glitch:\n- Exception Handling\n- https://metacpan.org/pod/Glitch\n\no Hook::Output::File:\n- Redirect STDOUT/STDERR to a file\n- https://metacpan.org/pod/Hook::Output::File\n\no Hook::Output::Tiny:\n- Easily enable/disable trapping of STDOUT/STDERR\n- https://metacpan.org/dist/Hook-Output-Tiny\n\no Nice::Try:\n- Very comprehensive\n- Works well with Want. See WantArray\n\no Syntax::Keyword::Try\n- Cannot do some things Nice::Try can do\n\no TryCatch:\n- First class try catch semantics for Perl, without source filters.\n- https://metacpan.org/pod/TryCatch\n\no Try::Catch:\n- Try Catch exception handler based on Try::Tiny but faster\n- https://metacpan.org/pod/Try::Catch\n\no Try::Tiny:\n- Minimal try/catch with proper preservation of $@\n\no Try::Tiny::Tiny:\n- Slim Try::Tiny down as far as reasonably possible\n\no Unexpected:\n- Localised exception classes composed from roles\n- https://metacpan.org/pod/Unexpected\n",
        "title": "ExceptionHandling",
        "modified": "20250524233935178",
        "created": "20220308004358235"
    },
    {
        "text": "\"\"\"\no See also:\n- SwitchStatements\n\no CXC::Exporter::Util:\n- Tagged Based Exporting\n- https://metacpan.org/pod/CXC::Exporter::Util\n\no Exporter:\n- Implements default import method for modules\n- https://metacpan.org/pod/Exporter\n\no Export::XS:\n- Replacement for Exporter.pm + const.pm in XS, with C++ API\n- https://metacpan.org/dist/Export-XS\n\no Exporter::Almighty:\n- Combining Exporter::Tiny with some other stuff for added power- https://dev.to/tobyink/introducing-exporteralmighty-mc5\n\no Exporter::Tiny:\n- An exporter with the features of Sub::Exporter but only core dependencies\n- https://metacpan.org/pod/Exporter::Tiny\n- Includes Exporter::Shiny\n\no Sub::Exporter:\n- A sophisticated exporter for custom-built routines\n- https://metacpan.org/pod/Sub::Exporter\n",
        "title": "ExportHandling",
        "modified": "20250604002551278",
        "created": "20230328062016527"
    },
    {
        "text": "\"\"\"\no App::pepper:\n- A command-line EPP client\n- https://metacpan.org/dist/App-pepper\n- Uses Net::EPP\n- Support for EPP servers which implement RFC 9154 (Secure Authorization Information for Transfer)\n- See also https://www.rfc-editor.org/info/rfc9154\n- Support for EPP servers which use the host attribute model (see RFC 5731, Section 1.1)\n- See also https://www.rfc-editor.org/info/rfc5731\n\no Net::EPP:\n- A Perl library for the Extensible Provisioning Protocol (EPP).\n- https://metacpan.org/dist/Net-EPP\n\no Net::EPP::Server:\n- Provides a high-level framework for developing Extensible Provisioning Protocol (EPP) servers\n- https://metacpan.org/pod/Net::EPP::Server\n- See also https://www.rfc-editor.org/info/std69\n",
        "title": "ExtensibleProvisioningProtocol",
        "modified": "20250604031746787",
        "created": "20250219140246218"
    },
    {
        "text": "\"\"\"\no See also:\n- CoreList for File::Find\n- DataTraversal\n- SortModules\n\no App::CdUtils:\n- CLI utilities related to changing directories\n- https://metacpan.org/dist/App-CdUtils\n\no App::sdif:\n- Contains utility programs cdif, sdif and watchdiff to post-process output of diff\n- https://metacpan.org/dist/App-sdif\n\no AWS::Lambda:\n- Perl support for AWS Lambda Custom Runtime\n- https://metacpan.org/dist/AWS-Lambda\n\no AWS::S3:\n- Lightweight interface to Amazon S3 (Simple Storage Service)\n- https://metacpan.org/dist/AWS-S3\n\no AWS::XRay:\n- AWS X-Ray tracing library\n- https://metacpan.org/pod/AWS::XRay\n\no CSV:\n- See DataTraversal\n\no FFI::C::Stat:\n- Object-oriented FFI interface to native stat and lstat\n- https://metacpan.org/dist/FFI-C-Stat\n\no File::chdir:\n- A more sensible way to change directories\n- File::chdir gives you $CWD and @CWD, which are not global\n- https://metacpan.org/pod/File::chdir\n\no File::Copy::clonefile:\n- Call clonefile system call\n- https://metacpan.org/dist/File-Copy-clonefile\n- MacOS only\n\no File::Copy::NoClobber:\n- Rename copied files safely if destination exists\n- https://metacpan.org/pod/File::Copy::NoClobber\n- See also File::Util::Rename below\n\no File diffs:\n- App::UniqFiles\n- Refers to contents not file names\n\no File::DirList:\n- https://metacpan.org/pod/File::DirList\n\no File::Fetch:\n- A generic file fetching mechanism\n- https://metacpan.org/dist/File-Fetch\n\no File::Find::Closures:\n- Functions you can use with File::Find\n- https://metacpan.org/dist/File-Find-Closures\n\no File::Find::Rule:\n- Alternative interface to File::Find\n- https://metacpan.org/dist/File-Find-Rule\n\no File::FindUniq:\n- Find unique or duplicate file {contents,names}\n- https://metacpan.org/dist/File-FindUniq\n\no File::FStore:\n- Module for interacting with file stores\n- https://metacpan.org/pod/File::FStore\n\no File::FStore::Base:\n- Module for interacting with file stores\n- https://metacpan.org/pod/File::FStore::Base\n\no File::FStore::File:\n- Module for interacting with file stores\n- https://metacpan.org/pod/File::FStore::File\n\no File::HomeDir:\n- Find your home and other directories on any platform\n- https://metacpan.org/pod/File::HomeDir\n\no File::Information:\n- Generic module for extracting information from filesystems\n- https://metacpan.org/dist/File-Information\n\no File::Information::Base:\n- Generic module for extracting information from filesystems\n- https://metacpan.org/pod/File::Information::Base\n\no File::Information::Filesystem:\n- Generic module for extracting information from filesystems\n- https://metacpan.org/pod/File::Information::Filesystem\n\no File::Information::Inode:\n- Generic module for extracting information from filesystems\n- https://metacpan.org/pod/File::Information::Inode\n\no File::Lockfile::Emacs:\n- Create/check/delete Emacs-style lockfiles\n- https://metacpan.org/dist/File-Lockfile-Emacs\n\no File::MoreUtil:\n- https://metacpan.org/dist/File-MoreUtil\n- File-related utilities, about 27 of them actually\n\no File::Open::NoCache::ReadOnly:\n- Open a file and flush from memory on closing\n- https://metacpan.org/dist/File-Open-NoCache-ReadOnly\n\no File::Print::Many:\n- Print to more than one file descriptor at once\n- https://metacpan.org/pod/File::Print::Many\n\no File::Process:\n- https://metacpan.org/dist/File-Process\n- Process text files with customer handlers\n\no File::ShareDir:\n- Locate per-dist and per-module shared files\n- https://metacpan.org/pod/File::ShareDir\n- But see the next module\n\no File::ShareDir::Tiny:\n- Locate per-dist and per-module shared files\n- https://metacpan.org/pod/File::ShareDir::Tiny\n- For the installation half of the solution, there are several options available that depend on your installation tool. For ExtUtils::MakeMaker there is File::ShareDir::Install. Other tools like Module::Build, Module::Build::Tiny and Dist::Build have built in support for sharedirs\n\no File::Slurper:\n- A simple, sane and efficient module to slurp a file\n- https://metacpan.org/dist/File-Slurper\n- And File::Slurp is obsolete\n\no File::Slurper::Temp:\n- https://metacpan.org/dist/File-Slurper-Temp\n- File::Slurper + File::Temp\n- And be warned, File::Temp uses global variables. See TestingHelp\n\no File::Sticker:\n- Read, Write file meta-data\n-https://metacpan.org/pod/File::Sticker\n- Ships with sticker which sticks tags onto files, populates a database with file meta-data\n\no File::Store:\n- Module for interacting with file stores\n- https://metacpan.org/dist/File-FStore\n\no File::Stubb:\n- Stub file creator\n- https://metacpan.org/dist/File-Stubb\n\no File::URIList:\n- Module for reading and writing RFC 2483 URI lists\n- https://metacpan.org/pod/File::URIList\n- https://datatracker.ietf.org/doc/html/rfc2483\n\no File::Util::Copy:\n- Utilities related to copying files\n- https://metacpan.org/pod/File::Util::Copy\n\no File::Util::Rename:\n- Utilities related to renaming files\n- https://metacpan.org/dist/File-Util-Rename\n- See also File::Copy::NoClobber above\n\no File uploading:\n- jQuery::File::Upload\n\no Filename::Type::Archive:\n- Check whether filename indicates being an archive file\n- https://metacpan.org/dist/Filename-Type-Archive\n\no Filename::Type::Audio:\n- Check whether filename indicates being an audio file\n- https://metacpan.org/dist/Filename-Type-Audio\n\no Filename::Type::Backup:\n- Check whether filename indicates being a backup file\n- https://metacpan.org/dist/Filename-Type-Backup\n\no Filename::Type::Compressed:\n- Check whether filename indicates being compressed\n- https://metacpan.org/dist/Filename-Type-Compressed\n\no Filename::Type::Ebook:\n- Check whether filename indicates being an e-book\n- https://metacpan.org/pod/Filename::Type::Ebook\n\no Filename::Type::Executable:\n- Check whether filename indicates being an executable program/script\n- https://metacpan.org/dist/Filename-Type-Executable\n\no Filename::Type::Image:\n- Check whether filename indicates being an image\n- https://metacpan.org/pod/Filename::Type::Image\n\no Filename::Type::Perl::Release:\n- Check whether filename looks like a perl module release archive, e.g. a CPAN release tarball\n- https://metacpan.org/dist/Filename-Type-Perl-Release\n\no FindApp:\n- Find your application home and config your process for it\n- https://metacpan.org/pod/FindApp\n- Consider this module if you have ever used:\n- use FindBin; use lib \"$FindBin::Bin/../lib\";\n\no Linux::FD:\n- Linux specific special filehandles\n- https://metacpan.org/dist/Linux-FD\n\no Module::Filename:\n- Provides an object oriented, cross platform interface for getting a module's filename\n- https://metacpan.org/pod/Module::Filename\n\no Redirection (sends errors to /dev/null):\n- local(*STDERR);\n- open STDERR, '>>', File::Spec->devnull();\n\no rename:\n- Renames multiple files using perl expressions\n- https://metacpan.org/pod/rename\n\no Storage::Abstract:\n- Abstraction for file storage\n- https://metacpan.org/dist/Storage-Abstract\n",
        "title": "FileHandling",
        "modified": "20250713021747218",
        "created": "20220512065825359"
    },
    {
        "text": "\"\"\"\no Finance::Quote:\n- Get stock and mutual fund quotes from various exchanges\n- https://metacpan.org/dist/Finance-Quote\n",
        "title": "FinancialStuff",
        "modified": "20250427015951817",
        "created": "20250427015927809"
    },
    {
        "text": "\"\"\"\no App::findeps\n\no App::scanrdeps\n\no Module::ScanDeps\n\no Module::ScanDeps::Static:\n- A cleanup of rpmbuild's perl.req\n- https://metacpan.org/pod/Module::ScanDeps::Static\n",
        "title": "FindDependencies",
        "modified": "20241121233155293",
        "created": "20200930062606643"
    },
    {
        "text": "\"\"\"\no Games::Mahjongg::Solver::deBondt::FFI:\n- Perl/FFI bindings to Mahjongg Solitaire Solver (after peeking) by Michiel de Bondt\n- https://metacpan.org/dist/Games-Mahjongg-Solver-deBondt-FFI\n\no Games::Solitaire::BlackHole::Solver:\n- A solver for Black Hole Solitaire\n- https://metacpan.org/dist/Games-Solitaire-BlackHole-Solver\n\no Poker::Eval:\n- Deal, score, and calculate expected win rates of poker hands\n- https://metacpan.org/dist/Poker-Eval\n",
        "title": "Games",
        "modified": "20250707234418655",
        "created": "20250605051837169"
    },
    {
        "text": "\"\"\"\no  DateTime::Format::Genealogy:\n- Create a DateTime object from a Genealogy Date\n- Given a date, runs it through Genealogy::Gedcom::Date to create a DateTime object\n- https://metacpan.org/dist/DateTime-Format-Genealogy\n\no Genealogy::ChroniclingAmerica:\n- Find URLs for a given person on the Library of Congress Newspaper Records\n- https://metacpan.org/dist/Genealogy-ChroniclingAmerica\n\no Genealogy::FindaGrave:\n- Find URLs on FindaGrave for a person\n- https://metacpan.org/dist/Genealogy-FindaGrave\n\no Genealogy::Gedcom::Date:\n- Parse GEDCOM dates in French r/German/Gregorian/Hebrew/Julian\n- https://metacpan.org/pod/Genealogy::Gedcom::Date\n\no Genealogy::Obituary::Lookup:\n- Lookup an obituary\n- https://github.com/nigelhorne/Genealogy-Obituary-Lookup\n\no Genealogy::Obituary::Parse:\n- Extract structured family relationships from obituary text\n- https://metacpan.org/dist/Genealogy-Obituary-Parse\n\no Genealogy::Relationship:\n- Calculate the relationship between two people\n- https://metacpan.org/dist/Genealogy-Relationship\n\no Genealogy::Wills:\n- Lookup in a database of wills\n- https://metacpan.org/pod/Genealogy::Wills\n",
        "title": "GenealogyStuff",
        "modified": "20250713070125567",
        "created": "20240622030833531"
    },
    {
        "text": "\"\"\"\no See also:\n- [[RDAP]]\n\no Alien::gdal:\n- Compile GDAL, the Geographic Data Abstraction Library\n- https://metacpan.org/dist/Alien-gdal\n\no App::geoip:\n- A tool to show geographical data based on hostname or IP address(es)\n- https://metacpan.org/dist/App-geoip\n\no Data::OFN::Address:\n- Immutable data object for OFN (Otevřené formální normy) representation of address in the Czech Republic\n- https://metacpan.org/dist/Data-OFN-Address\n\no Data::OFN::Common:\n- OFN common data objects\n- https://metacpan.org/dist/Data-OFN-Common\n\no Geographic IP stuff and network data:\n- IO::IPFinder - ipfinder.io\n- IP::Info\n\no Geo::Address::Formatter:\n- Take structured address data and format it according to the various global/country rules\n- https://metacpan.org/dist/Geo-Address-Formatter\n\no Geo::AnomalyDetector:\n- Detect anomalies in geospatial coordinate datasets\n- https://metacpan.org/dist/Geo-AnomalyDetector\n\no Geo::CheapRuler:\n- A collection of very fast approximations to common geodesic measurements\n- https://metacpan.org/pod/Geo::CheapRuler\n\no Geo::Coder::Abbreviations:\n- Quick and Dirty Interface to https://github.com/mapbox/geocoder-abbreviations\n- https://metacpan.org/dist/Geo-Coder-Abbreviations\n\no Geo::Coder::All:\n- This is wrapper for other geocoder cpan modules\n- https://metacpan.org/pod/Geo::Coder::All\n\no Geo::Coder::Bing:\n- Geocode addresses with the Bing Maps API\n- https://metacpan.org/pod/Geo::Coder::Bing\n\no Geo::Coder::CA:\n- Provides a Geo-Coding functionality using https://geocoder.ca for both Canada and the US\n- https://metacpan.org/dist/Geo-Coder-CA\n\no Geo::Coder::Free:\n- Provides a Geo-Coding functionality using free databases\n- https://metacpan.org/dist/Geo-Coder-Free\n\no Geo::Coder::GeoApify:\n- Provides a Geo-Coding functionality using https://www.geoapify.com/maps-api/\n- https://metacpan.org/dist/Geo-Coder-GeoApify\n\no Geo::Coder::GeocodeFarm:\n- Geocode addresses with the GeocodeFarm API\n- https://metacpan.org/dist/Geo-Coder-GeocodeFarm\n\no Geo::Coder::Google::V3:\n- Google Maps Geocoding API V3\n- https://metacpan.org/pod/Geo::Coder::Google::V3\n\no Geo::Coder::GooglePlaces::V3:\n- Google Places Geocoding API V3\n- https://metacpan.org/pod/Geo::Coder::GooglePlaces::V3\n\no Geo::Coder::List:\n- Call many Geo-Coders\n- https://metacpan.org/pod/Geo::Coder::List\n\no Geo::Coder::Many:\n- Module to tie together multiple Geo::Coder::* modules\n- https://metacpan.org/pod/Geo::Coder::Many\n\no Geo::Coder::OSM:\n- Geocode addresses with the OpenStreetMap Nominatim API\n- https://metacpan.org/pod/Geo::Coder::OSM\n\no Geo::Coder::Ovi:\n- Geocode addresses with the Ovi Maps API\n- https://metacpan.org/pod/Geo::Coder::Ovi\n\no Geo::Coder::Mapbox:\n- Provides a Geo-Coding functionality using https://mapbox.com\n- https://metacpan.org/dist/Geo-Coder-Mapbox\n- https://docs.mapbox.com/api/search/geocoding/\n- Based on Geo::Coder::GooglePlaces::V3 - Google Places Geocoding API V3\n- https://metacpan.org/pod/Geo::Coder::GooglePlaces::V3\n\no Geo::Coder::TomTom:\n- Geocode addresses with the TomTom Map Toolkit API\n- https://metacpan.org/pod/Geo::Coder::TomTom\n\no Geo::Coder::US::Census:\n- Provides a Geo-Coding functionality for the US using https://geocoding.geo.census.gov\n- https://metacpan.org/dist/Geo-Coder-US-Census\n\no Geo::Coder::XYZ:\n- Provides a Geo-Coding functionality using https://geocode.xyz\n- https://metacpan.org/dist/Geo-Coder-XYZ\n\no Geo::Coordinates::DecimalDegrees:\n- Convert between degrees/minutes/seconds and decimal degrees\n- https://metacpan.org/dist/Geo-Coordinates-DecimalDegrees\n\no Geo::GDAL::FFI:\n- A foreign function interface to GDAL\n- https://metacpan.org/pod/Geo::GDAL::FFI\n- See also https://gdal.org/en/stable/\n\no Geo::GeoNames:\n- Provides a perl interface to the webservices found at http://api.geonames.org\n\no Geo::Inverse:\n- Calculate geographic distance from a latitude and longitude pair\n- https://metacpan.org/dist/Geo-Inverse\n\no Geo::IPinfo:\n- The official Perl library for IPinfo\n- https://metacpan.org/pod/Geo::IPinfo\n\no Geo::Location::IP:\n- Map IP addresses to location information\n- https://metacpan.org/dist/Geo-Location-IP\n\no Geo::Location::Point:\n- Location information\n- https://metacpan.org/dist/Geo-Location-Point\n\no Geo::Spline:\n- Calculate geographic locations between GPS fixes\n- https://metacpan.org/dist/Geo-Spline\n\no Geography::States::Borders:\n- Return the borders of states and provinces\n- https://metacpan.org/dist/Geography-States-Borders\n\no Geo::StreetAddress::US:\n- Perl extension for parsing US street addresses\n- https://metacpan.org/pod/Geo::StreetAddress::US\n\no Geo::WebService::OpenCellID:\n- Perl API for the opencellid.org database\n- https://metacpan.org/dist/Geo-WebService-OpenCellID\n\no HTML::GoogleMaps::V3:\n- A simple wrapper around the Google Maps API\n- https://metacpan.org/pod/HTML::GoogleMaps::V3\n- See also Geo::Coder::GooglePlaces - Google Maps Geocoding API\n\no HTML::OSM:\n- A module to generate an interactive OpenStreetMap with customizable coordinates and zoom level\n- https://metacpan.org/dist/HTML-OSM\n\no IP::Geolocation::MMDB:\n- Read MaxMind DB files\n- https://metacpan.org/pod/IP::Geolocation::MMDB\n\no Starlink::AST:\n- Interface to the Starlink AST library\n- The Starlink AST library provides facilities for transforming coordinates from one system to another in an object oriented manner\n- https://metacpan.org/pod/Starlink::AST\n- See also http://starlink.eao.hawaii.edu/starlink/AST\n",
        "title": "GeographicStuff",
        "modified": "20250714040240760",
        "created": "20220610005424971"
    },
    {
        "text": "\\define lingo-base() $:/language/ControlPanel/Basics/\nWelcome to ~TiddlyWiki and the ~TiddlyWiki community\n\nBefore you start storing important information in ~TiddlyWiki it is vital to make sure that you can reliably save changes. See https://tiddlywiki.com/#GettingStarted for details\n\n!! Set up this ~TiddlyWiki\n\n<div class=\"tc-control-panel\">\n\n|<$link to=\"$:/SiteTitle\"><<lingo Title/Prompt>></$link> |<$edit-text tiddler=\"$:/SiteTitle\" default=\"\" tag=\"input\"/> |\n|<$link to=\"$:/SiteSubtitle\"><<lingo Subtitle/Prompt>></$link> |<$edit-text tiddler=\"$:/SiteSubtitle\" default=\"\" tag=\"input\"/> |\n|<$link to=\"$:/DefaultTiddlers\"><<lingo DefaultTiddlers/Prompt>></$link> |<<lingo DefaultTiddlers/TopHint>><br> <$edit tag=\"textarea\" tiddler=\"$:/DefaultTiddlers\"/><br>//<<lingo DefaultTiddlers/BottomHint>>// |\n</div>\n\nSee the [[control panel|$:/ControlPanel]] for more options.\n",
        "title": "GettingStarted",
        "modified": "20190630232731264",
        "created": "20190630232731264"
    },
    {
        "text": "\"\"\"\no App::DownloadsDirUtils:\n- Utilities related to downloads directories\n- https://metacpan.org/dist/App-DownloadsDirUtils\n\no App::pause:\n- A CLI for PAUSE\n- https://metacpan.org/dist/App-pause\n\no App::PAUSE::Comaint:\n- Make someone co-maint of your module on PAUSE/CPAN\n- https://metacpan.org/dist/App-PAUSE-Comaint\n\no Config::Identity:\n- Load (and optionally decrypt via GnuPG) user/pass identity information\n- Uses GnuPG as gpg\n- Use with gpg-agent\n- For GitHub API access, an identity is a login/token pair\n- For PAUSE access, an identity is a user/password pair\n\no GitHub::Crud\n- Create, Read, Update, Delete files, commits, issues, and web hooks on GitHub\n- https://metacpan.org/pod/GitHub::Crud\n\no Github interface:\n- Alien::Build::Plugin::Download::GitHub\n",
        "title": "GitHubAndPause",
        "modified": "20250713025414068",
        "created": "20231020000720295"
    },
    {
        "text": "\"\"\"\no See also:\n- https://www.addictivetips.com/ubuntu-linux-tips/best-github-clients-for-linux/\n\no App::Git::Perl:\n- Adds custom git command \"git perl\" to make it easier to monitor latest changes in perl modules, and make you collaborate faster\n- https://metacpan.org/dist/App-Git-Perl\n\no App::GitUtils:\n- Day-to-day command-line utilities for git\n- https://metacpan.org/dist/App-GitUtils\n\no Git::Hooks:\n- Framework for implementing Git (and Gerrit) hooks\n- https://metacpan.org/dist/Git-Hooks\n\no GitHub::Crud:\n- Create, Read, Update, Delete files, commits, issues, and web hooks on GitHub\n- https://metacpan.org/dist/GitHub-Crud\n\no GitHub::Actions:\n- Work in GitHub Actions using native Perl\n- https://metacpan.org/dist/GitHub-Actions\n\no git::workflow:\n- Explains our company's git-workflow code\n- https://github.com/Ovid/git-workflow\n- https://ovid.github.io/articles/easy-git-workflow.html\n\no Parse::Gitignore:\n- Parse .gitignore files\n- https://metacpan.org/dist/Parse-Gitignore\n\no PitHub:\n- A Perl interface to github\n- https://metacpan.org/pod/Pithub\n- Sample usage: https://perladvent.org/2022/2022-12-03.html\n",
        "title": "GitStuff",
        "modified": "20250713070639267",
        "created": "20200728061121922"
    },
    {
        "text": "\"\"\"\no Google::Ads::GoogleAds::Client:\n- This is the main interface to the Google Ads API\n- https://metacpan.org/dist/Google-Ads-GoogleAds-Client\n",
        "title": "GoogleAds",
        "modified": "20250604232911349",
        "created": "20250604232626832"
    },
    {
        "text": "\"\"\"\no Net::Google::Drive::Simple:\n- Includes instructions on how to get a Client ID and token\n- https://metacpan.org/dist/Net-Google-Drive-Simple\n",
        "title": "GoogleDrive",
        "modified": "20250713030518217",
        "created": "20191227034602392"
    },
    {
        "text": "\"\"\"\no Grammar::Improver:\n- A Perl module for improving grammar using LanguageTool API\n- https://metacpan.org/pod/Grammar::Improver\n",
        "title": "GrammarProcessing",
        "modified": "20250108063033106",
        "created": "20250108063004491"
    },
    {
        "text": "\"\"\"\no See also:\n- ChartingAndPlotting\n- https://gephi.org\n\no Algorithm::Graphs::Reachable::Tiny:\n- Compute reachable nodes in a graph\n- https://metacpan.org/pod/Algorithm::Graphs::Reachable::Tiny\n\no Data::Hopen:\n- A dataflow library with first-class edges\n- https://metacpan.org/dist/Data-Hopen\n- It is the underlying engine of the App::hopen cross-platform software build generator, but can be used for any dataflow task that can be represented as a directed acyclic graph (DAG)\n\no  Graph:\n- Graph data structures and algorithms\n- https://metacpan.org/dist/Graph\n\no Graph::Grammar:\n- A Perl implementation of a graph rewriting method (a.k.a. graph grammar)\n- Every rule is evaluated for each vertex in a graph and, if a match is found, an action associated with the rule is executed\n\no Graph::Kruskal:\n- Kruskal's Algorithm for Minimal Spanning Trees in Graphs\n- https://metacpan.org/dist/Graph-Kruskal\n\no Graph::MaxFlow:\n- Compute maximum flow between 2 vertices in a graph\n- https://metacpan.org/pod/Graph::MaxFlow\n\no Graph::MoreUtils:\n- Utilities for graphs\n- https://metacpan.org/pod/Graph::MoreUtils\n\no Graph::Nauty:\n- Perl bindings for Nauty\n- https://metacpan.org/dist/Graph-Nauty\n- https://pallini.di.uniroma1.it/\n\no GraphViz2:\n- A wrapper for AT&T's Graphviz\n- https://metacpan.org/dist/GraphViz2\n- https://github.com/graphviz-perl\n\no libplot:\n- Part of GNU plotutils\n- https://metacpan.org/pod/Graphics::Libplot\n- Docs: https://www.gnu.org/software/plotutils/\n- sudo apt-get install plotutils\n- Perl interface Graphics::Libplot - Perl extension for libplot plotting library\n\no SVG:\n- Perl extension for generating Scalable Vector Graphics (SVG) documents\n- https://metacpan.org/dist/SVG\n\no Svg::Simple:\n- Write Scalar Vector Graphics using Perl syntax\n- https://metacpan.org/dist/Svg-Simple\n\no SVG::TT::Graph:\n- Base module for generating SVG graphics\n- https://metacpan.org/dist/SVG-TT-Graph\n",
        "title": "Graphs",
        "modified": "20250713032615032",
        "created": "20200417085244309"
    },
    {
        "text": "\"\"\"\no See also:\n- [[IoT]]\n\no Device::AVR::UPDI:\n- Interact with an AVR microcontroller over UPDI\n- https://metacpan.org/dist/Device-AVR-UPDI\n\no Net::Async::ArtNet:\n- Use Art-Net with IO::Async\n- https://metacpan.org/pod/Net::Async::ArtNet\n- https://en.wikipedia.org/wiki/Art-Net\n\no OPCUA::Open62541:\n- Perl XS wrapper for open62541 OPC UA library\n- https://metacpan.org/dist/OPCUA-Open62541\n",
        "title": "HardwareStuff",
        "modified": "20250713071534469",
        "created": "20250418003937522"
    },
    {
        "text": "\"\"\"\no See also:\n- DataTraversal\n- [[HTTPHandling]]\n- Util::H2O::More\n\no CGI::Expand:\n- Convert flat hash to nested data using TT2's dot convention\n- https://metacpan.org/pod/CGI::Expand\n- Module's See Also is useful\n\no Hash::Flatten:\n- Flatten/unflatten complex data hashes\n- https://metacpan.org/pod/Hash::Flatten\n\no Hash::Match:\n- Match contents of a hash against rules\n- https://metacpan.org/dist/Hash-Match\n\no Hash::Merge::Simple:\n- Recursively merge two or more hashes, simply\n- https://metacpan.org/pod/Hash::Merge::Simple\n\no Hash::Util::Exists::Tiny:\n- Some hash helper functions related to perl's \"exists\" function.\n- https://metacpan.org/dist/Hash-Util-Exists-Tiny\n\no Hash::Wrap:\n- https://metacpan.org/pod/Hash::Wrap\n- https://metacpan.org/pod/Hash::Wrap#SEE-ALSO has a great list of alternatives\n\no HTTP::Rollup:\n- Translate an HTTP query string to a hierarchical structure\n- https://metacpan.org/pod/HTTP::Rollup\n\no Tie::Hash::MultiValue:\n- Store multiple values per key\n- https://metacpan.org/pod/Tie::Hash::MultiValue\n\no Util::H2O:\n- Convert a hash into an object with methods\n- https://metacpan.org/pod/Util::H2O\n- https://perladvent.org/2022/2022-12-06.html\n- https://perladvent.org/2022/2022-12-06.html\n- https://perladvent.org/2023/2023-12-22.html (reads config files, generates accessors)\n",
        "title": "HashHandling",
        "modified": "20250713063911045",
        "created": "20221227022248119"
    },
    {
        "text": "\"\"\"\no https://www.nntp.perl.org/group/perl.perl5.porters/2023/01/msg265583.html\n\no https://metacpan.org/pod/CPAN::Porters\n",
        "title": "HowToBuildPerl",
        "modified": "20250528012846632",
        "created": "20230127232236276"
    },
    {
        "text": "\"\"\"\no See also:\n- Data::TableReader::Decoder::HTML\n- DBIx::HTML\n- Form::Sensible\n- Form::Factory\n- Form::Toolkit\n- Form::Diva\n- HTML::Form\n- HTML::Form::Fu\n- HTML::Parser\n- HTML::Selector::XPath\n- HTML::Strip\n- HTML::TableContentParser\n- HTML::Valid\n- HTML5::DOM\n- Mojo::DOM58\n- Mojo::Template\n- Web::Query\n- Spreadsheet::HTML\n- TextAnalysisAndFormatting\n- XML::LibXML\n- https://datatables.net\n- http://savage.net.au/misc/Mojolicious.Wiki.html\n\no The HTML Living Standard:\n- https://html.spec.whatwg.org/multipage/\n\no A table of HTML entities:\n- https://tools.w3cub.com/html-entities\n- See also http://savage.net.au/misc/unicode.html, on my site, for some common cases, special cases, and Pīnyīn (Pinyin) vowels for Chinese\n\no For adding JSON_LD stuff, as per Schema.org, to HTML:\n- https://perlhacks.com/2025/01/adding-structured-data-with-perl/\n- For example, here is the Schema.org page for Person\n- https://schema.org/Person\n\no Crayon:\n- Dedupe, minify and extend CSS\n- https://metacpan.org/dist/Crayon\n\no Form::Tiny:\n- Input validator centered around Type::Tiny\n- https://metacpan.org/dist/Form-Tiny\n- https://brtastic.xyz/blog/article/perl-form-tiny\n\no HTML::AutoTag:\n- Just another HTML tag generator\n- Generate nested HTML (HTML4, XHTML and HTML5) tags with custom indentation, custom encoding and automatic attribute value rotation\n- https://metacpan.org/pod/HTML::AutoTag\n\no HTML::Display:\n- Display HTML locally in a browser\n- Can be used by Spreadsheet::HTML. See SpreadsheetStuff\n\no HTML::ElementTable:\n- Perl extension for manipulating a table composed of HTML::Element style components\n- https://metacpan.org/pod/HTML::ElementTable\n\no HTML::Escape:\n- Faster than HTML::Entities because it does less\n- https://metacpan.org/pod/HTML::Escape\n\no HTML::HTMLdoc:\n- Perl interface to the htmldoc program for producing PDF Files from HTML content\n- https://metacpan.org/pod/HTML::HTMLDoc\n- For htmldoc see https://www.msweet.org/htmldoc/\n- HTMLDOC converts HTML and Markdown source files or web pages to EPUB, PostScript, or PDF files with an optional table of contents\n\no HTML::Object:\n- HTML Parser, Modifier and Query Interface\n- https://metacpan.org/dist/HTML-Object\n- This module is yet another HTML parser, manipulation and query interface, but probably the most comprehensive one\n\no HTML::Parser:\n- HTML parser class\n- https://metacpan.org/dist/HTML-Parser\n- Contains HTML::Entities\n\no HTML::Tabulate:\n- HTML table rendering class\n- https://metacpan.org/dist/HTML-Tabulate\n\no HTML::Tidy:\n- (X)HTML validation in a Perl object\n- https://metacpan.org/dist/HTML-Tidy\n\no HTML::RewriteAttributes:\n- Concise attribute rewriting\n- https://metacpan.org/dist/HTML-RewriteAttributes\n\no HTML::T5:\n- HTML validation in a Perl object\n- https://metacpan.org/pod/HTML::T5\n- This is a replacement for HTML::Lint\n- Requires Alien::TidyHTML5, which provides the C html-tidy library or ascertains its presence\n\no HTML::Tagset:\n- https://metacpan.org/pod/HTML::Tagset\n- Data tables useful in parsing HTML\n- These hashes hold info per HTML tag about tags\n\no HTML::TreeBuilder:\n- HTML::TreeBuilder - Parser that builds a HTML syntax tree\n- https://metacpan.org/pod/HTML::TreeBuilder\n- Can be slow for large docs, hence the next module\n\no HTML::TreeBuilder::LibXML:\n- HTML::TreeBuilder and XPath compatible interface with libxml\n- HTML::TreeBuilder::LibXML is drop-in-replacement for HTML::TreeBuilder::XPath\n- https://metacpan.org/pod/HTML::TreeBuilder::LibXML\n\no Rose::HTML::Objects:\n- Object-oriented interfaces for HTML.\n- https://metacpan.org/dist/Rose-HTML-Objects\n\no Tags::HTML::Container:\n- https://metacpan.org/dist/Tags-HTML-Container\n- There are many modules in this series. See e.g. UsernamePassword\n- And Tags::HTML::Page, Tags::HTML::Element etc\n\no Text::CleanFragment:\n- https://metacpan.org/pod/Text::CleanFragment\n- Clean up text to use as URL fragment or filename\n\no Text::Table::HTML:\n- Generate HTML table\n- https://metacpan.org/dist/Text-Table-HTML\n\no Text::Table::HTML::DataTables:\n- Generate HTML table with jQuery and DataTables plugin\n- https://metacpan.org/pod/Text::Table::HTML::DataTables\n\no Validation of HTML:\n- https://validator.w3.org/nu/\n\no WWW::ClickSource:\n- https://metacpan.org/pod/WWW::ClickSource\n- Determine the source of a visit on your website : organic, adwords, facebook, referer site\n",
        "title": "HTMLHandling",
        "modified": "20250710073108837",
        "created": "20200930063306239"
    },
    {
        "text": "\"\"\"\no See also:\n- DnsStuff\n- EventStuff\n- FileHandling\n- HashHandling\n- [[HTTPServers]]\n- [[IO]]\n- LoggingStuff\n- ParallelProcessing\n- SwitchStatements\n- SystemMonitoring\n- https://dev.to/fgasper/perling-and-curling-2i10\n- http://savage.net.au/misc/Mojolicious.Wiki.html\n\no Authen::WebAuthn:\n- A library to add Web Authentication support to server applications\n- https://metacpan.org/dist/Authen-WebAuthn\n- This module lets you validate Web Authentication registration and authentication responses\n- https://www.w3.org/TR/webauthn/\n\no CGI::Info:\n- Information about the CGI environment\n- https://metacpan.org/pod/CGI::Info\n\no Cookie:\n- Cookie Object with Encryption or Signature\n- https://metacpan.org/dist/Cookie\n\no CGI::Session:\n- Persistent session data in CGI applications\n- https://metacpan.org/pod/CGI::Session\n\no CGI::Session::Driver::mariadb:\n- CGI::Session driver for MariaDB database\n- https://metacpan.org/pod/CGI::Session::Driver::mariadb\n\no CGI::Simple:\n- A Simple totally OO CGI interface that is CGI.pm compliant\n- https://metacpan.org/pod/CGI::Simple\n\no Data::URIID:\n- Extractor for identifiers from URIs\n- https://metacpan.org/pod/Data::URIID\n- See also File::FStore in FileHandling\n\no Data::URIID::Base:\n- Extractor for identifiers from URIs\n- https://metacpan.org/pod/Data::URIID::Base\n\no Duadua:\n- Detect User-Agent, do up again!\n- Parses the User-Agent string\n- https://metacpan.org/pod/Duadua\n\no FU:\n- Framework Ultimatum: A Lean and Efficient Zero-Dependency Web Framework.\n- https://metacpan.org/pod/FU\n\no Headers:\n- The Firefox extension \"Tamper Data\" is an effective tool for examining the headers of the requests to the server\n\no Header help:\n- HTTP::UserAgentClientHints\n- https://github.com/WICG/ua-client-hints/blob/main/README.md\n- This repository hosts the User Agent Client Hints (UA-CH) specification.\n\no HTTP::Body:\n- HTTP Body Parser\n- https://metacpan.org/dist/HTTP-Body\n\no HTTP::Cookies:\n- HTTP cookie jars\n- https://metacpan.org/pod/HTTP::Cookies\n\no HTTP::Cookies::Chrome:\n- Cookie storage and management for Google Chrome\n- https://metacpan.org/dist/HTTP-Cookies-Chrome\n- Uses HTTP::Cookies\n\no HTTP::CookieJar::LWP:\n- LWP adapter for HTTP::CookieJar\n- https://metacpan.org/pod/HTTP::CookieJar::LWP\n\no HTTP::Cookies::Microsoft:\n- Access to Microsoft cookies files\n- https://metacpan.org/pod/HTTP::Cookies::Microsoft\n\no HTTP::Cookies::Mozilla:\n- Cookie storage and management for Mozilla\n- https://metacpan.org/pod/HTTP::Cookies::Mozilla\n\no HTTP::Cookies::Netscape:\n- Access to Netscape cookies files\n- https://metacpan.org/pod/HTTP::Cookies::Netscape\n\no  HTTP::DAV:\n- A WebDAV client library for Perl5\n- https://metacpan.org/pod/HTTP::DAV\n\no HTTP::Message:\n- HTTP style message (base class)\n- https://metacpan.org/pod/HTTP::Message\n\no HTTP::Parser::XS:\n- A fast, primitive HTTP request parser\n- https://metacpan.org/dist/HTTP-Parser-XS\n\no HTTP::Promise:\n- Asynchronous HTTP Request and Promise\n- https://metacpan.org/dist/HTTP-Promise\n\no HTTP::Request::FromCurl:\n- Create a HTTP::Request from a curl command line\n- https://metacpan.org/dist/HTTP-Request-FromCurl\n\no HTTP::SecureHeaders:\n- Manage security headers with many safe defaults\n- https://metacpan.org/dist/HTTP-SecureHeaders\n- https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Headers_Cheat_Sheet.html\n\no HTTP::ServerEvent:\n- Create strings for HTTP Server Sent Events\n- https://metacpan.org/pod/HTTP::ServerEvent\n\no HTTP::Server::Simple:\n- Lightweight HTTP server\n- https://metacpan.org/pod/HTTP::Server::Simple\n\no HTTP::Server::Simple::CGI:\n- CGI.pm-style version of HTTP::Server::Simple\n- https://metacpan.org/pod/HTTP::Server::Simple::CGI\n\no HTTP::State\n- Fast RFC6265bis-draft + CHIPS Cookie Jar\n- https://metacpan.org/pod/HTTP::State\n\no HTTP::Tiny:\n- A small, simple, correct HTTP/1.1 client\n- Uses IO::Socket::IP (or IO::Socket::INET)\n- Uses HTTP::CookieJar\n- Eschew HTTP::Lite\n- https://metacpan.org/pod/HTTP::Tiny\n- Contains interesting See Also\n\no HTTP::Tinyish:\n- HTTP::Tinyish is a wrapper module for HTTP client modules LWP, HTTP::Tiny and HTTP client software curl and wget\n- https://metacpan.org/pod/HTTP::Tinyish\n- Backends are searched in the order of: LWP, HTTP::Tiny, curl and wget\n- HTTP::Tinyish will auto-detect if the backend also supports HTTPS, and use the appropriate backend based on the given URL to the request methods\n\no HTTP::Tiny::Mech:\n- Wrap a WWW::Mechanize instance in an HTTP::Tiny compatible interface.\n- https://metacpan.org/pod/HTTP::Tiny::Mech\n\no HTTP::Tiny::UA:\n- Higher-level UA features for HTTP::Tiny\n- https://metacpan.org/pod/HTTP::Tiny::UA\n\no LWP::Protocol::Net::Curl:\n- The power of libcurl in the palm of your hands!\n- https://metacpan.org/pod/LWP::Protocol::Net::Curl\n\no LWP::UserAgent:\n- REST::Client\n\no  LWP::UserAgent::Throttled:\n- Throttle requests to a site\n\no Net::Amazon::Glacier:\n- An implementation of the full Amazon Glacier RESTful 2012-06-01 API.\n- https://metacpan.org/dist/Net-Amazon-Glacier\n\no Net::Amazon::Signature::V4:\n- Implements the Amazon Web Services signature version 4, AWS4-HMAC-SHA256\n- https://metacpan.org/pod/Net::Amazon::Signature::V4\n\no Net::Curl\n- Perl interface for libcurl\n- https://metacpan.org/dist/Net-Curl\n- Contains Net::Curl::Easy, but see Net::Curl::Easier\n- https://metacpan.org/dist/Net-Curl-Easier\n\no Net::Firewall::BlockerHelper:\n- Helps with managing firewalls for banning IPs\n- https://metacpan.org/dist/Net-Firewall-BlockerHelper\n\no Net::Server:\n- Extensible, general Perl server engine\n- https://metacpan.org/dist/Net-Server\n\no Query::Param:\n- Lightweight object interface for parsing and creating query strings\n- https://metacpan.org/dist/Query-Param\n\no Router::Boom:\n- Fast routing engine for web applications\n- https://metacpan.org/pod/Router::Boom\n\no Router::R3:\n- URL router library with high performance\n- https://metacpan.org/pod/Router::R3\n\no Router::Ragel:\n- A high-performance URL router using the Ragel finite state machine\n- https://metacpan.org/pod/Router::Ragel\n\no Router::Simple:\n- Simple HTTP router\n- https://metacpan.org/dist/Router-Simple\n\no Router::XS:\n- Fast URI path to value lookup\n- https://metacpan.org/pod/Router::XS\n\no Terse:\n- Lightweight Web Framework\n- Requires Plack\n- https://metacpan.org/dist/Terse\n\no URI:\n- Uniform Resource Identifiers (absolute and relative)\n= https://metacpan.org/pod/URI\n\no URI::_punycode:\n- Encodes Unicode string in Punycode\n- https://metacpan.org/pod/URI\n- See also Net::IDN::Encode in DnsStuff\n\no URI::Escape:\n- Percent-encode and percent-decode unsafe characters\n- https://metacpan.org/pod/URI::Escape\n\no URI::Router:\n- Highest performance powerful URI router (URI path to value lookup) for HTTP frameworks\n- https://metacpan.org/pod/URI::Router\n\no URI::Shortener:\n- Shorten URIs so that you don't have to rely on external services\n- https://metacpan.org/pod/URI::Shortener\n\no Web::Components:\n- MVC pattern for Web::Simple\n- https://metacpan.org/dist/Web-Components\n\no Web::ComposableRequest:\n- Composable request class for web frameworks\n- https://metacpan.org/pod/Web::ComposableRequest\n\no Web::Simple:\n- A quick and easy way to build simple web applications\n- https://metacpan.org/dist/Web-Simple\n\no WWW::Mechanize\n- https://metacpan.org/dist/WWW-Mechanize/view/lib/WWW/Mechanize/FAQ.pod\n- You must, after every action that GETs or POSTs a page, check that Mech succeeded, or all bets are off\n",
        "title": "HTTPHandling",
        "modified": "20250713063459504",
        "created": "20210922020640121"
    },
    {
        "text": "\"\"\"\no See also:\n- EventStuff\n- [[HTTPHandling]]\n- ParallelProcessing\n- http://nginx.org/en/docs/\n- https://github.com/h2o/picohttpparser\n- http://savage.net.au/misc/Mojolicious.Wiki.html\n\no Furl:\n- Lightning-fast URL fetcher\n- https://metacpan.org/pod/Furl\n\no Minima:\n- Efficient web framework built with modern core classes\n- https://metacpan.org/pod/Minima\n\no Mojolicious:\n- Real-time web framework\n- https://metacpan.org/dist/Mojolicious\n- Mojo::Base::Tiny\n- Data::Object\n- FlightRecorder\n- Mojo::UserAgent::Cached\n\no Net::Async::HTTP::Server:\n- Serve HTTP with IO::Async\n- https://metacpan.org/dist/Net-Async-HTTP-Server\n\no Plack:\n- Perl Superglue for Web frameworks and Web Servers (PSGI toolkit)\n- https://metacpan.org/dist/Plack\n\no Plack::Middleware::Session:\n- Middleware for session management\n- https://metacpan.org/dist/Plack-Middleware-Session\n- Contains Plack::Session\n\no PSGI:\n- Perl Web Server Gateway Interface Specification\n- https://metacpan.org/dist/PSGI\n\no Starlet:\n- A simple, high-performance PSGI/Plack HTTP server\n- https://metacpan.org/pod/Starlet\n\no Starman:\n- High-performance preforking PSGI/Plack web server\n- https://metacpan.org/pod/Starman\n\no UniEvent::HTTP::Manager:\n- Extremely fast asynchronous preforking / threading event based web server\n- https://metacpan.org/dist/UniEvent-HTTP-Manager\n",
        "title": "HTTPServers",
        "modified": "20250713064311535",
        "created": "20250118010706469"
    },
    {
        "text": "\"\"\"\no See also:\n- DnsStuff\n- https://datatracker.ietf.org/doc/html/rfc4180 - CSV\n-  https://datatracker.ietf.org/doc/html/rfc4514 (primary) - DN (LDAP)\n- https://datatracker.ietf.org/doc/html/rfc4512 (secondary) - DN (LDAP)\n- https://datatracker.ietf.org/doc/html/rfc4517 - DN (LDAP)\n- https://datatracker.ietf.org/doc/html/rfc5234 - ABNF (Augmented BNF)\n- Note: rfc5234 obsoletes rfc4234\n-  https://datatracker.ietf.org/doc/html/rfc3629 - UTF-8\n-  https://datatracker.ietf.org/doc/html/rfc2253 - UTF-8 DNs\n",
        "title": "IETF",
        "modified": "20250713065309737",
        "created": "20211224225921579"
    },
    {
        "text": "\"\"\"\no See also:\n- ChartingAndPlotting\n",
        "title": "ImageStuff",
        "modified": "20250528013218502",
        "created": "20241123211253460"
    },
    {
        "text": "\"\"\"\no Inline:\n- Write Perl Subroutines in Other Programming Languages\n- https://metacpan.org/dist/Inline\n\no Inline::C:\n- C Language Support for Inline\n- https://metacpan.org/dist/Inline-C\n\no Inline::Lua:\n- Embed Lua and Fennel code in your Perl scripts\n- https://metacpan.org/dist/Inline-Lua\n",
        "title": "InlineStuff",
        "modified": "20250713065354867",
        "created": "20250706013124922"
    },
    {
        "text": "\"\"\"\no See also:\n- cpanm - https://metacpan.org/pod/App::cpanminus\n- App::dbinfo\n- App::genpw\n- App::PMUtils - https://metacpan.org/dist/App-PMUtils\n- DBI\n- DBD::mysql\n- DBD::Pg\n- DBD::SQLite - https://www.sqlite.org/cli.html\n\no ExtUtils::MakeMaker::FAQ:\n- Beware directives INSTALL_BASE and PREFIX\n- https://metacpan.org/dist/ExtUtils-MakeMaker\n\no Perlbrew:\n- See file:///home/ron/Documents/wikis/Debian.html for curl\n- https://metacpan.org/pod/App::perlbrew\n\no Multiple, separate Perls:\n- perlbrew --install-multi\n- https://metacpan.org/pod/Carmel\n\no App::MechaCPAN\n- Mechanize the installation of CPAN things\n- https://metacpan.org/pod/App::MechaCPAN\n",
        "title": "InstallPerl",
        "modified": "20250713071119907",
        "created": "20190701001534866"
    },
    {
        "text": "\"\"\"\no Asynchronous Stream Building Blocks:\n- Ryu. Has good SEE ALSO\n\no Lists:\n- List::AllUtils\n- List::Uniqnum\n\no Monitoring systems:\n- Monitorix - https://www.monitorix.org/\n\no Parse a directory listing:\n- File::Listing\n\no Power Tools (BSD utilities in pure Perl)\n- PerlPowerTools\n- In rare cases these use different options or work differently than standard Linux tools, which can lead to confusion if they and the Linux versions are both on your PATH. I personally deleted them when I hit this problem (or rather, it hit me)\n\no References:\n- Ref::Util\n\no Resource List:\n- https://github.com/thibaultduponchelle/perlres\n\no Secrets handling:\n- https://kubernetes.io/docs/concepts/configuration/secret/\n- Vault (https://www.vaultproject.io/)\n- Info for this comes from Curio\n\no Telephone numbers:\n- URI::tel\n\no UUID:\n- UUID4::Tiny\n",
        "title": "InterestingModules",
        "modified": "20250418005431505",
        "created": "20190630232849244"
    },
    {
        "text": "\"\"\"\no See also:\n- FileHandling\n- NetworkProgramming\n- OfficeFiles\n- OrgDocHandling\n- ParallelProcessing\n- RotateLogFiles\n- SocketStuff\n- SpreadsheetStuff\n- [[SSH]]\n- [[TCP/IP]]\n- UserInput\n- WebPush\n- WebServices\n- YamlStuff\n- ZipFiles\n- [[ZMQ]]\n\no IO:\n- https://metacpan.org/dist/IO\n- Object-style access to files, pipes, etc\n\no IO::AIO:\n- Asynchronous/Advanced Input/Output\n- https://metacpan.org/pod/IO::AIO\n\no IO::AIO::LoadLimited:\n- A tiny IO::AIO extension that allows to load multiple files\n- https://metacpan.org/pod/IO::AIO::LoadLimited\n\no IO::AIO::Util:\n- Useful functions missing from IO::AIO\n- https://metacpan.org/pod/IO::AIO::Util\n\no IO::Handle:\n- Supply object methods for I/O handles\n- https://metacpan.org/pod/IO::Handle\n\no IO::Interactive:\n- Utilities for interactive I/O\n- https://metacpan.org/pod/IO::Interactive\n\no IO::Socket:\n- Object interface to socket communications\n- https://metacpan.org/pod/IO::Socket\n\no IO::Socket::IP:\n- Family-neutral IP socket supporting both IPv4 and IPv6\n- https://metacpan.org/pod/IO::Socket::IP\n",
        "title": "IO",
        "modified": "20250710052828080",
        "created": "20231231004801589"
    },
    {
        "text": "\"\"\"\no To turn off encoding layers:\n- open my $fh, '<', $filename;\n- binmode $fh, ':raw';\n\no gb64:\n- Fast Pure Perl Base64 Encoding and Decoding\n- https://metacpan.org/dist/gb64\n\no IOLayer::QuotedPrint:\n- PerlIO layer for quoted-printable strings\n- https://metacpan.org/dist/IOLayer-QuotedPrint\n\no PerlIO::Via::Base64:\n- PerlIO layer for base64 (MIME) encoded strings\n- https://metacpan.org/pod/PerlIO::Via::Base64\n- Beware the capital 'V' in the name, unlike the following, which use 'v'\n\no PerlIO::via::Include:\n- PerlIO layer for including other files\n- https://metacpan.org/dist/PerlIO-via-Include\n\no PerlIO::via::LineNumber:\n- PerlIO layer for prefixing line numbers\n- https://metacpan.org/pod/PerlIO::via::LineNumber\n\no PerlIO::via::MD5:\n- PerlIO layer for creating an MD5 digest of a file\n- https://metacpan.org/pod/PerlIO::via::MD5\n- Uses Digest::MD5\n- Handles b64digest, digest and hexdigest\n\no PerlIO::via::Pod:\n- PerlIO layer for extracting plain old documentation\n- https://metacpan.org/dist/PerlIO-via-Pod\n\no PerlIO::via::QuotedPrint:\n- PerlIO layer for quoted-printable strings\n- https://metacpan.org/pod/PerlIO::via::QuotedPrint\n\no PerlIO::via::Rotate:\n- PerlIO layer for encoding using rotational deviation (rot13 etc)\n- https://metacpan.org/pod/PerlIO::via::Rotate\n\no PerlIO::via::StripHTML:\n- PerlIO layer to strip HTML tags from an input file\n- https://metacpan.org/pod/PerlIO::via::StripHTML\n\no PerlIO::via::UnComment:\n- PerlIO layer for removing comments\n- https://metacpan.org/pod/PerlIO::via::UnComment\n\no PerlIO::via::UnPod:\n- PerlIO layer for removing plain old documentation\n- https://metacpan.org/pod/PerlIO::via::UnPod\n\no PerlIO::via:xz:\n- PerlIO layer for XZ (de)compression\n- https://metacpan.org/pod/PerlIO::via::xz\n- Uses IO::Compress::Xz and IO::Uncompress::UnXz\n",
        "title": "IoLayers",
        "modified": "20250509002018782",
        "created": "20250217005556822"
    },
    {
        "text": "\"\"\"\no See also:\n- HardwareStuff\n- https://mqtt.org/ - The Standard for IoT Messaging\n\no Data::Power::Inspection:\n- Power Equipment Fault Inspection and Troubleshooting Library\n- https://metacpan.org/dist/Data-Power-Inspection\n\no Net::MQTT:\n- Perl module for MQTT Protocol (http://mqtt.org/)\n- https://metacpan.org/pod/\n\no Net::MQTT::Simple:\n- Perl module for MQTT Protocol (http://mqtt.org/)\n- https://metacpan.org/pod/Net::MQTT::Simple\n\no Power::Outlet:\n- Control and query network attached power outlets\n- https://metacpan.org/pod/Power::Outlet\n",
        "title": "IoT",
        "modified": "20250713071617563",
        "created": "20231015000023583"
    },
    {
        "text": "\"\"\"\no Consumer::NonBlock:\n- Send data between processes without blocking\n- https://metacpan.org/dist/Consumer-NonBlock\n",
        "title": "IpC",
        "modified": "20250713225541486",
        "created": "20240706063838758"
    },
    {
        "text": "\"\"\"\no IRI:\n- Internationalized Resource Identifiers\n- https://metacpan.org/pod/IRI\n- The IRI module provides an object representation for Internationalized Resource Identifiers (IRIs) as defined by RFC 3987 and supports their parsing, serializing, and base resolution\n",
        "title": "IRI",
        "modified": "20240929045732665",
        "created": "20240929045655559"
    },
    {
        "text": "\"\"\"\no See also:\n- DataTraversal\n",
        "title": "IteratorStuff",
        "modified": "20250713071702507",
        "created": "20240718065728615"
    },
    {
        "text": "\"\"\"\no See also:\n- JsonStuff\n\no  JE:\n- Pure-Perl ECMAScript (JavaScript) Engine\n- https://metacpan.org/dist/JE\n\no JavaScript::Duktape:\n- Perl interface to Duktape embeddable javascript engine\n- https://metacpan.org/pod/JavaScript::Duktape\n- See also https://duktape.org/api.html and https://duktape.org/guide\n\no JavaScript::Packer:\n- Perl version of Dean Edwards' Packer.js\n- https://metacpan.org/dist/JavaScript-Packer\n\no JavaScript::QuickJS:\n- Run JavaScript via QuickJS in Perl\n- https://metacpan.org/dist/JavaScript-QuickJS\n\no JavaScript::V8::XS:\n- Perl XS binding for the V8 Javascript embeddable engine\n- https://metacpan.org/pod/JavaScript::V8::XS\n\no JQ::Lite:\n- A lightweight jq-like JSON query engine in Perl\n- https://metacpan.org/dist/JQ-Lite\n- Sample code:\n<pre>\n#/usr/bin/env perl\n\nuse JQ::Lite;\n\nmy $json = '{\"users\":[{\"name\":\"Alice\"},{\"name\":\"Bob\"}]}';\nmy $jq = JQ::Lite->new;\nmy @names = $jq->run_query($json, '.users[].name');\nprint join(\"\\n\", @names), \"\\n\";\n</pre>\n",
        "title": "JavaScript",
        "modified": "20250528013413894",
        "created": "20231130010232281"
    },
    {
        "text": "\"\"\"\no See also:\n- CryptoStuff\n- JavaScript\n- https://www.json.org/json-en.html\n- https://jsonlines.org/\n- https://json-schema.org\n- https://json-schema.org/understanding-json-schema/reference\n- CSS.and.Javascript.html which mentions jq and JSON::JQ\n- https://www.relaxedjson.org/specification\n\no CBOR::XS:\n- Concise Binary Object Representation (CBOR, RFC7049)\n- https://metacpan.org/dist/CBOR-XS\n\no Cpanel::JSON::XS:\n- Recommended despite the old comments below\n- Marc Lehmann has (long ago?) said bad things about this module. See the POD for JSON::SIMD, under Interoperability as above\n- It can be necessary. See ~/bin/test.cpanel.json.xs.type.pl\n- Code:\n\n<pre>\n#! /usr/bin/perl\nuse warnings;\nuse strict;\n\nuse Cpanel::JSON::XS qw{ encode_json };\nuse Cpanel::JSON::XS::Type;\n\nmy $struct = {Parts => [{PartNumber => \"1\",\n                         ETag => \"46f438ba2afd8d6dc03958b867a349b1\"},\n                        {ETag => \"7b1e03e9ed7bb49d907e5a2d25b89159\",\n                         PartNumber => \"2\"},\n                        {ETag => \"30c23faad792c9b7c4b05356305cb6b0\",\n                         PartNumber => \"3\"},\n                        {ETag => \"979174e5353386a75d8e36d223d22ea2\",\n                         PartNumber => \"4\"},\n                        {PartNumber => \"5\",\n                         ETag => \"ee93774d0a2ec9c27fae6a4fb3496804\"},\n                        {PartNumber => \"6\",\n                         ETag => \"9a2c5a1abe6869f370b07d76c270e569\"}\n             ]};\nprint encode_json($struct,\n                  {Parts => json_type_arrayof({\n                      PartNumber => JSON_TYPE_INT,\n                      ETag       => JSON_TYPE_STRING})});\n\nOutput:\n{\"Parts\":[{\"ETag\":\"46f438ba2afd8d6dc03958b867a349b1\",\"PartNumber\":1},\n{\"ETag\":\"7b1e03e9ed7bb49d907e5a2d25b89159\",\"PartNumber\":2},\n{\"ETag\":\"30c23faad792c9b7c4b05356305cb6b0\",\"PartNumber\":3},\n{\"PartNumber\":4,\"ETag\":\"979174e5353386a75d8e36d223d22ea2\"},\n{\"PartNumber\":5,\"ETag\":\"ee93774d0a2ec9c27fae6a4fb3496804\"},\n{\"PartNumber\":6,\"ETag\":\"9a2c5a1abe6869f370b07d76c270e569\"}]}\n</pre>\n\no JSON::Lines:\n- Parse JSONLines with perl\n- https://metacpan.org/pod/JSON::Lines\n\no JSON::MaybeXS:\n- Use Cpanel::JSON::XS with a fallback to JSON::XS and JSON::PP\n- https://metacpan.org/pod/JSON::MaybeXS\n\no JSON::Path:\n- Implements JSONPath, an XPath-like language for searching JSON-like structures\n- https://metacpan.org/dist/JSON-Path\n- JSONPath is described at http://goessner.net/articles/JsonPath/\n\no JSON::PP:\n- JSON::XS compatible pure-Perl module\n- https://metacpan.org/dist/JSON-PP\n\no JSON::Relaxed:\n- An extension of JSON that allows for better human-readability\n- https://metacpan.org/pod/JSON::Relaxed\n\no JSON::Schema::Generate:\n- Generate JSON Schemas from data!\n- https://metacpan.org/dist/JSON-Schema-Generate\n\no JSON::Schema::Modern:\n- Validate data against a schema using a JSON Schema\n- https://metacpan.org/dist/JSON-Schema-Modern\n\no JSON::Schema::Tiny:\n- Validate data against a schema, minimally\n- https://metacpan.org/dist/JSON-Schema-Tiny\n\no  JSON::SIMD:\n- JSON serialising/deserialising, done correctly and faster\n- https://metacpan.org/dist/JSON-SIMD\n\no JSON::ToHTML:\n- Render JSON-based Perl datastructures as HTML tables\n- https://metacpan.org/dist/JSON-ToHTML\n\no JSON::Typist:\n- Replace mushy strings and numbers with rigidly typed replacements\n- https://metacpan.org/pod/JSON::Typist\n\no JSON::XS:\n- JSON serialising/deserialising, done correctly and fast\n- https://metacpan.org/dist/JSON-XS\n\no JSONL::Subset:\n- Extract a percentage of lines from a JSONL file\n- https://metacpan.org/dist/JSONL-Subset\n\no OpenAPI::Modern:\n- Validate HTTP requests and responses against an OpenAPI v3.1 document\n- https://metacpan.org/dist/OpenAPI-Modern\n- Contains JSON::Schema::Modern::Document::OpenAPI and  JSON::Schema::Modern::Vocabulary::OpenAPI\n",
        "title": "JsonStuff",
        "modified": "20250713072229465",
        "created": "20230425023754721"
    },
    {
        "text": "\"\"\"\no AI::Ollama::Client:\n- Client for AI::Ollama (not on CPAN)\n- https://metacpan.org/dist/AI-Ollama-Client\n\no Ollama:\n- Ollama is a free and open-source project that lets you run various open source LLMs locally\n- https://itsfoss.com/ollama/\n\no WebService::Chroma:\n- Chromadb client\n- https://metacpan.org/dist/WebService-Chroma\n- Chroma is the AI-native open-source vector database. Chroma makes it easy to build LLM apps by making knowledge, facts, and skills pluggable for LLMs\n- https://docs.trychroma.com/docs/overview/getting-started\n\no WebService::Ollama:\n- Ollama client\n- https://metacpan.org/pod/WebService::Ollama\n",
        "title": "LargeLanguageModels",
        "modified": "20250301003654579",
        "created": "20250206221637971"
    },
    {
        "text": "\"\"\"\no LaTeX::Easy::Templates:\n- https://metacpan.org/dist/LaTeX-Easy-Templates\n- Easily format content into PDF/PS/DVI with LaTeX templates\n- Format text content, living in a Perl data structure, into printer-ready documents (PDF/Postscript/DVI)\n- Documents how to install LaTeX\n- Uses Text::Xslate\n\no LaTeX::ToUnicode:\n- Convert LaTeX commands to Unicode\n- https://metacpan.org/dist/LaTeX-ToUnicode\n",
        "title": "LaTeX",
        "modified": "20250710045918770",
        "created": "20240328002947038"
    },
    {
        "text": "\"\"\"\no Protocol::Sys::Virt:\n- Abstract LibVirt protocol implementation\n- https://metacpan.org/dist/Protocol-Sys-Virt\n\no Sys::Async::Virt:\n- LibVirt protocol implementation for clients\n- https://metacpan.org/dist/Sys-Async-Virt\n\no Sys::Virt:\n- Represent and manage a libvirt hypervisor connection\n- https://metacpan.org/pod/Sys::Virt\n- See also https://libvirt.org/\n",
        "title": "LibVirt",
        "modified": "20250513221754055",
        "created": "20250513221226345"
    },
    {
        "text": "\"\"\"\no See also:\n- Yes, licence is spelled that way in Australia\n\no App::Software::License:\n- software-license --holder 'Paul Marquess' --year 1995 --license Perl_5 --type license > LICENSE\n- https://metacpan.org/pod/App::Software::License\n\no Enterprise::Licence:\n- Licence or License\n- https://metacpan.org/dist/Enterprise-Licence\n\no Module::LicenseScanner:\n- This file is used to gather all CPAN licenses from third party dependencies\n- https://metacpan.org/dist/LicenseScanner\n\no Regexp::Pattern::License:\n- Regular expressions for legal licenses\n- https://metacpan.org/dist/Regexp-Pattern-License\n\no Software::Copyright:\n- Copyright class\n- https://metacpan.org/dist/Software-Copyright\n",
        "title": "LicenceStuff",
        "modified": "20250713072412656",
        "created": "20231130005805666"
    },
    {
        "text": "\"\"\"\no See also:\n- DataTypes\n\no App::wordlist:\n- Grep words from (or test them against) WordList::*\n- https://metacpan.org/pod/App::wordlist\n\no ArrayData::Lingua::Word::ID::KBBI::ByClass::Adjective:\n- Indonesian adjective words from KBBI (Kamus Besar Bahasa Indonesia)\n- https://metacpan.org/pod/ArrayData::Lingua::Word::ID::KBBI::ByClass::Adjective\n\no ArrayData::Lingua::Word::ID::KBBI::ByClass::Verb:\n- Indonesian verb words from KBBI (Kamus Besar Bahasa Indonesia)\n- https://metacpan.org/dist/ArrayData-Lingua-Word-ID-KBBI-ByClass-Verb\n\no ArrayData::Lingua::Word::ID::KBBI::FigureOfSpeech:\n- Indonesian figure of speech (kiasan) entries from KBBI (Kamus Besar Bahasa Indonesia), 3e\n- https://metacpan.org/dist/ArrayData-Lingua-Word-ID-KBBI-FigureOfSpeech\n\no ArrayData::Lingua::Word::ID::KBBI::Proverb:\n- Indonesian proverb (peribahasa) entries from KBBI (Kamus Besar Bahasa Indonesia), 3e\n- https://metacpan.org/pod/ArrayData::Lingua::Word::ID::KBBI::Proverb\n- Contains the same data as WordList::ID::KBBI::Proverb\n\no Calendar::Indonesia::Holiday:\n- List Indonesian public holidays\n- https://metacpan.org/dist/Calendar-Indonesia-Holiday\n\no CGI::Lingua:\n- Create a multilingual web page\n- https://metacpan.org/pod/CGI::Lingua\n\no Convert::CEGH:\n- Coptic/Ethiopic/Greek/Hebrew Gematria & Transliteration\n- https://metacpan.org/pod/Convert::CEGH\n\no Convert::Number::Coptic:\n- Convert Between Western and Coptic Numeral Systems\n- https://metacpan.org/dist/Convert-Number-Coptic\n\no Convert::Number::Digits:\n- Convert Digits Between the Scripts of Unicode\n- https://metacpan.org/dist/Convert-Number-Digits\n\no Convert::Number::Ethiopic:\n- Convert Between Western and Ethiopic Numeral Systems\n- https://metacpan.org/dist/Convert-Number-Ethiopic\n- See also https://ethiopic.com/\n\no Convert::Number::Roman:\n- Convert Between Western and Roman Numeral Systems\n- https://metacpan.org/dist/Convert-Number-Roman\n\no Date::Ethiopic:\n- ICalendar for the Ethiopic Calendar System\n- https://metacpan.org/dist/Date-Ethiopic\n\no Date::Holidays:\n- Date::Holidays::* adapter and aggregator for all your holiday needs\n- https://metacpan.org/pod/Date::Holidays\n\no Date::Holidays::TW:\n- Determine whether it is Taiwan Holidays or not\n- https://metacpan.org/dist/Date-Holidays-TW\n\no DateTime::Calendar::Coptic:\n- DateTime Module for the Coptic Calendar System.\n- https://metacpan.org/dist/DateTime-Calendar-Coptic\n\no I18N::Langinfo:\n- Query locale information\n- https://metacpan.org/pod/I18N::Langinfo\n\no Koha::Contrib::Tamil:\n- Various scripts to manage Koha instances\n- https://metacpan.org/dist/Koha-Contrib-Tamil\n\no Lingua::Boolean::Tiny:\n- A smaller Lingua::Boolean, with support for more languages\n- https://metacpan.org/pod/Lingua::Boolean::Tiny\n\no Lingua-EN-GivenNames:\n- An SQLite database of derivations of English given names\n\no Lingua::EN::Infinitive:\n-  Determine the infinitive form of a conjugated word\n\no Lingua::EN::Inflexion\n- Inflect English nouns, verbs, adjectives, and articles\n- https://metacpan.org/dist/Lingua-EN-Inflexion\n\no Lingua::EN::StopWordList:\n- A sorted list of English stop words\n\no Lingua::EN::Titlecase::Simple:\n- John Gruber's headline capitalization script\n- https://metacpan.org/dist/Lingua-EN-Titlecase-Simple\n- Lingua::EN::Titlecase provides a much more heavyweight, modular solution for the same problem\n\no Lingua::FR::Numbers::Ordinate:\n- Go from cardinal number (4) to ordinal (\"4ème\")\n- https://metacpan.org/pod/Lingua::FR::Numbers::Ordinate\n\no Lingua::Interset:\n- DZ Interset is a universal morphosyntactic feature set to which all tagsets of all corpora/languages can be mapped\n- https://metacpan.org/pod/Lingua::Interset\n\no Lingua::NameUtils:\n- Identify given/family names and capitalize correctly\n\no Lingua-RU-Numeral:\n- Perl extension for generate Russian wording of numerals from the natural numbers and 0 (zero)\n- https://metacpan.org/dist/Lingua-RU-Numeral\n\no Lingua::RU::Num2Word:\n- Numbers to words in Russian (without currency, but with specified gender)\n- https://metacpan.org/dist/Lingua-RU-Num2Word\n\no Lingua::String:\n- Class to contain a string in many different languages\n- https://metacpan.org/dist/Lingua-String\n\no String::Equivalence::Amharic:\n- Normalization Utilities for Amharic\n- https://metacpan.org/dist/String-Equivalence-Amharic\n\no Text::DoubleMetaphone:\n- Phonetic encoding of words.\n- https://metacpan.org/pod/Text::DoubleMetaphone\n\no Text::Metaphone:\n- A modern soundex. Phonetic encoding of words\n- https://metacpan.org/pod/Text::Metaphone\n\no Text::Metaphone::Amharic:\n- The Metaphone Algorithm for Amharic\n- https://metacpan.org/pod/Text::Metaphone::Amharic\n\no Text::Phonetic::Metaphone:\n- Metaphone algorithm\n- https://metacpan.org/pod/Text::Phonetic::Metaphone\n\no Text::TransMetaphone:\n- Translingual Phonetic Encoding of Words\n- https://metacpan.org/pod/Text::TransMetaphone\n\no Text::WagnerFischer::Amharic:\n- The Wagner-Fischer Algorithm for Amharic\n- https://metacpan.org/pod/Text::WagnerFischer::Amharic\n\no Unicode::Japanese:\n- Convert encoding of Japanese text\n- https://metacpan.org/dist/Unicode-Japanese\n\no WordList::ID::KBBI::ByClass::Adverb:\n- Indonesian adverb words from Kamus Besar Bahasa Indonesia (KBBI), 3e\n- https://metacpan.org/pod/WordList::ID::KBBI::ByClass::Adverb\n\no WordList::ID::KBBI::Proverb:\n- Indonesian proverb (peribahasa) entries from Kamus Besar Bahasa Indonesia (KBBI), 3e\n- https://metacpan.org/dist/WordList-ID-KBBI-Proverb\n- Contains the same data as ArrayData::Lingua::Word::ID::KBBI::Proverb\n",
        "title": "LinguaStuff",
        "modified": "20250713230006464",
        "created": "20230702003755699"
    },
    {
        "created": "20240720060957732",
        "text": "\"\"\"\no See also:\n- DatesAndTimes\n\no Convert::Number::Digits:\n- Convert Digits Between the Scripts of Unicode.\n- https://metacpan.org/pod/Convert::Number::Digits\n- Methods included:\n<pre>\n    toArabic - output digits in Arabic script (١-٢).\n    toArabicIndic - output digits in ArabicIndic script (۱-۲).\n    toBengali - output digits in Bengali script (১-২).\n    toBold - output digits in Bold script (𝟏-𝟐).\n    toDevanagari - output digits in Devanagari script (१-२).\n    toDoubleStruck - output digits in DoubleStruck script (𝟙-𝟚).\n    toEthiopic - output digits in Ethiopic script (፩-፪).\n    toFullWidth - output digits in FullWidth script (１-２).\n    toGujarati - output digits in Gujarati script (૧-૨).\n    toGurmukhi - output digits in Gurmukhi script (੧-੨).\n    toKannada - output digits in Kannada script (೧-೨).\n    toKhmer - output digits in Khmer script (១-២).\n    toLao - output digits in Lao script (໑-໒).\n    toLimbu - output digits in Limbu script (᥆-᥏).\n    toMalayalam - output digits in Malayalam script (൧-൨).\n    toMongolian - output digits in Mongolian script (᠑-᠒).\n    toMonoSpace - output digits in MonoSpace script (𝟷-𝟸).\n    toMyanmar - output digits in Myanmar script (၁-၂).\n    toOriya - output digits in Oriya script (୧-୨).\n    toOsmanya - output digits in Osmanya script (𐒠-𐒩).\n    toRomanLower - output digits in lowercase Roman numerals (ⅰ-ⅸ).\n    toRomanUpper - output digits in uppercase Roman numerals (Ⅰ-Ⅸ).\n    toSansSerif - output digits in SansSerif script (𝟣-𝟤).\n    toSansSerifBold - output digits in SansSerifBold script (𝟭-𝟮).\n    toTamil - output digits in Tamil script (௧-௨).\n    toTelugu - output digits in Telugu script (౧-౨).\n    toThai - output digits in Thai script (๑-๒).\n    toTibetan - output digits in Tibetan script (༡-༢).\n</pre>\n\no Data::Localize::Format::Maketext:\n- Maketext Formatter\n- https://metacpan.org/pod/Data::Localize::Format::Maketext\n- Warning: POD is void\n\no Data::Localize::Format::Sprintf:\n- Format strings using regular sprintf\n- https://metacpan.org/pod/Data::Localize::Format::Sprintf\n\no DateTime::Locale:\n- Localization support for DateTime.pm\n- https://metacpan.org/dist/DateTime-Locale\n\no Locale::Codes:\n- A distribution of modules to handle locale codes\n- For example, there are codes associated with different countries, different currencies, different languages, etc\n- https://metacpan.org/dist/Locale-Codes\n\no Locale::Country::Multilingual:\n- To translate country names\n- https://metacpan.org/pod/Locale::Country::Multilingual\n\no Locale::Intl:\n- A Web Intl.Locale Class Implementation\n- https://metacpan.org/dist/Locale-Intl\n\no Locale::Maketext::Utils:\n- Adds some utility functionality and failure handling to Local::Maketext handles\n- https://metacpan.org/dist/Locale-Maketext-Utils\n\no Locale::Places:\n- Translate places between different languages using http://download.geonames.org/\n- https://metacpan.org/dist/Locale-Places\n\no Locale::TextDomain:\n- Perl Interface to Uniforum Message Translation\n- https://metacpan.org/pod/Locale::TextDomain\n- This module ships as part of https://metacpan.org/dist/libintl-perl\n- The latter also contains Locale::Util - Portable l10n and i10n functions, and many others\n\no Locale::TextDomain::OO::Extract:\n- Extracts internationalization data\n- https://metacpan.org/dist/Locale-TextDomain-OO-Extract\n- Ships with a long list of examples\n\no Locale::Unicode:\n- Unicode Locale Identifier compliant with BCP47 and CLDR\n- https://metacpan.org/dist/Locale-Unicode\n- Locale::Unicode::Boolean Boolean: Representation Class\n- Locale::Unicode::Data\n- Locale::Unicode::Exception Locale: Unicode Exception C\n\no Telugu::TGC:\n- Tailored Grapheme Clusters for Telugu language\n- https://metacpan.org/dist/Telugu-TGC\n",
        "title": "LocaleStuff",
        "modified": "20250714073640045"
    },
    {
        "text": "\"\"\"\no See also:\n- ApacheStuff\n- JsonStuff\n- RotateLogFiles\n\no DBI::Log:\n- Log all DBI queries\n- https://metacpan.org/dist/DBI-Log\n- POD refers to DBIx::Class::UnicornLogger, DBIx::Class::Storage::Debug::PrettyTrace\n\no File::Syslogger:\n- Use POE to tail a file and read new lines into syslog.\n- https://metacpan.org/dist/File-Syslogger\n\no Log::Abstraction:\n- Logging Abstraction Layer\n- https://metacpan.org/dist/Log-Abstraction\n\no Log::Any:\n- Bringing loggers and listeners togethe\n- https://metacpan.org/pod/Log::Any\n\no Log::Dispatch:\n- Dispatches messages to one or more outputs\n- https://metacpan.org/pod/Log::Dispatch\n\no Log::Dispatch::TAP:\n- Log to TAP output\n- https://metacpan.org/dist/Log-Dispatch-TAP\n\no Log::Dispatch::UnixSyslog:\n- Log events to syslog with Unix::Syslog\n- https://metacpan.org/dist/Log-Dispatch-UnixSyslog\n\no Log::Dispatch::WarnDie:\n- Log standard Perl warnings and errors\n- https://metacpan.org/dist/Log-Dispatch-WarnDie\n\no Log::Dispatch::XML:\n- Collect one or more messages in XML format\n- https://metacpan.org/pod/Log::Dispatch::XML\n\no Log::Dispatchouli:\n- A simple wrapper around Log::Dispatch\n- https://metacpan.org/dist/Log-Dispatchouli\n\no Log::Handler:\n- Log messages to several outputs\n- https://metacpan.org/pod/Log::Handler\n- This is my favourite\n\no Log::Handler::Plugin::DBI\n- A plugin for Log::Handler using Log::Hander::Output::DBI\n- https://metacpan.org/pod/Log::Handler::Plugin::DBI\n\no Log::JSON::Lines:\n- Log in JSONLines format\n- https://metacpan.org/dist/Log-JSON-Lines\n- https://jsonlines.org\n\no Log::Journald:\n- Send messages to a systemd journal\n- https://metacpan.org/pod/Log::Journald\n\no Log::Log4perl:\n- Log4j implementation for Perl\n- https://metacpan.org/pod/Log::Log4perl\n- Warning: Use this if you want maximum complexity in your code\n\no Log::LogMethods:\n- Writes your logging code for you!\n- https://metacpan.org/pod/Log::LogMethods\n\no Log::Mini:\n- It's a very simple logger which can log your messages to a file or STDERR\n- https://metacpan.org/pod/Log::Mini\n\no Log::Report:\n- Report a problem, with exceptions and translation support\n- https://metacpan.org/dist/Log-Report\n\no Log::Report::Lexicon:\n- Translation component of Log::Report\n- https://metacpan.org/dist/Log-Report-Lexicon\n\no Log::Report::Template:\n- Template Toolkit with translations\n- https://metacpan.org/dist/Log-Report-Template\n\no Log::WarnDie:\n- Log standard Perl warnings and errors on a log handler\n- https://metacpan.org/pod/Log::WarnDie\n\no LWP::CurlLog:\n- Log LWP::UserAgent / HTTP::Tiny requests as curl commands\n- https://metacpan.org/dist/LWP-CurlLog\n\no Parse::Syslog::Line:\n- Simple syslog line parser\n- https://metacpan.org/dist/Parse-Syslog-Line\n\no Readonly::Values::Syslog:\n- Syslog Constants\n- https://metacpan.org/dist/Readonly-Values-Syslog\n",
        "title": "LoggingStuff",
        "modified": "20250713230229514",
        "created": "20240718230940062"
    },
    {
        "text": "\"\"\"\no See also:\n- EmailStuff\n- MailingLists\n- PacketCapture\n\no https://www.nntp.perl.org/group/perl.perl5.porters/\n",
        "title": "MailingLists",
        "modified": "20250528015509656",
        "created": "20210819045944904"
    },
    {
        "created": "20190630232743522",
        "text": "\"\"\"\n[[2FA]]\n[[Acronyms]]\nAdventPlanet\nAiEngines\nAlgorithmicStuff\nAnimationStuff\nAntiVirusStuff\nApacheStuff\nArchiveFiles\nArrayHandling\nAsciiCodes\n[[ASN]]\nAssemblerX86\nAudioVisual\nAutomatedBackups\nBenchmarkingTools\nBibliographicStuff\nBibTeX\nBillOfMaterials\nBioInformatics\nBlockChain\nBrowserStuff\n[[builtins]]\nBusinessApps\nCachingStuff\nCaptchaStuff\nCaseStatement\nChangesFiles\nChartingAndPlotting\nChatBots\nChildProcesses\nClassStuff\nClipBoard\nCodeTidyingCode\nCodingStyle\n[[Color]]\nCommandLineStuff\nCompressionUtils\nConfigFiles\nConstantStuff\nCoreList\n[[Corinna]]\n[[CPAN]]\nCpanFile\n[[cron]]\nCryptoStuff\nCssHandling\nDatabaseAndSQL\nDataCleaning\nDataTraversal\nDataTypes\nDataValidation\nDatesAndTimes\nDebianOS\nDebuggingStuff\n[[DFA]]\nDnsStuff\nDomainNames\nEBookHandling\nEditorConfigFiles\nEmailStuff\nEnterpriseApps\nEnumStuff\nEventStuff\nExceptionHandling\nExportHandling\nExtensibleProvisioningProtocol\nFileHandling\nFinancialStuff\nFindDependencies\n[[Games]]\nGenealogyStuff\nGeographicStuff\nGitHubAndPause\nGitStuff\nGoogleAds\nGoogleDrive\nGrammarProcessing\n[[Graphs]]\nHardwareStuff\nHashHandling\nHowToBuildPerl\n[[HTMLHandling]]\n[[HTTPHandling]]\n[[HTTPServers]]\n[[IETF]]\nImageStuff\nInlineStuff\nInterestingModules\nInstallPerl\n[[IO]]\nIoLayers\nIoT\nIpC\n[[IRI]]\nIteratorStuff\nJavaScript\nJsonStuff\nLargeLanguageModels\nLaTeX\nLibVirt\nLicenceStuff\nLinguaStuff\nLocaleStuff\nLoggingStuff\nMailingLists\nMarkdownHandling\nMariaDB\n[[Marpa]]\nMathsLibraries\nMeasureMetrics\nMemoryUsage\nMidiControllers\nMobilePhones\nModernPerl\nModuleBuilding\nModulePlugins\nMusicStuff\nNetworkProgramming\nNewModules\nNewOperators\nOfficeFiles\n[[OpenGL]]\nOpenGraphProtocol\nOpenTelemetry\nOrgDocHandling\nOsStuff\nPacketCapture\nParallelProcessing\nParameterTypes\nParsingStuff\nPdfStuff\nPerlDeltas\nPerlDistros\nPerlDocumentation\nPerlInternals\n[[Perl V7]]\nPhoneNumbers\nPhpStuff\nPipeLines\nPodHandling\n[[POSIX]]\n[[Pragma]]\nProfilingCode\nProjectManagement\nProperNames\nQrCodes\nRaspberryPi\n[[RDAP]]\nRedBlackTrees\nRegexpStuff\nRegistrySystemTesting\nRemoteDesktops\nRequestTracker\nRestfulInterface\nRotateLogFiles\n[[RSS]]\nSampleCode\nScreenStuff\nSecurityPolicy\nSeismicOS\nSetStuff\nSlackWare\nSocketStuff\nSocialMedia\nSoftwareLicense\nSortModules\nSpreadsheetStuff\n[[SSH]]\nStaticSiteGenerators\nStatisticsStuff\nStringStuff\nSwitchStatements\nSystemInfo\nSystemMonitoring\n[[TCP/IP]]\nTemplateStuff\nTestingHelp\nTextAnalysisAndFormatting\nTiddlyWikis\nTimerWare\nTrueTypeFonts\nUninstallModule\nUnixWare\nUserInput\nUsernamePassword\nUseUse\n[[UTF8]]\n[[UUID]]\nVersionInfo\nVirtualEnvironment\nWantArray\nWebAssembly\nWebPush\nWebSecurity\nWebServices\n[[X11]]\nXDGBaseDirectorySpecification\n[[XML]]\n[[XS]]\nXWindowsStuff\nYamlStuff\nZeframsStuff\nZipFiles\n[[ZMQ]]\n",
        "title": "MainMenu",
        "tags": "",
        "modified": "20250714073425774"
    },
    {
        "text": "\"\"\"\no https://blogs.perl.org/users/usna78/2024/05/mariadb-10-and-sqltranslatorproducer.html\n",
        "title": "MariaDB",
        "modified": "20240603065835223",
        "created": "20240603065827811"
    },
    {
        "created": "20210802054230814",
        "text": "\"\"\"\no See also:\n- App::oaf\n- Asciidoc\n- BBcode\n- Creole\n- DataTraversal\n- MediaWiki\n- MultiMarkdown\n- Pithub::Markdown\n- PodHandling\n- TemplateStuff\n- https://commonmark.org/\n- https://css-tricks.com/making-mermaid-diagrams-in-markdown/\n- https://datatracker.ietf.org/doc/html/rfc7764\n- https://github.github.com/gfm/ \n- https://metacpan.org/pod/CommonMark\n- https://metacpan.org/pod/Markdown::Perl\n- reStructuredText\n- Swim\n- Trac\n- Yaadgom\n\no Specifications and Tutorials:\n- http://neilb.org/reviews/markdown.html\n- https://daringfireball.net/projects/markdown/syntax\n- https://metacpan.org/pod/Text::MultiMarkdown\n- https://fletcherpenney.net/multimarkdown/\n- https://www.markdowntutorial.com/\n\no CommonMark:\n- Interface to the CommonMark C library\n- https://metacpan.org/pod/CommonMark\n\no Markdent::Dialect::GitHub:\n- Markdown extensions implemented on GitHub\n- https://metacpan.org/dist/Markdent\n\no Markdown::Parser:\n- Markdown Parser Only\n- https://metacpan.org/dist/Markdown-Parser\n\no Markdown::Perl:\n- Very configurable Markdown processor written in pure Perl, supporting the CommonMark spec and many extensions\n- https://metacpan.org/pod/Markdown::Perl\n\no Markdown::Render:\n- Render markdown as HTML\n- https://metacpan.org/dist/Markdown-Render\n\no Markdown::Simple:\n- Markdown to HTML converter\n- https://metacpan.org/dist/Markdown-Simple\n- Code generated by co-pilot\n- Uses XS\n\no mdcat:\n- Fancy cat for Markdown (that is, CommonMark)\n- https://github.com/swsnr/mdcat\n- Release binaries: https://github.com/swsnr/mdcat/releases/\n- An add-on which generates docs from code comments: https://github.com/EvanCarroll/p5-doc-comments\n\no Mermaid:\n- Mermaid is a JavaScript based diagramming and charting tool that takes Markdown-inspired text definitions and creates diagrams dynamically in the browser\n- https://github.blog/2022-02-14-include-diagrams-markdown-files-mermaid/\n- Warning: It outputs to an iFrame within your browser\n\no Regexp::Common::Markdown:\n- Markdown Common Regular Expressions\n- https://metacpan.org/pod/Regexp::Common::Markdown\n- Used by Markdown::Parser\n\no Term::ANSIEncode:\n- A markup language to generate basic ANSI text\n- https://metacpan.org/dist/Term-ANSIEncode\n\no Text::HTML::Turndown:\n- Convert HTML to Markdown\n- https://metacpan.org/dist/Text-HTML-Turndown\n\no Text::Markdown:\n- Convert Markdown syntax to (X)HTML. Buggy\n- https://metacpan.org/pod/Text::Markdown\n\no Text::Markdown::Discount:\n- Fast function for converting markdown to HTML (requires C compiler)\n- https://metacpan.org/dist/Text-Markdown-Discount\n\no Text::Markup:\n- Parse text markup into HTML\n- https://metacpan.org/pod/Text::Markup\n- This distribution includes support for 15 markup formats\n\no Ultraedit essay:\n- Markdown is a plain text formatting syntax aimed at making writing for the internet easier\n- https://blog.ultraedit.com/what-is-markdown-why-use-it/\n",
        "title": "MarkdownHandling",
        "modified": "20250714074615273"
    },
    {
        "created": "20190721054728578",
        "text": "\"\"\"\no See also:\n- Libmarpa-specific terms - http://jeffreykegler.github.io/Marpa-web-site/libmarpa_api/latest/index.html\n\no Backlog for IRC channel #marpa:\n- https://colabti.org/irclogger/irclogger_log/marpa\n\no GraphViz2:\n- A wrapper for AT&T's Graphviz\n- https://metacpan.org/dist/GraphViz2\n\no GraphViz2::Marpa:\n- A Marpa-based parser for Graphviz dot files\n- https://metacpan.org/dist/GraphViz2-Marpa\n\no GraphViz2::Marpa::PathUtils:\n- Provide various analyses of Graphviz dot files\n- https://metacpan.org/dist/GraphViz2-Marpa-PathUtils\n\no JSON::Pointer::Marpa:\n- Marpa::R2 based JSON Pointer RFC6901 implementation\n- https://metacpan.org/dist/JSON-Pointer-Marpa\n- https://www.rfc-editor.org/rfc/rfc6901\n- JSON Pointer identifies a specified value within a JSON document, and is similar to XPath. Please read both specifications for details\n- See https://metacpan.org/pod/JSON::Pointer for details\n\no Marpa::R2:\n- Release 2 of Marpa\n- https://metacpan.org/pod/Marpa::R2\n\no MarpaX::Grammar::GraphViz2:\n- Convert a Marpa grammar into an image\n- https://metacpan.org/dist/MarpaX-Grammar-GraphViz2\n\no MarpaX::Grammar::Parser:\n- Converts a Marpa grammar into a tree using Tree::DAG_Node\n- https://metacpan.org/dist/MarpaX-Grammar-Parser\n\no MarpaX::Languages::Dash:\n- A Marpa-based parser for the DASH language\n- https://metacpan.org/dist/MarpaX-Languages-Dash\n\no MarpaX::Languages::SVG::Parser:\n- A nested SVG parser, using XML::SAX and Marpa::R2\n- https://metacpan.org/dist/MarpaX-Languages-SVG-Parser\n\no Unicode bracketing:\n- https://www.unicode.org/notes/tn39/\n- https://www.unicode.org/reports/tr9/tr9-44.html#Paired_Brackets\n\no Updating the faq:\n- Edit /home/ron/savage.net.au/Perl-modules/html/marpa.faq\n- Upload that file to http://savage.net.au/Perl-modules/html/marpa.faq/\n",
        "title": "Marpa",
        "modified": "20250714230650949"
    },
    {
        "text": "\"\"\"\no See also:\n- [[DFA]]\n\no Alien::Bit:\n- Find or install the Bit library\n- https://metacpan.org/dist/Alien-Bit\n\no App::GUI::Harmonograph:\n- Sculpting beautiful circular drawings\n- https://metacpan.org/pod/App::GUI::Harmonograph\n\no App::GUI::Juliagraph:\n- Drawing Mandelbrot and Julia fractals\n- https://metacpan.org/pod/App::GUI::Juliagraph\n\no Bijection:\n- Bijection of an integer\n- https://metacpan.org/dist/Bijection\n\no Bijection::XS:\n- Bijection of an integer faster\n- https://metacpan.org/dist/Bijection-XS\n\no Math::AnyNum:\n- Arbitrary size precision for integers, rationals, floating-points and complex numbers\n- https://metacpan.org/dist/Math-AnyNum\n\no Math::Basic:\n- Basic math\n- https://metacpan.org/dist/Math-Basic\n\no Math::Basic::XS:\n- The great new Math::Basic::XS!\n- https://metacpan.org/dist/Math-Basic-XS\n\no Math::BigInt:\n- Arbitrary size integer math package\n- https://metacpan.org/dist/Math-BigInt\n- Contains Math::BigFloat and Math::BigRat etc\n\no Math::BigInt::BitVect:\n- A math backend library based on Bit::Vector\n- https://metacpan.org/dist/Math-BigInt-BitVect\n\no Math::BigInt::FastCalc:\n- Math::BigInt::Calc with some XS for more speed\n- https://metacpan.org/dist/Math-BigInt-FastCalc\n\no Math::BigInt::GMP:\n- Backend library for Math::BigInt etc. based on GMP\n- https://metacpan.org/dist/Math-BigInt-GMP\n\no Math::BigInt::GMPz:\n- A math backend library based on Math::GMPz\n- https://metacpan.org/dist/Math-BigInt-GMPz\n\no Math::BigInt::Lite:\n- What Math::BigInts are before they become big\n- https://metacpan.org/dist/Math-BigInt-Lite\n\no Math::BigInt::Pari:\n- A math backend library based on Math::Pari\n- https://metacpan.org/dist/Math-BigInt-Pari\n\no Math::Cephes:\n- Perl interface to the cephes math library\n- https://metacpan.org/dist/Math-Cephes\n\no Math::GMatrix:\n- Extension of Math::Matrix for (2D graphics-)vector manipulation\n- https://metacpan.org/pod/Math::GMatrix\n\no Math::GMPq:\n- Perl interface to the GMP library's rational (mpq) functions\n- https://metacpan.org/dist/Math-GMPq\n\no Math::GMPz:\n- Perl interface to the GMP library's integer (mpz) functions\n- https://metacpan.org/dist/Math-GMPz\n\no Math::GSL::Alien:\n- Easy installation of the GSL library\n- https://metacpan.org/pod/Math::GSL::Alien\n- GSL means Gnu Scientific Library\n- It has a See Also section\n\no Math::Interpolator:\n- Interpolate between lazily-evaluated points\n- https://metacpan.org/dist/Math-Interpolator\n\no Math::MPFR:\n- Perl interface to the MPFR (floating point) library.\n- https://metacpan.org/dist/Math-MPFR\n\no Math::NLopt:\n- Math::NLopt - Perl interface to the NLopt optimization library\n- https://metacpan.org/pod/Math::NLopt\n\no Math::Pari:\n- Perl interface to PARI\n- https://metacpan.org/dist/Math-Pari\n\no Math::Permutation:\n- Pure Perl implementation of functions related to the permutations\n- https://metacpan.org/dist/Math-Permutation\n\no Math::PlanePath:\n- Points on a path through the 2-D plane\n- https://metacpan.org/pod/Math::PlanePath\n\no Math::Polygon:\n- Class for maintaining polygon data\n- https://metacpan.org/dist/Math-Polygon\n\no Math::Polynomial:\n- Perl class for polynomials in one variable\n- https://metacpan.org/pod/Math::Polynomial\n\no Math::Polynomial::Solve:\n- Find the roots of polynomial equations\n- https://metacpan.org/pod/Math::Polynomial::Solve\n\no Math::Symbolic:\n- Symbolic calculations\n- https://metacpan.org/pod/Math::Symbolic\n- This module comes with a huge list of modules\n\no Math::Symbolic::Custom::Factor:\n- Re-arrange a Math::Symbolic expression into a product of factors\n- https://metacpan.org/dist/Math-Symbolic-Custom-Factor\n\no Math::Symbolic::Custom::Collect:\n- Collect up Math::Symbolic expressions\n- https://metacpan.org/pod/Math::Symbolic::Custom::Collect\n\no Math::Symbolic::Custom::CollectSimplify:\n- Simplify Math::Symbolic expressions using Math::Symbolic::Custom::Collect\n- https://metacpan.org/dist/Math-Symbolic-Custom-CollectSimplify\n\no Math::Symbolic::Custom::Equation:\n- Work with equations of Math::Symbolic expressions\n- https://metacpan.org/dist/Math-Symbolic-Custom-Equation\n\no Math::Symbolic::Custom::Matrix:\n- Matrix routines for Math::Symbolic\n- https://metacpan.org/dist/Math-Symbolic-Custom-Matrix\n\no Math::Symbolic::Custom::Polynomial:\n- Polynomial routines for Math::Symbolic\n- https://metacpan.org/pod/Math::Symbolic::Custom::Polynomial\n\no Math::Symbolic::Custom::ToShorterString:\n- Shorter string representations of Math::Symbolic trees\n- https://metacpan.org/dist/Math-Symbolic-Custom-ToShorterString\n\no Math::Symbolic::Custom::ToTallString:\n- Pretty-print Math::Symbolic expressions\n- https://metacpan.org/dist/Math-Symbolic-Custom-ToTallString\n\no Number::Equation:\n- Track how a number is calculated progammatically\n- https://metacpan.org/pod/Number::Equation\n\no Number::Equation::XS:\n- Track how a number is calculated progammatically\n- https://metacpan.org/dist/Number-Equation-XS\n\no Number::Fraction:\n- Perl extension to model fractions\n- https://metacpan.org/dist/Number-Fraction\n\no Qhull:\n- Interface to the Qhull convex hull, Delauny triangulation, Voronoi diagram software suite\n- https://metacpan.org/dist/Qhull\n\no smallnum:\n- Transparent \"SmallNumber\" support for Perl\n- https://metacpan.org/pod/smallnum\n\no smallnum::XS:\n- Faster transparent \"SmallNumber\" support for Perl\n- https://metacpan.org/dist/smallnum-XS\n",
        "title": "MathsLibraries",
        "modified": "20250713023117258",
        "created": "20240718065748564"
    },
    {
        "text": "\"\"\"\no Devel::Cover:\n- Code coverage metrics for Perl\n- https://metacpan.org/dist/Devel-Cover\n\no InfluxDB, Telegraf, and Grafana are three popular open-source tools that are often used together to create a comprehensive monitoring and observability stack for various types of data, especially time-series data. They are all projects of InfluxData or have strong ties to the company.\n- These get a mention because they are part of the CPAN Testers reporting platform\n- https://www.influxdata.com/blog/infrastructure-monitoring-basics-telegraf-influxdb-grafana/#:~:text=\n- https://www.purestorage.com/au/knowledge/what-is-a-time-series-database.html\n\no Lab::Measurement::Manual:\n- API documentation manual for Lab::Measurement\n- https://metacpan.org/dist/Lab-Measurement\n- Lab::Measurement is a huge package with support for many types of hardware\n\no Metrics::Any:\n- https://metacpan.org/dist/Metrics-Any\n\no Measure::Everything:\n- Similar to the above\n\no Linux::Statm::Tiny:\n- Simple access to Linux /proc/../statm\n- https://metacpan.org/pod/Linux::Statm::Tiny\n\no Net::Statsd::Tiny:\n- A tiny StatsD client that supports multimetric packets\n- https://metacpan.org/dist/Net-Statsd-Tiny\n\no Net::Statsd::Tiny:\n- A lightweight StatsD client that supports multimetric packets\n- https://metacpan.org/dist/Net-Statsd-Lite\n\no Perl::Metrics::Halstead:\n- Compute Halstead complexity metrics\n- https://metacpan.org/dist/Perl-Metrics-Halstead\n- https://ology.github.io/2019/03/19/halstead-software-complexity-of-perl-code/\n\no For reporting metrics to one specific target collector, there are specific modules:\n- prometheus has Prometheus::Tiny, Net::Prometheus\n- statsd has Net::Statsd, Net::Async::Statsd\n- StatsD Metrics Export Specification v0.1\n- https://github.com/b/statsd_spec\n- Used by Net::Statsd::*\n\no SlapbirdAPM::Agent::Dancer2:\n- The SlapbirdAPM user-agent for Dancer2 applications\n- https://metacpan.org/dist/SlapbirdAPM-Agent-Dancer2\n- Also available for Mojo and Plack\n- See also https://www.slapbirdapm.com/\n\no Time::Progress:\n- Elapsed and estimated finish time reporting\n- https://metacpan.org/dist/Time-Progress\n",
        "title": "MeasureMetrics",
        "modified": "20250528015630831",
        "created": "20230710032830765"
    },
    {
        "text": "\"\"\"\no Linux::Smaps::Tiny\n- See also Linux::Smaps\n\no File::Map:\n- Memory mapping made simple and safe\n",
        "title": "MemoryUsage",
        "modified": "20230410235037063",
        "created": "20211021063633606"
    },
    {
        "text": "\"\"\"\no MIDI::RtController:\n- Control your MIDI controller\n- https://metacpan.org/dist/MIDI-RtController\n\no MIDI::RtController::Filter::CC:\n- Control-change based RtController filters\n- https://metacpan.org/dist/MIDI-RtController-Filter-CC\n\no Types::MIDI:\n- Type library for MIDI\n",
        "title": "MidiControllers",
        "modified": "20250525235256851",
        "created": "20250308064018243"
    },
    {
        "text": "\"\"\"\no HTML should look like:\n&lt;head>\n&lt;meta charset=\"UTF-8\">\n&lt;meta content=\"width=device-width, initial-scale=1.0\" name=\"viewport\">\n&lt;title>Personal Home Page</title>\n&lt;/head>\n\no The viewport meta element, necessary for viewing web pages on mobile phones, is automatically added to the output:\n- Added when using HTML::Make::Page\n",
        "title": "MobilePhones",
        "modified": "20250323232425026",
        "created": "20230731014436363"
    },
    {
        "text": "\"\"\"\no Modern::Perl:\n- Enable all of the features of Modern Perl with one import\n- https://metacpan.org/pod/Modern::Perl\n- Usage: use Modern::Perl '2024';\n- But V 1.20250607 says: Enhance documentation to discourage this module for v5.38 and newer\n",
        "title": "ModernPerl",
        "modified": "20250608001845990",
        "created": "20240125003658398"
    },
    {
        "text": "\"\"\"\no See also:\n- ClassStuff\n- Data::Hopen in [[Graphs]]\n- TestingHelp\n\no https://metacpan.org/recent:\n- MetaCPAN's list of recent Perl module releases\n\no Aion:\n- A postmodern object system for Perl 5, such as “Mouse”, “Moose”, “Moo”, “Mo” and “M”, but with improvements\n- https://metacpan.org/dist/Aion\n\no Alien:\n- External libraries wrapped up for your viewing pleasure!\n- https://metacpan.org/pod/Alien\n\no Alien::Build:\n- Build external dependencies for use in CPAN\n- https://metacpan.org/dist/Alien-Build\n- This module contains a huge list of plugins\n\no Alien::cmake3:\n- Find or download or build cmake 3\n- https://metacpan.org/pod/Alien::cmake3\n\no App::hopen:\n- hopen build system command-line interface\n- https://metacpan.org/pod/App::hopen\n\no App::ModuleBuildTiny:\n- A standalone authoring tool for Module::Build::Tiny and Dist::Build\n- Can update version #s and push to CPAN\n- https://metacpan.org/pod/App::ModuleBuildTiny\n- See also Module::Build::Tiny\n- Leon's articles:\n- https://blogs.perl.org/users/leon_timmermans/2025/03/an-introduction-to-appmodulebuildtiny-part-1-setting-things-up.html\n- https://blogs.perl.org/users/leon_timmermans/2025/03/an-introduction-to-appmodulebuildtiny-part-2-authoring.html\n\no App::Module::Lister:\n- List the Perl modules in @INC\n- https://metacpan.org/dist/App-Module-Lister\n\no App::perlimports:\n- Make implicit imports explicit\n- https://metacpan.org/dist/App-perlimports\n\no B:\n- The Perl Compiler Backend\n- https://metacpan.org/pod/B\n- Used by ogd, below\n\no B::Keywords:\n- Lists of reserved barewords and symbol names\n- https://metacpan.org/dist/B-Keywords\n\no Blessed::Merge:\n- Merge Blessed Refs\n- https://metacpan.org/pod/Blessed::Merge\n\no BsDiPa:\n- Create or apply binary difference patch\n- https://metacpan.org/pod/BsDiPa\n\no Caller::Reverse:\n- Reverse the caller stack\n- https://metacpan.org/dist/Caller-Reverse\n\no Class::Accessor:\n- Automated accessor generation\n- https://metacpan.org/pod/Class::Accessor\n\no Class::Accessor::Fast:\n- Faster, but less expandable, accessors\n- https://metacpan.org/pod/Class::Accessor::Fast\n\no Class::Accessor::Validated:\n- Drop-in constructor validation for Class::Accessor::Fast-based classes\n- https://metacpan.org/pod/Class::Accessor::Validated\n\no DBIx::VersionedSubs:\n- All your code are belong into the DB\n- https://metacpan.org/pod/DBIx::VersionedSubs\n\no Devel::MaintBlead:\n- Handle maint / blead code paths for distributions\n- https://metacpan.org/dist/Devel-MaintBlead\n\no Devel::Required:\n- Automatic update of required modules documentation\n- https://metacpan.org/pod/Devel::Required\n\no Devel::ThreadsForks:\n- Check for availability of threads or forks\n- https://metacpan.org/dist/Devel-ThreadsForks\n\no Dist::Build:\n- A modern module builder, author tools not included!\n- https://metacpan.org/dist/Dist-Build\n- See below\n\no exact:\n- Perl pseudo pragma to enable strict, warnings, features, mro, filehandle methods\n- https://metacpan.org/pod/exact\n\no ExtUtils::Builder:\n- An overview of the foundations of the ExtUtils::Builder Plan framework\n- https://metacpan.org/dist/ExtUtils-Builder\n\no ExtUtils::Builder::Compiler:\n- An interface around different compilers\n- https://metacpan.org/dist/ExtUtils-Builder-Compiler\n\no ExtUtils::Depends:\n- Easily build XS extensions that depend on XS extensions\n- https://metacpan.org/dist/ExtUtils-Depends\n\no ExtUtils::Helpers:\n- Various portability utilities for module builders\n- https://metacpan.org/pod/ExtUtils::Helpers\n\no ExtUtils::ParseXS:\n- Converts Perl XS code into C code\n- https://metacpan.org/dist/ExtUtils-ParseXS\n\no ExtUtils::Typemaps::Magic:\n- Typemap for storing objects in magic\n- https://metacpan.org/dist/ExtUtils-Typemaps-Magic\n- See also Variable::Magic below\n\no ExtUtils::Typemaps::Misc:\n- A collection of miscelaneous typemap templates\n- https://metacpan.org/dist/ExtUtils-Typemaps-Misc\n\no Factory::Sub:\n- Generate a factory of subs\n- https://metacpan.org/dist/Factory-Sub\n\no Hades:\n- Less is more, more is less!\n- https://metacpan.org/pod/Hades\n\no Hades::Realm::Exporter:\n- Hades realm for Exporter\n- https://metacpan.org/dist/Hades-Realm-Exporter\n\no Hades::Realm::Import::Export:\n- Hades realm for Import::Export\n- https://metacpan.org/dist/Hades-Realm-Import-Export\n\no Install without using CPAN:\n- https://medium.com/@mayurkoshti12/install-perl-module-without-cpan-2fe935f3a45a\n\no LaunchDarkly::Server:\n- Perl server side SDK for LaunchDarkly, a fancy release manager\n- https://metacpan.org/pod/LaunchDarkly::Server\n- See https://launchdarkly.com/docs/sdk/server-side/c-c--\n\no  Minilla:\n- CPAN module authoring tool\n- https://metacpan.org/dist/Minilla\n- Contains Minilla::Tutorial\n\no Mite:\n- Moose-like OO, fast to load, with zero dependencies\n- https://metacpan.org/pod/Mite\n- Demo: https://metacpan.org/dist/Acme-Mitey-Cards\n\no Module::Build::Tiny:\n- Looks good\n- But for authoring, use App::ModuleBuildTiny\n\no Module::Extract::VERSION:\n- Extract a module version safely\n- https://metacpan.org/pod/Module::Extract::VERSION\n\no Module::Generate:\n- Assist with module generation\n- https://metacpan.org/pod/Module::Generate\n\no Module::Generic:\n- Generic Module to inherit from\n- https://metacpan.org/dist/Module-Generic\n\no Module::List:\n- Module 'directory' listing\n- https://metacpan.org/pod/Module::List\n- The POD helpfully contains a long list of similar modules\n\no Module::Patch:\n- Patch package with a set of patches\n- https://metacpan.org/pod/Module::Patch\n\no Module::Runtime:\n- Runtime module handling\n- https://metacpan.org/dist/Module-Runtime\n\no Module::Signature:\n- Module signature file manipulation\n- https://metacpan.org/dist/Module-Signature\n- See also Test::Signature in TestingHelp\n\no Module::Starter::AddModule:\n- Add a new module to a distribution\n\no MooX::LazierAttributes:\n- Lazier Attributes\n- https://metacpan.org/dist/MooX-LazierAttributes\n\no MooX::Private::Attribute:\n- Private attributes\n- https://metacpan.org/pod/MooX::Private::Attribute\n\no Nefarious:\n- Wicked or criminal objects\n- https://metacpan.org/pod/Nefarious\n\no Object::Configure:\n- Runtime Configuration for an Object\n- https://metacpan.org/dist/Object-Configure\n- Was called Class::Debug\n\no ODS:\n- Object Data Store\n- https://metacpan.org/pod/ODS\n\no ogd:\n- Ordered global destruction\n- https://metacpan.org/pod/ogd\n\no Package::Subroutine:\n- Minimalistic import/export and other util methods\n- https://metacpan.org/pod/Package::Subroutine\n\no PAR::Packer:\n- PAR Packager\n- https://metacpan.org/dist/PAR-Packer\n\no Perl::APIReference:\n- Programmatically query the perlapi\n- https://metacpan.org/dist/Perl-APIReference\n\no PPI::Dumper:\n- Dumping of PDOM trees\n- https://metacpan.org/pod/PPI::Dumper\n\no Role::Basic:\n- Just roles. Nothing else\n- https://metacpan.org/pod/Role::Basic\n\no Simple::Tuple:\n- Because tuples should be simple and simple to use!\n- https://metacpan.org/pod/Simple::Tuple\n\no SourceCode::LineCounter::Perl:\n- Count lines in Perl source code\n- https://metacpan.org/dist/SourceCode-LineCounter-Perl\n\no Subclass::Of:\n- Import a magic subclass\n- https://metacpan.org/pod/Subclass::Of\n\no URI::PackageURL:\n- Perl extension for Package URL (aka \"purl\")\n- https://metacpan.org/pod/URI::PackageURL\n\no Variable::Magic:\n- https://metacpan.org/pod/Variable::Magic\n- Magic is Perl's way of enhancing variables\n- This mechanism lets the user add extra data to any variable and hook syntactical operations (such as access, assignment or destruction) that can be applied to it\n- With this module, you can add your own magic to any variable without having to write a single line of XS\n- See also ExtUtils::Typemaps::Magic above\n\no Xerarch:\n- Introspection of the package\n- List all methods, scalars, arrays, hashes and globs\n- https://metacpan.org/pod/Xerarch\n\no XS::Framework:\n- Framework for building C++ XS modules with shared code, typemaps and C++ perl API\n- https://metacpan.org/pod/XS::Framework\n\no XS::Install:\n- ExtUtils::MakeMaker based module installer for XS modules\n- https://metacpan.org/pod/XS::Install\n\no XS::Manifesto:\n- Shared XS modules manifesto\n- https://metacpan.org/pod/XS::Manifesto\n\no YAOO:\n- Yet Another Object Orientation\n- https://metacpan.org/pod/YAOO\n",
        "title": "ModuleBuilding",
        "modified": "20250713230400518",
        "created": "20240131042910771"
    },
    {
        "text": "\"\"\"\no Commandable:\n- Utilities for commandline-based programs\n- Note that \"commandline\" does not necessarily mean \"plain-text running in a terminal\"\n- https://metacpan.org/pod/Commandable\n\no Keyword::Pluggable\n- Define new keywords in pure Perl\n- https://metacpan.org/dist/Keyword-Pluggable\n\no Module::Pluggable:\n- Automatically give your module the ability to have plugins\n- https://metacpan.org/dist/Module-Pluggable\n\no next::XS:\n- Replacement for next::method, performing very fast, and super::method (next-by-mro), with Perl and C++ interface\n- https://metacpan.org/dist/next-XS\n",
        "title": "ModulePlugins",
        "modified": "20250714022125718",
        "created": "20211011011757415"
    },
    {
        "text": "\"\"\"\no LyricFinder:\n- Fetch song lyrics from several internet lyric sites\n- https://metacpan.org/dist/LyricFinder\n",
        "title": "MusicStuff",
        "modified": "20250414020133387",
        "created": "20250226224942241"
    },
    {
        "text": "\"\"\"\no See also:\n- EmailStuff\n- IpAddresses\n- MailingLists\n- PacketCapture\n- [[SSH]]\n\no https://blog.urth.org/2021/03/29/security-issues-in-perl-ip-address-distros/\n\no App::Netdisco:\n- An open source web-based network management tool\n- https://metacpan.org/pod/App::Netdisco\n\no App::NetdiscoX::Web::Plugin::Observium:\n- Port Traffic Links and Thumbnail Graphs from Observium\n- https://metacpan.org/pod/App::NetdiscoX::Web::Plugin::Observium\n\no App::ReslirpTunnel:\n- A wrapper for the reslirp-tunnel application over SSH for remote connections\n- https://metacpan.org/dist/App-ReslirpTunnel\n\no Check::NetworkSpans:\n- See if bidirectional traffic is being seen on spans\n- https://metacpan.org/dist/Check-NetworkSpans\n\no Control::CLI:\n- Command Line Interface I/O over either Telnet or SSH (IPv4 & IPv6) or Serial port\n- https://metacpan.org/dist/Control-CLI\n\no Control::CLI::Extreme:\n- Interact with CLI of Extreme Networking products over any of Telnet, SSH or Serial port\n- https://metacpan.org/dist/Control-CLI-Extreme\n\no grepcidr:\n- Filter IPv4 and IPv6 addresses matching CIDR patterns\n- https://www.pc-tools.net/unix/grepcidr/\n- See Acronyms\n\no libnet:\n- This is a collection of perl5 modules which all related to network programming. The majority of the modules available provide the client side of popular server-client protocols\n- https://metacpan.org/dist/libnet\n- Includes:\n- libnetFAQ - https://metacpan.org/dist/libnet/view/lib/Net/libnetFAQ.pod\n<pre>\nNet::Cmd - Network Command class (as used by FTP, SMTP etc)\nNet::Config - Local configuration data for libnet\nNet::Domain - Attempt to evaluate the current host's internet name and domain\nNet::FTP  - FTP Client class\nNet::FTP::dataconn - FTP Client data connection class\nNet::NNTP - NNTP Client class\nNet::Netrc - OO interface to users netrc file\nNet::POP3 - Post Office Protocol 3 Client class (RFC1939)\nNet::SMTP - Simple Mail Transfer Protocol Client\nNet::Time - time and daytime network client interface\n</pre>\n- See also Net::LMTP2 - A client class for the LMTP protocol which claims to fix Net::SMTP\n\no ipgrep:\n- Grep files by CIDR\n\no Mnet:\n- Modules are for perl programmers who want to create testable network automation and/or reporting scripts as simply as possible\n\no Net::CIDR::Lite:\n- https://perladvent.org/2022/2022-12-17.html\n\no Net::CIDR::Set:\n- Manipulate sets of IP addresses\n- https://metacpan.org/dist/Net-CIDR-Set\n\no Net::IP:\n- Perl extension for manipulating IPv4/IPv6 addresses\n- https://metacpan.org/pod/Net::IP\n\no Net::IP::XS:\n- IPv4/IPv6 address library\n- https://metacpan.org/dist/Net-IP-XS\n\no Net::Netmask:\n- Parse, manipulate and lookup IP network blocks\n- https://metacpan.org/dist/Net-Netmask\n\no Net::UPnP:\n- Perl extension for UPnP\n- https://metacpan.org/dist/Net-UPnP\n\no Net::Versa::Director:\n- Versa Director REST API client library\n- https://metacpan.org/pod/Net::Versa::Director\n\no socat\n- Socat is a command line based utility that establishes two bidirectional byte streams and transfers data between them\n- https://github.polettix.it/ETOOBUSY/2022/03/22/socat-local-to-remote-port/\n\no Webservice::InternetDB::API:\n- Fast IP Lookups for Open Ports and Vulnerabilities using InternetDB API\n- https://metacpan.org/pod/Webservice::InternetDB::API\n- Uses https://internetdb.shodan.io/\n- Refers to https://www.freepublicapis.com/\n",
        "title": "NetworkProgramming",
        "modified": "20250713230633868",
        "created": "20201210004901736"
    },
    {
        "text": "\"\"\"\no PERLANCAR maintains a list of new modules per month:\n- https://perlancar.wordpress.com/2024/05/01/list-of-new-cpan-distributions-apr-2024/\n",
        "title": "NewModules",
        "modified": "20240507020037738",
        "created": "20240507015954915"
    },
    {
        "text": "\"\"\"\no See also:\n- ArrayHandling\n- [[XS]]\n\no equ and === operators that distinguish undef from empty/zero:\n- Operators similar to eq and ==, except that they are aware that undef is distinct from the empty string or the number zero and don't compare the same. Useful combined with match/case.\n- https://metacpan.org/pod/Syntax::Operator::Equ\n\no elem and similar operators, and the `in` meta-operator:\n- Allows you to easily ask the question \"does this string appear in that set of strings?\" or similar for numbers. Useful combined with match/case\n- https://metacpan.org/pod/Syntax::Operator::Elem\n- Samples:\n- $x elem @strings   # is a stringy comparison\n- $x ∈ @numbers    # is a numbery comparison\n- https://metacpan.org/pod/Syntax::Operator::In\n- $x in:isa @classes\n\no List::Keywords:\n- A selection of list utility keywords\n- https://metacpan.org/pod/List::Keywords\n- first, all, any, none, notall, reduce, reductions, ngrep, nmap\n\no Safe::Isa:\n- Call isa, can, does and DOES safely on things that may not be objects\n- https://metacpan.org/pod/Safe::Isa\n\no Syntax::Feature::Loop:\n- Provides the loop BLOCK syntax for unconditional loops\n- https://metacpan.org/dist/Syntax-Feature-Loop\n\no Syntax::Feature::QwComments:\n- Pragma to allow comments in qw()\n- https://metacpan.org/dist/Syntax-Feature-QwComments\n\no Syntax::Feature::Void:\n- Provides the void operator to force void context\n- https://metacpan.org/dist/Syntax-Feature-Void\n\no Syntax::Operator::Elem:\n- Element-of-list operators\n- https://metacpan.org/pod/Syntax::Operator::Elem\n- Samples:\n- $s elem @strs       # like  any { $s eq $_ } @strs\n- $n ∈ @nums          # like  any { $n == $_ } @nums\n- Yes, this is a UTF-8 named operator. No I will not apologise\n\no Syntax::Operator::Equ:\n- Equality operators that distinguish undef\n- https://metacpan.org/pod/Syntax::Operator::Equ\n- $str equ $str        # like eq but cares about undef\n- $num === $num  # like == but cares about undef\n\no Syntax::Operator::Is:\n- Match operator using Data::Checks constraints\n- https://metacpan.org/dist/Syntax-Operator-Is\n\no Syntax::Operator::Zip:\n- Infix operator to compose two lists together\n- https://metacpan.org/pod/Syntax::Operator::Zip\n- @list Z @list       # like List::Util::zip but faster\n- @list M @list       # like List::Util::mesh but faster\n\no XS::Parse::Infix:\n- This module is the one that powers my entire Syntax::Operator::* namespace of modules\n- https://metacpan.org/pod/XS::Parse::Infix\n",
        "title": "NewOperators",
        "modified": "20250714025240886",
        "created": "20221015000008401"
    },
    {
        "text": "\"\"\"\no See also:\n- SpreadsheetStuff\n\no App::OfficeUtils:\n- Utilities related to Office suite files (.doc, .docx, .odt, .xls, .xlsx, .ods, etc)\n\no AsposeCellsCloud::CellsApi:\n- This is a cloud-based service provided by Aspose that allows developers to process and manipulate spreadsheet documents (like Microsoft Excel, OpenDocument Spreadsheet, CSV, etc.) without needing Microsoft Office installed\n- https://metacpan.org/dist/AsposeCellsCloud-CellsApi\n\no AsposeSlidesCloud::SlidesApi:\n- No description\n- https://metacpan.org/dist/AsposeSlidesCloud-SlidesApi\n\no Document::OOXML:\n- Manipulation of Open Office XML files\n- https://metacpan.org/pod/Document::OOXML\n- Similar to MsOffice::Word::Surgeon\n\no MsOffice::Word::Surgeon:\n- Tamper with the guts of Microsoft docx documents, with regexes\n- For .doc: Text::Extract::Word\n- For .docx: https://blogs.perl.org/users/c_y_fung/2023/03/textextractword-msofficewordsurgeon---weekly-travelling-in-cpan.html\n- POD contains an important See Also\n\no MsOffice::Word::Template:\n- Generate Microsoft Word documents from Word templates\n- https://metacpan.org/pod/MsOffice::Word::Template\n",
        "title": "OfficeFiles",
        "modified": "20250714022052872",
        "created": "20200825052941946"
    },
    {
        "text": "\"\"\"\no See also:\n- http://graphcomp.com/\n- Graphcomp is dedicated to the capture, processing, transport and rendering of online multimedia\n- Documentation, tips, sample source, benchmarks and available at http://graphcomp.com/opengl\n\no OpenGL:\n- v0.70\n- https://metacpan.org/dist/OpenGL\n- Contains OpenGL::Array and OpenGL::Tessellation\n\no OpenGL::GLFW:\n- Perl bindings for the GLFW library\n- https://metacpan.org/dist/OpenGL-GLFW\n\no OpenGL::GLUT:\n- Perl bindings to GLUT/FreeGLUT GUI toolkit\n- https://metacpan.org/dist/OpenGL-GLUT\n\no OpenGL::Modern:\n- Perl extension to Modern OpenGL API up to 4.5\n- Perl OpenGL (POGL) and Perl OpenGL::Modern (POGL2) development share common resources. At some point OpenGL::Modern will replace the legacy OpenGL implementation. Together they are referred to as POGL\n",
        "title": "OpenGL",
        "modified": "20250528020019359",
        "created": "20250310050934287"
    },
    {
        "text": "\"\"\"\no https://ogp.me/:\n- The Open Graph protocol enables any web page to become a rich object in a social graph\n\no Web::PageMeta:\n- Get page open-graph / meta data\n",
        "title": "OpenGraphProtocol",
        "modified": "20240905030017423",
        "created": "20240905025837214"
    },
    {
        "text": "\"\"\"\no See also:\n- My home page http://savage.net.au/index.html for the Mojolicious Wiki\n\no OpenTelemetry:\n- A Perl implementation of the OpenTelemetry standard\n- https://metacpan.org/dist/OpenTelemetry\n- See also https://opentelemetry.io/\n\no OpenTelemetry::Exporter::OTLP:\n- An OpenTelemetry Protocol exporter\n- https://metacpan.org/dist/OpenTelemetry-Exporter-OTLP\n\no OpenTelemetry::SDK:\n- An implementation of the OpenTelemetry SDK for Perl\n- https://metacpan.org/dist/OpenTelemetry-SDK\n",
        "title": "OpenTelemetry",
        "modified": "20250528020208070",
        "created": "20250406000436577"
    },
    {
        "text": "\"\"\"\no App::orgadb:\n- An opinionated Org addressbook toolset\n- https://metacpan.org/pod/App::orgadb\n\no App::OrgUtils:\n- Some utilities for Org documents\n- https://metacpan.org/dist/App-OrgUtils\n\no Org::Parser:\n- Parse Org documents\n- https://metacpan.org/dist/Org-Parser\n\no OrgINI:\n- OrgINI file format specification\n- https://metacpan.org/pod/OrgINI\n",
        "title": "OrgDocHandling",
        "modified": "20250619062550320",
        "created": "20230712062003202"
    },
    {
        "text": "\"\"\"\no Linux oriented stuff:\n- Linux::Info - API in Perl to recover information about the running Linux OS\n\no User::Information:\n- Generic module for extracting information from user accounts\n- https://metacpan.org/pod/User::Information\n",
        "title": "OsStuff",
        "modified": "20250513215244429",
        "created": "20240527014216754"
    },
    {
        "text": "\"\"\"\no See also:\n- EmailStuff\n- MailingLists\n- NetworkProgramming\n\no File::PCAP:\n- A pure Perl library to handle libpcap based files\n- https://metacpan.org/dist/File-PCAP\n\no Image::ExifTool::PCAP\n- Read CAP, PCAP and PCAPNG Packet Capture files\n- https://metacpan.org/dist/Image-ExifTool\n\no Metabrik::Forensic::Pcap:\n- forensic::pcap Brik\n- This is part of the vast Metabrik repo https://metacpan.org/dist/Metabrik-Repository\n\no Net::Inspect:\n- Library for inspection of data on various network layers\n- https://metacpan.org/dist/Net-Inspect\n\no Net::Pcap:\n- Interface to the pcap(3) LBL packet capture library\n- https://metacpan.org/dist/Net-Pcap\n\no Net::Pcap::Easy:\n- Net::Pcap is awesome, but it's difficult to bootstrap\n- https://metacpan.org/dist/Net-Pcap-Easy\n\no Sniffer::HTTP:\n- Multi-connection sniffer driver\n- https://metacpan.org/dist/Sniffer-HTTP\n",
        "title": "PacketCapture",
        "modified": "20250528020252380",
        "created": "20250315235218430"
    },
    {
        "text": "\"\"\"\no See also:\n- ChildProcesses\n- CloneStuff\n- EnterpriseApps\n- EventStuff\n- [[HTTPHandling]]\n- [[HTTPServers]]\n- [[IO]]\n\no Coro:\n- The only real threads in perl\n- https://metacpan.org/pod/Coro\n\no Coro::LWP:\n- Make LWP non-blocking - as much as possible\n- https://metacpan.org/pod/Coro::LWP\n- The pod discusses AnyEvent::HTTP, AnyEvent::HTTP::LWP::UserAgent, LWP::Protocol::AnyEvent::http, LWP::Protocol::Coro::http\n\no Coro::Multicore:\n- Make coro threads on multiple cores with specially supported modules\n- https://metacpan.org/pod/Coro::Multicore\n- This module uses AnyEvent and Coro\n\no Coro::Select:\n- A (slow but coro-aware) replacement for CORE::select\n- https://metacpan.org/pod/Coro::Select\n\no Data::Fetch:\n- Prime method calls for background execution using threads\n- https://metacpan.org/dist/Data-Fetch\n\no IO::Async:\n- Asynchronous event-driven programming\n- https://metacpan.org/dist/IO-Async\n- This module has an interesting list of modules in See Also\n\no IO::Async::Loop::Epoll:\n- Use IO::Async with epoll on Linux\n- https://metacpan.org/pod/IO::Async::Loop::Epoll\n\no IO::Async::Loop::Epoll::FD:\n- Use IO::Async with Epoll and special filehandles\n= https://metacpan.org/pod/IO::Async::Loop::Epoll::FD\n\no IO::Async::Process:\n- Start and manage a child process\n- https://metacpan.org/pod/IO::Async::Process\n\no IPC::ReadpipeX\n- Also, see Also within that module's POD\n- https://metacpan.org/dist/IPC-ReadpipeX\n\no IPC::Run3:\n- Run a subprocess with input/output redirection\n- https://metacpan.org/pod/IPC::Run3\n\no  IPC::System::Options:\n- Perl's system(), readpipe()/qx, IPC::Run's run(), start() (with more options)\n- https://metacpan.org/dist/IPC-System-Options\n\no IPC::System::Simple:\n- Run commands simply, with detailed diagnostics\n- https://metacpan.org/pod/IPC::System::Simple\n\no MCE:\n- Many-Core Engine for Perl providing parallel processing capabilities\n- https://metacpan.org/dist/MCE\n\no Net::Waiter:\n- Compact INET socket server\n- https://metacpan.org/pod/Net::Waiter\n\no Parallel::Iterator:\n- Simple parallel execution\n- https://metacpan.org/pod/Parallel::Iterator\n\no Parallel::Pipes:\n- Parallel processing using pipe(2) for communication and synchronization\n- https://metacpan.org/dist/Parallel-Pipes\n- Contains Parallel::Pipes::App\n\no Parallel::WorkUnit:\n- Provide multi-paradigm forking with ability to pass back data\n- https://metacpan.org/dist/Parallel-WorkUnit/view/README.pod\n- There are many other Parallel::* modules on CPAN\n\no POE::Loop::EV:\n- A bridge that supports EV from POE\n- https://metacpan.org/dist/POE-Loop-EV\n\no POSIX::AtFork:\n- Hook registrations at fork(2)\n- https://metacpan.org/pod/POSIX::AtFork\n\no prefork:\n- Optimized module loading for forking or non-forking processes\n- https://metacpan.org/pod/prefork\n\no Protocol::DBus:\n- D-Bus in pure Perl\n- https://metacpan.org/dist/Protocol-DBus\n- Includes Protocol::DBus::Client::Mojo, among others\n- See also https://dbus.freedesktop.org/doc/dbus-specification.html\n\no Thread::Bless:\n- Make blessed objects thread-aware\n- https://metacpan.org/dist/Thread-Bless\n\no Thread::Conveyor:\n- Transport of any data-structure between threads\n- https://metacpan.org/pod/Thread::Conveyor\n\no Thread::Conveyor::Monitored:\n- Monitor a belt for specific content\n- https://metacpan.org/dist/Thread-Conveyor-Monitored\n\no Thread::CSP:\n- Communicating sequential processes threading for Perl\n- https://metacpan.org/dist/Thread-CSP\n\no Thread::Deadlock:\n- Report deadlocks with stacktrace\n- https://metacpan.org/dist/Thread-Deadlock\n\no Thread::Exit:\n- Provide thread-local exit(), BEGIN {}, END {} and exited()\n- https://metacpan.org/dist/Thread-Exit\n\no Thread::Needs:\n- Remove unneeded modules from CLONEd memory\n- https://metacpan.org/dist/Thread-Needs\n\no Thread::Pool:\n- Group of threads for performing similar jobs\n- https://metacpan.org/pod/Thread::Pool\n\no Thread::Pool::Resolve:\n- Resolve logs asynchronously\n- https://metacpan.org/dist/Thread-Pool-Resolve\n\no Thread::Queue::Any:\n- Thread-safe queues for any data-structure\n- https://metacpan.org/dist/Thread-Queue-Any\n\no Thread::Queue::Any::Monitored:\n- Monitor a queue for any specific content\n- https://metacpan.org/dist/Thread-Queue-Any-Monitored\n\no Thread::Rand:\n- Repeatable random sequences between threads\n- https://metacpan.org/dist/Thread-Rand\n\no Thread::Running:\n- Provide non-blocking check whether threads are running\n- https://metacpan.org/dist/Thread-Running\n\no Thread::Serialize:\n- Serialize data-structures between threads\n- https://metacpan.org/pod/Thread::Serialize\n\no Thread::Status:\n- Report stack status of all running threads\n- https://metacpan.org/dist/Thread-Status\n\no Thread::Synchronized:\n- Synchronize subroutine calls between threads\n- https://metacpan.org/dist/Thread-Synchronized\n\no Thread::Use:\n- Use a module inside a thread only\n- https://metacpan.org/dist/Thread-Use\n\no threads::farm:\n- Group of threads for performing similar jobs\n- https://metacpan.org/dist/threads-farm\n",
        "title": "ParallelProcessing",
        "modified": "20250714035130225",
        "created": "20241211041510860"
    },
    {
        "text": "\"\"\"\no See also:\n- DataTypes\n\no Function::Parameters:\n- Define functions and methods with parameter lists (\"subroutine signatures\")\n- https://metacpan.org/pod/Function::Parameters\n\no Params::Get:\n- Get the parameters to a subroutine in any way you want\n- https://metacpan.org/pod/Params::Get\n\no Signature::Attribute::Checked:\n- Apply value constraint checks to subroutine parameters\n- https://metacpan.org/pod/Signature::Attribute::Checked\n",
        "title": "ParameterTypes",
        "modified": "20250528020405546",
        "created": "20230222070044907"
    },
    {
        "text": "\"\"\"\no analizo\n- Multi-language source code analysis toolkit\n- analizo is a suite of source code analysis tools, aimed at being language-independent and extensible\n- https://metacpan.org/pod/Analizo\n\no Analyze adjacency lists (tree data):\n- Parse::Taxonomy\n\no Lingua::Word::Parser:\n- Parse a word into scored known and unknown parts\n- https://metacpan.org/pod/Lingua::Word::Parser\n\no Parser::MGC:\n- Build simple recursive-descent parsers\n- https://metacpan.org/dist/Parser-MGC\n\no Pegex:\n- Acmeist PEG Parser Framework\n- https://metacpan.org/pod/Pegex\n\no Query::Tags:\n- Raku-inspired query language for attributes\n- https://metacpan.org/pod/Query::Tags\n\no Syntax::Kamelon:\n- A versatile and fully programmable textual content parser that is extremely well suited for syntax highlighting and code folding\n- https://metacpan.org/dist/Syntax-Kamelon\n",
        "title": "ParsingStuff",
        "modified": "20250708235723006",
        "created": "20201222052416067"
    },
    {
        "text": "\"\"\"\no Adobe PDF reference:\n- https://opensource.adobe.com/dc-acrobat-sdk-docs/pdfstandards/pdfreference1.7old.pdf\n- Versions of PDF are 1.0, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7 and now 2.0.  There was never a public release using version number 1.06 (from an email from Deven T. Corzine)\n\no Alien::PDFio:\n- Alien distribution for PDFio\n- https://metacpan.org/dist/Alien-PDFio\n- See PDFio::FFI below\n\no App::DiffPDFText:\n- Diff the text of two PDF documents\n\no App::Mxpress::PDF:\n- A utility application for generating PDFs\n- https://metacpan.org/dist/App-Mxpress-PDF\n\no App::paperback:\n- Copy and transform pages from a PDF into a new PDF\n- https://metacpan.org/pod/App::paperback\n\no App::pdfresize:\n- Resize each page of PDF file to a new dimension\n\no App::PDFUtils:\n- Command-line utilities related to PDF files\n- https://metacpan.org/dist/App-PDFUtils\n- Ships with 10 utilities\n\no CAM::PDF:\n- This package reads and writes any document that conforms to the PDF\n\no CtrlO::PDF:\n- High level PDF creator\n- https://metacpan.org/dist/CtrlO-PDF\n\no qpdf:\n- https://qpdf.sourceforge.io/\n- Here is the Git repository for qpdf: https://github.com/qpdf/qpdf\n- Documentation for qpdf is here: https://qpdf.readthedocs.io/en/stable/\n- Debian-specific notes follow. I'm using bookworm\n- libqpdf29 is installed by default for some reason\n- qpdf and qpdfview and libqpdf-dev can be installed with apt-get\n- qpfdview is a very convenient multi-doc (tabbed) viewer\n- Sample code, given x.pdf is say in v 1.6 format s output by LibreOffice:\n- qpdf --force-version=1.4 x.pdf x-1.4.pdf\n\no Google Bard says:\n<pre>Command-line options:\n\n    DiffPDF: Lightweight and simple, free and open-source. Compares text and images, highlights differences, can exclude margins and generate reports. However, lacks advanced features like layout or visual side-by-side comparison.\n    Wdiff: Text-based diff tool, often installed by default. Good for textual comparisons, but not suitable for visual layout differences.\n\nGraphical diff tools:\n\n    Kompare: Powerful diff and merge tool for various file types, including PDFs. Supports side-by-side comparison, highlights differences, visual and textual comparisons. Has a steeper learning curve compared to simpler tools.\n    Meld: Another popular diff and merge tool with side-by-side comparison, advanced filtering options, and support for directory comparisons.\n    Diffuse: Lightweight GUI diff tool specifically for PDFs. Focuses on visual comparison with side-by-side view and highlighting. Lacks advanced features of some other tools.\n\nCommercial options:\n\n    Beyond Compare: Feature-rich diff and merge tool for various file types, including PDFs. Advanced comparison modes, visual and textual differences, filtering options, report generation, etc. Paid software.\n    DiffMerge: Cross-platform diff tool with a GUI and powerful comparison engine for files and directories. Supports PDF comparison with side-by-side view, text alignment, and highlighting. Paid software.\n\nWeb-based options:\n\n    Copyleaks: Online plagiarism checker that can compare PDFs and highlight text differences. Supports multiple languages. Free trial available, then paid subscription.\n\nHere are some additional factors to consider when choosing a PDF comparison tool:\n\n    Complexity of PDFs: For simple PDFs with just text, basic tools like DiffPDF might suffice. More complex PDFs with layouts and images might require something like Kompare or DiffMerge.\n    Type of comparison: Do you need purely textual comparison, visual layout comparison, or both?\n    Advanced features: Do you need options like filtering, reporting, or merging the PDFs?\n    Budget: Some tools are free and open-source, while others are paid commercial options</pre>\n\no PDF::API2:\n- Create, modify, and examine PDF files\n- https://metacpan.org/dist/PDF-API2\n- See PDF::API2::Resource::XObject::Image::Imager for important comments about PDF::API2\n\no PDF::API2::Resource::XObject::Image::Imager:\n- Import Imager images into PDF\n- https://metacpan.org/dist/PDF-API2-Resource-XObject-Image-Imager\n\no PDF::Builder:\n- Facilitates the creation and modification of PDF files\n- https://github.polettix.it/ETOOBUSY/2022/11/07/a-pdf-workaround/\n- Use PDF::Builder via JSON config: https://codeberg.org/polettix/pdfunnel\n- See also https://www.catskilltech.com/FreeSW/product/PDF%2DBuilder/title/PDF%3A%3ABuilder/freeSW_full\n- Example code: https://www.catskilltech.com/Examples/PDF/Builder.html\n\no PDF::Collage:\n- Layer stuff, e.g. SVG images, over PDFs\n- https://github.polettix.it/ETOOBUSY/2023/05/09/svg-text-elements/\n\no PDF::Data:\n- Manipulate PDF files and objects as data structures\n- Can read and write in OO style\n- https://metacpan.org/dist/PDF-Data\n- Ships with utility pdf_data for dumping stuff\n- For a huge amount of info, see email from Deven T. Corzine, Friday 13:22 2024-09-27\n\no PDF::FromHTML:\n- Convert HTML documents to PDF\n- https://metacpan.org/dist/PDF-FromHTML\n\no PDF other:\n- Mojo::PDF\n- Mxpress::PDF\n- PDF::Cairo\n- PDF::Create\n- PDF::CreateSimple\n- PDF::EasyPDF\n- PDF::Haru\n- PDF::Report wraps PDF::API2\n\no PDF::Reuse:\n- Reuse and mass produce PDF documents\n- https://metacpan.org/dist/PDF-Reuse\n- This module has an important See Also\n\no PDF::Table:\n- A utility class for building table layouts in a PDF::Builder (or PDF::API2) object\n- See also https://www.catskilltech.com/FreeSW/product/PDF%2DTable/title/PDF%3A%3ATable/freeSW_full\n- Example code: https://www.catskilltech.com/Examples/PDF/Table.html\n\no PDF::WebKit:\n- Use WebKit to Generate PDFs from HTML (via wkhtmltopdf)\n- https://metacpan.org/dist/PDF-WebKit\n\no PDFio::Architect:\n- Creating and manipulating PDF files\n- https://metacpan.org/dist/PDFio-Architect\n\no PDFio::FFI:\n- Perl FFI bindings for the PDFio C library\n- https://metacpan.org/pod/PDFio::FFI\n- It allows you to read, write, and manipulate PDF files from Perl by exposing the PDFio API\n\no Poppler:\n- https://metacpan.org/pod/Poppler\n- Bindings to the poppler PDF rendering library\n- http://poppler.freedesktop.org\n- Could not install this under Debian bookworm even after using:\n- cpanm ExtUtils::PkgConfig and\n- sudo apt-get install libpoppler-glib-dev and\n- sudo apt-get install gobject-introspection and\n- PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu and\n- PKG_CONFIG_PATH=/usr/share and\n- cpanm Glib::Object::Introspection The latter fails with\n- Package gobject-introspection-1.0 was not found in the pkg-config search path\n- Sigh\n- But  see PkgConfig - Pure-Perl Core-Only replacement for pkg-config\n\no SVGPDF:\n- Create PDF XObject from SVG data\n- https://metacpan.org/pod/SVGPDF\n- This module processes SVG data and produces one or more PDF XObjects to be placed in a PDF document. This module is intended to be used with PDF::Builder, PDF::API2 and compatible PDF packages\n\no Tools:\n- https://tools.pdf24.org/en/\n- This website offers a huge array of free online PDF tools\n",
        "title": "PdfStuff",
        "modified": "20250709003101227",
        "created": "20200930063401866"
    },
    {
        "text": "\"\"\"\no Perl on YouTube:\n- https://www.youtube.com/watch?v=yROKwEJ_KkU\n",
        "title": "Perl V7",
        "modified": "20250528003327937",
        "created": "20200728062039612"
    },
    {
        "text": "\"\"\"\no https://phoenixtrap.com/2021/05/25/perl-can-do-that-now/\n\no Syntax::Construct:\n- This module documents which features (incl regexps) first appeared in which version of Perl\n- Explicitly state which non-feature constructs are used in the code\n- https://metacpan.org/pod/Syntax::Construct\n",
        "title": "PerlDeltas",
        "modified": "20250609235747949",
        "created": "20210601053335024"
    },
    {
        "text": "\"\"\"\no This para does not try to list all distros, but only those which somehow stand out\n\no App::perl::distrolint:\n- Distribution-wide linting tools for Perl distributions\n- https://metacpan.org/dist/App-perl-distrolint\n\no PerlBench:\n- Compare several perls's performance\n- https://metacpan.org/dist/PerlBench\n\no Perl::Dist::APPerl:\n- Actually Portable Perl\n- https://metacpan.org/pod/Perl::Dist::APPerl\n- This distro runs on several x86_64 operating systems via the same binary\n- It builds to a single binary with perl modules packed inside of it\n",
        "title": "PerlDistros",
        "modified": "20250704001551693",
        "created": "20240323023937100"
    },
    {
        "text": "\"\"\"\no  App::sdview:\n- A terminal document viewer for Pod and other syntaxes\n- Contains sdview which supports POD and Markdown\n- https://metacpan.org/dist/App-sdview\n- See also App::sdview::Output::Tickit - interactive terminal-based viewer for App::sdview\n- https://metacpan.org/pod/App::sdview::Output::Tickit\n\no Module::CoreList:\n- What modules shipped with versions of perl\n- https://metacpan.org/dist/Module-CoreList\n\no perlfaq:\n- Frequently asked questions about Perl\n- https://metacpan.org/dist/perlfaq\n\no podweaver:\n- Run Pod::Weaver on a file or distribution\n- https://metacpan.org/dist/App-podweaver/view/script/podweaver\n\no https://metacpan.org/pod/perlsecret\n\no https://perldoc.perl.org/\n\no https://perldoc.perl.org/perlpodspec\n\no Prima:\n- a Perl graphic toolkit\n- Contains podview\n- https://metacpan.org/pod/Prima\n\no Recent modules:\n- https://niceperl.blogspot.com/\n\no For regexp stuff, search the above for Reference Manual, and under that Tutorials, and under that perlrequick and perlretut and perlrebackslash\n",
        "title": "PerlDocumentation",
        "modified": "20250619061147558",
        "created": "20210920080620336"
    },
    {
        "text": "\"\"\"\no B::CC:\n- Perl compiler's optimized C translation backend\n- https://metacpan.org/pod/B::CC\n\no Opcode:\n- Disable named opcodes when compiling perl code\n- https://metacpan.org/pod/Opcode\n\no Opcodes:\n- More Opcodes information from opnames.h and opcode.h\n- https://metacpan.org/dist/Opcodes\n\no Safe:\n- Compile and execute code in restricted compartments\n- https://metacpan.org/pod/Safe\n",
        "title": "PerlInternals",
        "modified": "20250629024911601",
        "created": "20250629024631868"
    },
    {
        "text": "\"\"\"\no Number::Phone:\n- Base class for Number::Phone::* modules\n- https://metacpan.org/dist/Number-Phone\n- This module contains dozens of sub-modules\n\no Phone::Valid::International::Loose:\n- Loosely validate international phone numbers via a regex\n- https://metacpan.org/dist/Phone-Valid-International-Loose\n",
        "title": "PhoneNumbers",
        "modified": "20250422012002111",
        "created": "20250323232523025"
    },
    {
        "text": "\"\"\"\no PHP::Serialization:\n- Simple flexible means of converting the output of PHP's serialize() into the equivalent Perl memory structure, and vice versa\n- https://metacpan.org/pod/PHP::Serialization\n\no PHP::Serialization::XS:\n- Simple flexible means of converting the output of PHP's serialize() into the equivalent Perl memory structure, and vice versa - XS version\n- https://metacpan.org/pod/PHP::Serialization::XS\n",
        "title": "PhpStuff",
        "modified": "20250705005649516",
        "created": "20250705005522355"
    },
    {
        "text": "\"\"\"\no See also:\n- DataTraversal for e.g. Data::Transform\n\no App::PTP:\n- An expressive Pipelining Text Processor\n- https://metacpan.org/dist/App-PTP\n\no Atomic::Pipe:\n- Send atomic messages from multiple writers across a POSIX pipe\n- https://metacpan.org/dist/Atomic-Pipe\n\no File::Collector:\n- Base class for custom File::Collector classes for classifying files and calling File::Collector::Processor methods for processing files \n- https://metacpan.org/dist/File-Collector\n\no Rule::Engine:\n- A system for creating sets of rules (RuleSets) and executing them against a list of objects\n- https://metacpan.org/pod/Rule::Engine\n\no Sub::Chain:\n- Chain subs together and call in succession\n- https://metacpan.org/pod/Sub::Chain\n\no Sub::Middler:\n- Middleware subroutine chaining\n- https://metacpan.org/pod/Sub::Middler\n\no Sub::Pipeline:\n- Subs composed of sequential pieces\n- https://metacpan.org/pod/Sub::Pipeline\n",
        "title": "PipeLines",
        "modified": "20250528020541721",
        "created": "20241001230949845"
    },
    {
        "text": "\"\"\"\no App::pod:\n- Quickly show available class methods and documentation\n- https://metacpan.org/dist/App-Pod\n\no App::podtohtml:\n- Provides podtohtml\n\no App::Podwebserver:\n- Provides podwebserver\n\no App::sdview:\n- A terminal-based structured document viewer for POD and other formats\n- https://metacpan.org/dist/App-sdview\n\no Pod::Coverage\n- Checks if the documentation of a module is comprehensive\n- https://metacpan.org/dist/Pod-Coverage\n\no Pod::Coverage::TrustMe:\n- Pod::Coverage but more powerful\n- https://metacpan.org/dist/Pod-Coverage-TrustMe\n\no Pod::Example:\n- Module for getting example from POD\n- https://metacpan.org/pod/Pod::Example\n\no Pod::Github:\n- Convert POD to Github markdown\n- https://metacpan.org/dist/Pod-Github\n\no Pod::Html:\n- Module to convert pod files to HTML\n- https://metacpan.org/pod/Pod::Html\n- See also Pod::L10N below\n\no Pod::Markdown::Github:\n- Convert POD to Github's specific markdown\n- https://metacpan.org/dist/Pod-Markdown-Github\n\no Pod::L10N:\n- Pod with L10N\n- https://metacpan.org/dist/Pod-L10N\n\no Pod::LOL\n- Parse Pod into a list of lists (LOL)\n- https://metacpan.org/dist/Pod-LOL\n\no Pod::Markdown:\n- Convert POD to Markdown\n- Uses Pod::Simple\n- https://metacpan.org/pod/Pod::Markdown\n\no Pod::Perldoc::ToToc:\n- Translate Pod to a Table of Contents\n- https://metacpan.org/dist/Pod-Perldoc-ToToc\n\no Pod::Query\n- Query pod documents\n- https://metacpan.org/dist/Pod-Query\n\no Pod::Simple:\n- Framework for parsing Pod\n- Recommended by Pod::Parser as being preferred to the latter\n- https://metacpan.org/dist/Pod-Simple\n\no Pod::Simple::HTML:\n- Convert Pod to HTML\n- https://metacpan.org/pod/Pod::Simple::HTML\n\no Pod::Spell:\n- A formatter for spellchecking Pod\n- https://metacpan.org/dist/Pod-Spell\n\no Pod::Text::Color::Delight:\n- https://metacpan.org/pod/Pod::Text::Color::Delight\n- Uses Pod::Text::Color\n\no Pod::Usage:\n- Extracts POD documentation and shows usage information\n- https://metacpan.org/dist/Pod-Usage\n\no Pod::Webserver:\n- Minimal web server for local Perl documentation\n- https://metacpan.org/dist/Pod-Webserver\n- Contains podwebserver which listens on port 8020\n",
        "title": "PodHandling",
        "modified": "20250713014049759",
        "created": "20220610010157426"
    },
    {
        "text": "\"\"\"\no POSIX::2008:\n- Perl interface to POSIX.1-2008\n- https://metacpan.org/pod/POSIX::2008\n",
        "title": "POSIX",
        "modified": "20250713020713749",
        "created": "20250713020642430"
    },
    {
        "text": "\"\"\"\no Full::Pragmata:\n- Common pragmata for Perl scripts and modules\n- https://metacpan.org/pod/Full::Pragmata\n- A must-read document\n",
        "title": "Pragma",
        "modified": "20241015224002044",
        "created": "20241015223904337"
    },
    {
        "text": "\"\"\"\no See also:\n- MeasureMetrics\n\no Devel::StatProfiler\n- Low-overhead sampling code profiler\n- https://metacpan.org/dist/Devel-StatProfiler\n\no Tiny::Prof:\n- Perl profiling made simple to use\n- https://metacpan.org/dist/Tiny-Prof\n",
        "title": "ProfilingCode",
        "modified": "20250528020643865",
        "created": "20240706053400471"
    },
    {
        "text": "\"\"\"\no App::Dest:\n- Deployment State Manager\n- https://metacpan.org/pod/App::Dest\n",
        "title": "ProjectManagement",
        "modified": "20250328225143520",
        "created": "20250328225120168"
    },
    {
        "text": "\"\"\"\no Biblio::Citation::Compare:\n- Perl extension for performing fuzzy comparisons between bibliographic citations\n- https://metacpan.org/dist/Biblio-Citation-Compare\n\no Text::GenderFromName:\n- Guess the gender of an American first name\n- https://metacpan.org/pod/Text::GenderFromName\n\no Text::Names:\n- Perl extension for (USA) proper name parsing, normalization, recognition, and classification\n- https://metacpan.org/pod/Text::Names\n\no Text::Names::Abbreviate:\n- Create abbreviated name formats from full names\n- https://metacpan.org/dist/Text-Names-Abbreviate\n\no Text::Names::GB:\n- Perl extension for proper name parsing, normalization, recognition, and classification\n- https://metacpan.org/pod/Text::Names::GB\n",
        "title": "ProperNames",
        "modified": "20250529014011410",
        "created": "20241108220355672"
    },
    {
        "text": "\"\"\"\no Image::DecodeQR::WeChat:\n- Decode QR code(s) from images using the OpenCV/WeChat library via XS\n- https://metacpan.org/dist/Image-DecodeQR-WeChat\n",
        "title": "QrCodes",
        "modified": "20240315003834497",
        "created": "20240315003736355"
    },
    {
        "text": "\"\"\"\no HiPi:\n- Modules for Raspberry Pi GPIO\n- https://metacpan.org/dist/HiPi\n",
        "title": "RaspberryPi",
        "modified": "20250429014544597",
        "created": "20250429014413115"
    },
    {
        "text": "\"\"\"\no See also:\n- GeographicStuff\n\no App::ipinfo:\n- A command-line tool for IPinfo.io\n- https://metacpan.org/pod/App::ipinfo\n- Interface to https://ipinfo.io/ - Accurate IP address data that keeps pace with secure, specific, and forward-looking use cases\n\no App::rdapper:\n- A simple console-based RDAP client\n- https://metacpan.org/dist/App-rdapper\n\no Net::RDAP:\n- Provides an interface to the Registration Data Access Protocol\n- https://metacpan.org/pod/Net::RDAP\n- RDAP is replacing Whois as the preferred way of obtainining information about Internet resources (IP addresses, autonymous system numbers, and domain names)\n- See also App::rdapper\n\no Net::RDAP::Server:\n- An RDAP server framework\n- https://metacpan.org/dist/Net-RDAP-Server\n\no Net::Whois::IANA:\n- A universal WHOIS data extractor\n- https://metacpan.org/dist/Net-Whois-IANA\n\no Net::Whois::Raw:\n- Get Whois information of domains and IP addresses\n- https://metacpan.org/dist/Net-Whois-Raw\n",
        "title": "RDAP",
        "modified": "20250713025133352",
        "created": "20240101000245421"
    },
    {
        "text": "\"\"\"\no See also:\n- DataTraversal\n\no Tree::RB:\n- Perl implementation of the Red/Black tree, a type of balanced binary search tree\n- https://metacpan.org/pod/Tree::RB\n- 2017\n\no  Tree::RB::XS:\n- Red/Black Tree and LRU Cache implemented in C\n- Similar API to Tree::RB\n- https://metacpan.org/pod/Tree::RB::XS\n\no Tree::RedBlack:\n- Perl implementation of Red/Black tree, a type of balanced tree\n- https://metacpan.org/pod/Tree::RedBlack\n- 2008\n",
        "title": "RedBlackTrees",
        "modified": "20250528020800214",
        "created": "20240706064227732"
    },
    {
        "text": "\"\"\"\no Code samples hard to represent in a TiddlyWiki:\n- See ~/bin/fancy.tricks.pl\n<pre>\n1 while s/\\b(\\w+) \\1\\b/$1/gi; # Remove duplicate (and triplicate (and quadruplicate...)) words\n<hr>\n1 while s/\\([^()]*\\)//g; # Remove (nested (even deeply nested (like this))) remarks\n<hr>\n1 while s/(\\d)(\\d\\d\\d)(?!\\d)/$1,$2/; # Put commas in the right places in an integer\n<hr>\n1 while s/\\t+/\" \" x (length($&)*8 - length($@)%8)/e; # Expand tabs to 8 x column spacing. Replace @ with a backtic! The @ here is used to fight the TiddlyWiki</pre>\n\n<pre></pre>\n\"\"\"\n\no See also PerlDoc\n\no See the user facing bits documented in:\n- pod/perlre.pod\n- pod/perlreref.pod\n- pod/perlrebackslash.pod\n- pod/perlretut.pod\n- pod/perlrecharclass.pod\n- pod/perlrequick.pod\n\no qr/\\A\\Q$str\\E\\z/:\n- \\A is start of string\n- \\Q is disable interpretation of metacharacters\n- \\E is enable \"\n- \\z or \\Z is end of string\n- Result of all that is maximal safety and precision\n\no See PerlDeltas for Syntax::Construct\n\no Char::Replace:\n- Perl naive XS character replacement as an alternate to substitute or transliterate\n- https://metacpan.org/pod/Char::Replace\n\no Regexp::Assemble:\n- Ancient\n\no Regexp::Common:\n- Provide commonly requested regular expressions\n- https://metacpan.org/pod/Regexp::Common\n- Aka Regex::Common\n\no Regexp::Compare:\n- Partial ordering for regular expressions\n- https://metacpan.org/dist/Regexp-Compare\n\no Regex::Range::Number:\n- Generate number matching regexes\n- https://metacpan.org/pod/Regex::Range::Number\n\no Regex::Object\n- Can't find it on MetaCPAN\n\no Regexp::Parsertron:\n- Parse a Perl regexp into a data structure of type Tree\n- https://metacpan.org/dist/Regexp-Parsertron\n\no Regexp::Trie:\n- Builds trie-ized regexp\n- https://metacpan.org/dist/Regexp-Trie\n",
        "title": "RegexpStuff",
        "modified": "20250609235553779",
        "created": "20220630005510032"
    },
    {
        "text": "\"\"\"\no ICANN::gTLD:\n- An interface to the ICANN gTLD database\n- https://metacpan.org/dist/ICANN-gTLD\n\no ICANN::RST:\n- A module for interacting with the Registry System Testing (RST) test specifications\n- https://metacpan.org/pod/ICANN::RST\n",
        "title": "RegistrySystemTesting",
        "modified": "20250528221724815",
        "created": "20250219140708337"
    },
    {
        "text": "\"\"\"\no ravada\n- https://github.com/UPC/ravada\n\no Rex:\n- The friendly automation framework\n- https://metacpan.org/dist/Rex\n- https://www.rexify.org/docs/guides/start_using__r__ex.html\n- https://blog.ferki.it/\n",
        "title": "RemoteDesktops",
        "modified": "20250706010751892",
        "created": "20190928004943171"
    },
    {
        "text": "\"\"\"\no See also:\n- CryptoStuff for RT::Extension::TOTPMFA\n\no Best Practical:\n- https://bestpractical.com/request-tracker\n\no Module::Install::RTx:\n- RT extension installer\n- https://metacpan.org/pod/Module::Install::RTx\n\no RT::Extension::ActivityReports:\n- Additional reports to show Activity in RT\n- https://metacpan.org/dist/RT-Extension-ActivityReports\n\no RT::Extension::AI:\n- Add various AI Features to Request Tracker\n- https://metacpan.org/dist/RT-Extension-AI\n\no RT::Extension::Announce:\n- Display announcements as a banner on RT pages\n- https://metacpan.org/dist/RT-Extension-Announce\n\no RT::Extension::AutomaticAssignment:\n- Automatically assign tickets based on rules\n- https://metacpan.org/dist/RT-Extension-AutomaticAssignment\n\no RT::Extension::CommandByMail:\n- Change ticket metadata via email\n- https://metacpan.org/dist/RT-Extension-CommandByMail\n\no RT::Extension::CSAT:\n- Customer Satisfaction Feedback extension for Request Tracker\n- https://metacpan.org/dist/RT-Extension-CSAT\n\no RT::Extension::ExcelFeed:\n- Generate RT reports in MS Excel XSLX format\n- https://metacpan.org/pod/RT::Extension::ExcelFeed\n\no RT::Extension::ExtractCustomFieldValues:\n- Extract CF values from email headers or body\n- https://metacpan.org/dist/RT-Extension-ExtractCustomFieldValues\n\no RT::Extension::FormTools:\n- Create multi-page ticket creation wizards for RT\n- https://metacpan.org/dist/RT-Extension-FormTools\n\no RT::Extension::HelpDesk:\n- Default Help desk configuration for Request Tracker\n- https://metacpan.org/dist/RT-Extension-HelpDesk\n\no RT::Extension::InlineHelp:\n- InlineHelp\nhttps://metacpan.org/dist/RT-Extension-InlineHelp\n\no RT::Extension::JSGantt:\n- Gantt charts for your tickets\n- https://metacpan.org/dist/RT-Extension-JSGantt\n\no RT::Extension::MandatoryOnTransition:\n- Require core fields and ticket custom fields on status transitions\n- https://metacpan.org/dist/RT-Extension-MandatoryOnTransition\n\no RT::Extension::QuickAssign:\n- Add owner change links on ticket display page\n- https://metacpan.org/dist/RT-Extension-QuickAssign\n\no RT::Extension::RepeatTicket:\n- Repeat tickets based on schedule\n- https://metacpan.org/dist/RT-Extension-RepeatTicket\n\no RT::Extension::Tags:\n- Provides simple tagging using custom fields\n- https://metacpan.org/dist/RT-Extension-Tags\n\no RTx::Calendar:\n- Calendar view for RT ticket dates and custom fields\n- https://metacpan.org/dist/RTx-Calendar\n",
        "title": "RequestTracker",
        "modified": "20250711002032002",
        "created": "20250520231000900"
    },
    {
        "text": "\"\"\"\no Net::API::REST:\n- Framework for RESTful APIs\n- https://metacpan.org/dist/Net-API-REST\n",
        "title": "RestfulInterface",
        "modified": "20240210001041227",
        "created": "20240210001013962"
    },
    {
        "text": "\"\"\"\no Dir::Write::Rotate:\n- Write files to a directory, with rotate options\n- https://metacpan.org/pod/Dir::Write::Rotate\n\no File::Write::Rotate:\n- Write to files that archive/rotate themselves\n- https://metacpan.org/pod/File::Write::Rotate\n",
        "title": "RotateLogFiles",
        "modified": "20240718231702796",
        "created": "20201117214724670"
    },
    {
        "text": "\"\"\"\no App::jupiter:\n- Turn a list of feeds into a HTML page, a river of news\n- https://metacpan.org/dist/App-jupiter/view/script/jupiter\n\no WWW::Noss:\n- RSS/Atom feed reader and aggregator\n- https://metacpan.org/dist/WWW-Noss\n\no XML::RSS:\n- Creates and updates RSS files\n- RSS stands for RDF Site Summary\n- https://metacpan.org/pod/XML::RSS\n",
        "title": "RSS",
        "modified": "20250623014746183",
        "created": "20250223221933377"
    },
    {
        "text": "\"\"\"\no Interpolate arithmetic into a string. e.g. an array record count:\n- \"... @{[$#lines + 1]} ...\"\n\no Invert the keys and values in a hash:\n<pre>\n#!/usr/bin/env perl\n\nuse 5.018;\n\n# -----------------------------\n\nmy(%hash) = (A => 1, B => 2, C => 3);\n\nsay 'Keys hash:   ', join(', ', sort keys %hash);\nsay 'Values hash: ', join(', ', sort values %hash);\nsay;\n\nmy(%invert);\n\n# RHS must be an array.\n\n@invert{@{[sort values %hash]} } = sort keys %hash;\n\nsay 'Keys invert:   ', join(', ', sort keys %invert);\nsay 'Values invert: ', join(', ', sort values %invert);\n</pre>\n\no https://metacpan.org/dist/Perl-Examples\n\no Syntax::Keyword::Dynamically:\n- Dynamically change the value of a variable\n- Effectively:\n{\n   my $old = $VAR;\n   $VAR = \"new value\";\n\n   ...\n\n   $VAR = $old;\n}\n- Except that the old value will also be restored in the case of exceptions, goto, next/last/redo or similar ways to leave the controlling block scope.\n\no See also:\n- GitStuff\n- [[TCP/IP]]\n- [[UTF8]]\n",
        "title": "SampleCode",
        "modified": "20240902010707174",
        "created": "20230511041722535"
    },
    {
        "text": "\"\"\"\no Imager::Screenshot:\n- Screenshot to an Imager image\n- https://metacpan.org/dist/Imager-Screenshot\n\no Screensaver::Any:\n- Common interface to screensaver/screenlocker functions\n- https://metacpan.org/dist/Screensaver-Any\n",
        "title": "ScreenStuff",
        "modified": "20250713014307895",
        "created": "20250418005240502"
    },
    {
        "text": "\"\"\"\no See also:\n- ApacheStuff\n\no Link to draft guidelines for a security policy for Perl module authors:\n- https://security.metacpan.org/docs/guides/security-policy-for-authors.html\n\no Authen::SASL:\n- SASL Authentication framework\n- https://metacpan.org/pod/Authen::SASL\n\no CPANSA::DB:\n- The CPAN Security Advisory data as a Perl data structure, mostly for CPAN::Audit\n- https://metacpan.org/dist/CPANSA-DB\n\no CSAF:\n- Common Security Advisory Framework\n- https://metacpan.org/dist/CSAF\n\no CVE:\n- Common Vulnerabilities and Exposures\n- https://www.bitsight.com/glossary/common-vulnerabilities-and-exposures-cve\n- https://csrc.nist.gov/glossary/term/common_vulnerabilities_and_exposures\n- https://www.redhat.com/en/topics/security/what-is-cve\n- CPANSec has just been authorized as a CVE Numbering Authority (CNA) for Perl and modules on CPAN (2025-02-26)\n- https://security.metacpan.org/2025/02/25/cpansec-is-cna-for-perl-and-cpan.html\n- This allows us to issue and manage CVEs for that scope, and to help facilitate coordinated disclosure. If you need a CVE you can request one by emailing:\n- cve-request@security.metacpan.org.\n- If a third-party requests a CVE we will ensure that they have reached out to perl-security (or the CPAN author) first and facilitate a discussion if necessary\n\nThe CVE.org CNA record also provides the email address to request a CVE\nnumber.\n\nhttps://www.cve.org/PartnerInformation/ListofPartners/partner/CPANSec\n\nAdditional details are available in the CNA disclosure policy.\n\nhttps://security.metacpan.org/docs/cna-disclosure-policy.html\n\nStig Palmquist (STIGTSP), Timothy Legge (TIMLEGGE) and Breno G. de Oliveira\n(GARU) are administering the CNA.  If you are interested in helping or\nlearning more please contact us at cna@security.metacpan.org.\n\no CVSS:\n- Perl extension for CVSS (Common Vulnerability Scoring System) 2.0/3.x/4.0\n- https://metacpan.org/dist/CVSS\n\no Data::OFAC:\n- A Perl interface to the United States Office of Foreign Assets Control (OFAC) Specially Designated Nationals List (SDN)\n- https://metacpan.org/pod/Data::OFAC\n\no Data::Validate::Sanctions:\n- Validate a name against sanctions lists\n- https://metacpan.org/pod/Data::Validate::Sanctions\n\no Software::Security::Policy:\n- Packages that provide templated Security Policies\n- https://metacpan.org/dist/Software-Security-Policy\n",
        "title": "SecurityPolicy",
        "modified": "20250707233428063",
        "created": "20241231232743162"
    },
    {
        "text": "\"\"\"\no See also:\n- DebianOS\n- UnixWare\n\no App::SeismicUnixGui:\n- A graphical user interface for Seismic Unix\n- https://metacpan.org/dist/App-SeismicUnixGui\n",
        "title": "SeismicOS",
        "modified": "20250609002332003",
        "created": "20250608062133515"
    },
    {
        "text": "\"\"\"\no Bit::Vector:\n- Efficient bit vector, set of integers and \"big int\" math library\n- https://metacpan.org/dist/Bit-Vector\n\no Set::Array\n- Arrays as objects with lots of handy methods\n\no Set::Bag:\n- For bags (multisets, counted sets)\n\no Set::FA\n- A Set of Discrete Finite Automata\n- Contains Set::FA::Element, a single Discrete Finite Automaton\n\no Set::Infinite:\n- For sets of intervals\n\no Set::Light:\n- (Memory efficient) unordered set of strings\n- https://metacpan.org/dist/Set-Light\n\no Set::Object\n- A set of objects and strings\n- https://metacpan.org/pod/Set::Object\n- Slowish. See Set::Light\n\no Set::Relation:\n- Relation data type for Perl\n- https://metacpan.org/dist/Set-Relation/view/lib/Set/Relation.pod\n\no Set::Scalar\n- Basic set operations\n- https://metacpan.org/pod/Set::Scalar\n- Slowish. See Set::Light\n\no Set::Select:\n- Uses bit pattern to select from 2 or more sets\n\no Set::CrossProduct:\n- Work with the cross product of two or more sets\n- https://metacpan.org/dist/Set-CrossProduct\n\no Set::Tiny:\n- Simple sets of strings\n- https://metacpan.org/dist/Set-Tiny\n",
        "title": "SetStuff",
        "modified": "20250414003444197",
        "created": "20230612024944369"
    },
    {
        "text": "\"\"\"\no Slackware::SBoKeeper:\n- SlackBuild package manager helper\n- https://metacpan.org/pod/Slackware::SBoKeeper\n",
        "title": "SlackWare",
        "modified": "20250307230608995",
        "created": "20250307230544509"
    },
    {
        "text": "\"\"\"\no Bluesky::Poster:\n- Simple interface for posting to Bluesky (AT Protocol)\n- https://metacpan.org/pod/Bluesky::Poster\n\no HTML::SocialMeta:\n- Module to generate Social Media Meta Tags\n- https://metacpan.org/pod/HTML::SocialMeta\n- It allows you to optimize sharing on platforms such as Twitter, Facebook, Google+ and Pinerest",
        "title": "SocialMedia",
        "modified": "20250606062209926",
        "created": "20250422235902545"
    },
    {
        "text": "\"\"\"\no See also:\n- [[HTTPHandling]]\n\no IO::FD:\n- Faster accept, socket, listen with file descriptors, not handles\n- https://metacpan.org/dist/IO-FD\n\no Socket:\n- Networking constants and support functions\n- https://metacpan.org/dist/Socket\n\no Socket::More:\n- List network interfaces and scope passive sockets to them\n- https://metacpan.org/pod/Socket::More\n",
        "title": "SocketStuff",
        "modified": "20250626015937598",
        "created": "20230907013506288"
    },
    {
        "text": "\"\"\"\no Software::License:\n- Packages that provide templated software licenses\n",
        "title": "SoftwareLicense",
        "modified": "20230520011203745",
        "created": "20230520011106133"
    },
    {
        "text": "\"\"\"\no App::subsort:\n- Sort lines of text using Sort::Sub routine\n- Contains App::sortsub\n- Uses Sort::Sub below\n- https://metacpan.org/dist/App-subsort\n\no File::Util::Sort:\n- Routines related to sorting files in one or more directories\n- https://metacpan.org/dist/File-Util-Sort\n\no Sort::Fields:\n- Provides a general purpose technique for efficiently sorting lists of lines that contain data separated into fields\n\no Sort::Maker:\n- A simple way to make efficient sort subs\n- https://metacpan.org/dist/Sort-Maker\n\no Sort::Naturally:\n- Sort lexically, but sort numeral parts numerically\n- https://metacpan.org/dist/Sort-Naturally\n\no Sort::Sub:\n- Collection of sort subroutines\n- https://metacpan.org/pod/Sort::Sub\n\no Sort::Versions:\n- Sorting of revision-like numbers\n- https://metacpan.org/dist/Sort-Versions\n",
        "title": "SortModules",
        "modified": "20250713231339215",
        "created": "20210105062248629"
    },
    {
        "text": "\"\"\"\no See also:\n- DataTraversal\n\no Spreadsheet stuff:\n- App::diff_spreadsheets\n- Spreadsheet::Examples\n- https://metacpan.org/dist/Spreadsheet-Examples\n- Spreadsheet::Open\n- https://metacpan.org/dist/Spreadsheet-Open\n\no Data::XLSX::Parser:\n- Faster XLSX parser\n- https://metacpan.org/pod/Data::XLSX::Parser\n- See Excel::ValueReader::XLSX\n\no Excel::PowerPivot::Utils:\n- Utilities for scripting Power Pivot models within Excel workbooks\n- https://metacpan.org/pod/Excel::PowerPivot::Utils\n\no Excel::ValueReader::XLSX:\n- Extracting values from Excel workbooks in XLSX format, fast\n- https://metacpan.org/dist/Excel-ValueReader-XLSX\n\no Excel::ValueWriter::XLSX:\n- Generating data-only Excel workbooks in XLSX format, fast\n- https://metacpan.org/dist/Excel-ValueWriter-XLSX\n\no Excel::Writer::XLSX:\n- Create a new file in the Excel 2007+ XLSX format\n- https://metacpan.org/pod/Excel::Writer::XLSX\n- This module has a huge number of methods\n\no Excel::XLSX:\n- Read and write Excel XLSX data\n- https://metacpan.org/dist/Excel-XLSX\n\no Spreadsheet::Edit:\n- Slice and dice spreadsheets, optionally using tied variables\n- https://metacpan.org/dist/Spreadsheet-Edit\n- Contains Spreadsheet::Edit::IO. Convert between spreadsheet and csv files\n\no Spreadsheet::HTML:\n- Just another HTML table generator\n- Used by DBIx::HTML\n- Transform Excel, HTML, JSON, CSV, YAML, PNG, JPEG and GIF files instantly into HTML tables\n\no Spreadsheet::ParseExcel:\n- Read information from an Excel file\n- https://metacpan.org/dist/Spreadsheet-ParseExcel\n\no Spreadsheet::ParseXLSX:\n- Parse XLSX files (strongly discouraged)\n- https://metacpan.org/pod/Spreadsheet::ParseXLSX\n- See Excel::ValueReader::XLSX\n\no Spreadsheet::Read:\n- Read the data from a spreadsheet\n- Contains xlsx2csv\n- https://metacpan.org/dist/Spreadsheet-Read\n- Spreadsheet::Read offers a uniformed wrapper to Spreadsheet::ParseExcel and Spreadheet::ReadSXC\n- For OpenOffice and/or LibreOffice this module uses Spreadsheet::ParseODS or Spreadsheet::ReadSXC\n- For Microsoft Excel this module uses Spreadsheet::ParseExcel, Spreadsheet::ParseXLSX, Excel::ValueReader::XLSX, or Spreadsheet::XLSX (strongly deprecated)\n- For CSV this module uses Text::CSV_XS or Text::CSV_PP\n- For Gnumeric this module uses Spreadsheet::ReadGnumeric\n- For SquirrelCalc there is a very simplistic built-in parser\n\no Spreadsheet::Write:\n- Writer for spreadsheet files (CSV, XLS, XLSX)\n- https://metacpan.org/dist/Spreadsheet-Write\n- But see the next module\n\no Spreadsheet::WriteExcel:\n- Write to a cross-platform Excel binary file\n- https://metacpan.org/dist/Spreadsheet-WriteExcel\n\no Spreadsheet::Wright:\n- Simple spreadsheet worker\n- https://metacpan.org/pod/Spreadsheet::Wright\n- Writes files in CSV, Microsoft Excel, HTML and OpenDocument formats\n- Formats - 'csv', 'xls', 'xlsx', 'html', 'xhtml', 'xml', 'ods', 'json', or 'auto' (default)\n",
        "title": "SpreadsheetStuff",
        "modified": "20250713014348999",
        "created": "20230907071706610"
    },
    {
        "text": "\"\"\"\no See also:\n- ConfigFiles\n- NetworkProgramming\n\no App::RemoteCommand:\n- Simple remote command launcher via ssh\n- https://metacpan.org/dist/App-RemoteCommand\n-Includes the tutorial  App::RemoteCommand::Tutorial\n\no App::sshca:\n- A minimal SSH Certificate Authority\n- https://metacpan.org/dist/App-sshca\n\no Libssh::Session:\n- Support for the SSH protocol via libssh.\n- https://metacpan.org/dist/Libssh-Session\n\no Net::FullAuto:\n- Fully Automate any workload with *persistent* SSH/SFTP from one host\n- https://metacpan.org/pod/Net::FullAuto\n\no Net::OpenSSH:\n- See https://metacpan.org/pod/Net::OpenSSH#Net::OpenSSH-Vs.-Net::SSH::.*-modules\n\no ssh_config:\n- OpenSSH client configuration file\n- https://man.openbsd.org/ssh_config\n",
        "title": "SSH",
        "modified": "20250629033813952",
        "created": "20200713064643975"
    },
    {
        "text": "\"\"\"\no App::sitelenmute:\n- A static image gallery creator\n- https://metacpan.org/pod/App::sitelenmute\n",
        "title": "StaticSiteGenerators",
        "modified": "20250405013154948",
        "created": "20250405013058267"
    },
    {
        "text": "\"\"\"\no See also:\n- CryptoStuff e.g. for Data::Entropy\n\no Statistics::CaseResampling:\n- Efficient resampling and calculation of medians with confidence intervals\n- https://metacpan.org/dist/Statistics-CaseResampling\n\no Math::LiveStats:\n- Pure perl module to make mean, standard deviation, and p-values available for given window sizes in streaming data\n- https://metacpan.org/dist/Math-LiveStats\n\no Math::Random::MT:\n- The Mersenne Twister PRNG\n- https://metacpan.org/pod/Math::Random::MT\n\no  PDL:\n- The Perl Data Language\n- https://metacpan.org/dist/PDL\n\no  Statistics::Descriptive:\n- Module of basic descriptive statistical functions\n- https://metacpan.org/dist/Statistics-Descriptive\n\no  Statistics::Descriptive::PDL:\n- A close to drop-in replacement for Statistics::Descriptive using PDL as the back-end\n- https://metacpan.org/dist/Statistics-Descriptive-PDL\n\no Statistics::Distributions:\n- Perl module for calculating critical values and upper probabilities of common statistical distributions\n- https://metacpan.org/pod/Statistics::Distributions\n\no Statistics::Krippendorff:\n- Calculate Krippendorff's alpha\n- https://metacpan.org/dist/Statistics-Krippendorff\n\no Statistics::Running:\n- Basic descriptive statistics (mean/stdev/min/max/skew/kurtosis) and discrete Probability Distribution (via histogram) over data without the need to store data points\n- https://metacpan.org/pod/Statistics::Running\n\no Statistics::Running::Tiny:\n- Basic descriptive statistics (mean/stdev/min/max/skew/kurtosis) over data without the need to store data points\n- https://metacpan.org/dist/Statistics-Running-Tiny\n\no Statistics::Welford:\n- Standard statistics using Welford's algorithm\n- https://metacpan.org/pod/Statistics::Welford\n",
        "title": "StatisticsStuff",
        "modified": "20250528021338242",
        "created": "20240706063155082"
    },
    {
        "text": "\"\"\"\no See also:\n- DataTraversal\n- TestingHelp\n\no Basic::Coercion::XS:\n- Creates a coercion type that converts a string into an array reference\n- https://metacpan.org/pod/Basic::Coercion::XS\n\no String::CRC32C:\n- Castagnoli CRC\n- https://metacpan.org/pod/String::CRC32C\n\no String::Binary::Interpolation:\n- Make it easier to interpolate binary bytes into a string\n- https://metacpan.org/pod/String::Binary::Interpolation\n\no String::Elide::Lines:\n- Elide lines from a string, with options\n- https://metacpan.org/pod/String::Elide::Lines\n\no String::Elide::Tiny:\n- A very simple text truncating function, elide()\n- https://metacpan.org/pod/String::Elide::Tiny\n\no String::Fuzzy:\n- Python-style fuzzy string matching (fuzzywuzzy port)\n- https://metacpan.org/pod/String::Fuzzy\n\no String::Lookup:\n- Convert strings to ID's authoritatively and vice-versa\n- https://metacpan.org/dist/String-Lookup\n\no String::Random::Regexp::regxstring:\n- Generate random strings from a regular expression\n- https://metacpan.org/dist/String-Random-Regexp-regxstring\n\no String::Sprintf:\n- Custom overloading of sprintf\n- https://metacpan.org/dist/String-Sprintf\n\no String::Tagged::Formatting:\n- An API specification for simple formatted strings\n- https://metacpan.org/dist/String-Tagged/view/lib/String/Tagged/Formatting.pod\n\no String::Trim::More:\n- Various string trimming utilities\n- https://metacpan.org/pod/String::Trim::More\n\no String::Truncate:\n- A module for when strings are too long to be displayed in...\n- https://metacpan.org/pod/String::Truncate\n\no String::Util:\n- String processing utility functions\n- About 22 of them\n- https://metacpan.org/pod/String::Util\n\no String::Util::Match\n- String utilities related to matching\n- https://metacpan.org/dist/String-Util-Match\n\no Text::Wrap:\n- Line wrapping to form simple paragraphs\n- https://metacpan.org/pod/Text::Wrap\n",
        "title": "StringStuff",
        "modified": "20250713015748696",
        "created": "20231002222212496"
    },
    {
        "text": "\"\"\"\no See also:\n- ExportHandling\n\no Dispatch::Class:\n- Dispatch on the type (class) of an argument\n- https://metacpan.org/dist/Dispatch-Class\n\no Hustle::Table:\n- Cached general purpose dispatch and routing table\n- https://metacpan.org/pod/Hustle::Table\n\no match::simple:\n- Simplified clone of smartmatch operator\n- https://metacpan.org/dist/match-simple\n- Obsolete. See Syntax::Operator::Matches below\n\no Smart::Dispatch:\n- First-class switch statements\n- https://metacpan.org/pod/Smart::Dispatch\n\no Struct::Match:\n- Exact Match (SCALAR|HASH|ARRAY)'s\n- https://metacpan.org/pod/Struct::Match\n\no Switch::Again\n- Keyword for either generating a reusable switch statement or calling the generated switch function directly\n- https://metacpan.org/pod/Switch::Again\n\no  Switch::Back:\n- Given/when for a post-given/when Perl\n- https://metacpan.org/dist/Switch-Back\n\no Switch::Right:\n- Switch and smartmatch done right this time\n- https://metacpan.org/pod/Switch::Right\n\no Syntax::Infix::Smartmatch:\n- https://metacpan.org/dist/Syntax-Infix-Smartmatch\n- Requires Module::Build::Tiny which will not install under GCC V 8.3.0\n\no Syntax::Keyword::Match:\n- https://metacpan.org/pod/Syntax::Keyword::Match\n\no Syntax::Operator::Matches:\n- match::simple but as a real infix operator\n- https://metacpan.org/dist/Syntax-Operator-Matches\n\no Switch::Plain:\n - A simple switch statement for Perl\n- https://metacpan.org/pod/Switch::Plain\n\no The Zombie which just won't die:\n- https://en.wikipedia.org/wiki/Zombie\n",
        "title": "SwitchStatements",
        "modified": "20250604002129381",
        "created": "20240709225256653"
    },
    {
        "text": "\"\"\"\no See also:\n- BenchmarkingTools\n\no Sys::CpuLoad:\n- Retrieve system load averages\n- https://metacpan.org/pod/Sys::CpuLoad\n- Note: On Debian I can run w, which is /usr/bin/w\n\no System::CPU:\n- Cross-platform CPU information / topology with no dependencies\n- Pure Perl\n- https://metacpan.org/pod/System::CPU\n- Has notes about old code such as System::Info below and\n- Unix::Processors, Sys::Info, various *::Sysinfo\n\no System::Info:\n- https://metacpan.org/dist/System-Info\n- The POD contains a good list of alternatives\n",
        "title": "SystemInfo",
        "modified": "20250528021411236",
        "created": "20230801023701556"
    },
    {
        "text": "\"\"\"\no See also:\n- ApacheStuff\n- [[HTTPHandling]]\n-  https://lemonldap-ng.org/\n\no Amazon::API:\n- A generic base class for AWS Services\n- https://metacpan.org/dist/Amazon-API\n\no App::traveller:\n- A webserver that serves Traveller RPG maps\n- https://metacpan.org/dist/App-traveller\n\no Datastar::SSE:\n- Module for creating Datastar Server Events\n- https://metacpan.org/pod/Datastar::SSE\n- See also https://data-star.dev/\n\no IPCamera::Reolink:\n- Reolink API provides access to various functions of a Reolink IP Camera or NVR\n- https://metacpan.org/dist/IPCamera-Reolink\n\no Lemonldap::NG::Common:\n- Common files for Lemonldap::NG infrastructure\n- https://metacpan.org/dist/Lemonldap-NG-Common\n\no Lemonldap::NG::Handler:\n- The Apache protection module part of Lemonldap::NG Web-SSO system\n- https://metacpan.org/dist/Lemonldap-NG-Handler\n\no Lemonldap::NG::Manager:\n- Perl extension for managing Lemonldap::NG Web-SSO system\n- https://metacpan.org/dist/Lemonldap-NG-Manager\n- Web Single Sign On and Access Management Software\n\no Lemonldap::NG::Portal:\n- The authentication portal part of Lemonldap::NG Web-SSO system\n- https://metacpan.org/dist/Lemonldap-NG-Portal\n\no Monitoring::Livestatus:\n- Perl API for check_mk livestatus to access runtime data from Nagios and Icinga\n- https://metacpan.org/dist/Monitoring-Livestatus\n\no Monitoring::Sneck:\n- A boopable LibreNMS JSON style SNMP extend for remotely running nagios style checks\n- https://metacpan.org/pod/Monitoring::Sneck\n\no Net::Cloudflare::DNS:\n- DNS API for Cloudflare API v4\n- https://metacpan.org/dist/Net-Cloudflare-DNS\n\no Sys::OsPackage:\n- Install OS packages and determine if CPAN modules are packaged for the OS\n- https://metacpan.org/dist/Sys-OsPackage\n- See also https://wiki.archlinux.org/title/Pacman/Rosetta\n\no Travel::Routing::DE::DBRIS:\n- Interface to the bahn.de itinerary service\n- https://metacpan.org/dist/Travel-Routing-DE-DBRIS\n\no Travel::Status::DE::DBRIS:\n- Interface to bahn.de / bahnhof.de departure monitors\n- https://metacpan.org/dist/Travel-Status-DE-DBRIS\n\no Travel::Status::DE::HAFAS:\n- Interface to HAFAS-based online arrival/departure monitors\n- https://metacpan.org/dist/Travel-Status-DE-HAFAS\n\no Travel::Status::MOTIS:\n- An interface to the MOTIS routing service\n- https://metacpan.org/pod/Travel::Status::MOTIS\n",
        "title": "SystemMonitoring",
        "modified": "20250711223803986",
        "created": "20250407230041286"
    },
    {
        "text": "\"\"\"\no A simple TCP client-server:\n- https://dev.to/thibaultduponchelle/perl-tcp-clientserver-sample-code-4pnm\n",
        "title": "TCP/IP",
        "modified": "20220329000559687",
        "created": "20220329000543067"
    },
    {
        "text": "\"\"\"\no See also:\n- [[HTMLHandling]]\n- LoggingStuff\n- MarkdownHandling\n\no App::Aphra:\n- Uses Moose and YAML\n- Simple static sitebuilder\n- Uses Template::Toolkit and Markdown and pandoc\n- https://aphra.perlhacks.com/\n\no App::Dapper:\n- A publishing tool for static websites\n- https://metacpan.org/dist/App-Dapper\n\no Business::LetterWriter:\n- Templates in JSON format\n- https://metacpan.org/dist/Business-LetterWriter\n\no HTML::Blitz:\n- High-performance, selector-based, content-aware HTML template engine\n- Contains HTML::Blitz::Builder\n- https://metacpan.org/pod/HTML::Blitz\n- Pod has a discussion of performance\n\no HTML::Blitz::Builder:\n- Create HTML code dynamically and safely\n- https://metacpan.org/dist/HTML-Blitz-Builder\n\no HTML::Zoom:\n- Can be extremely slow when processing large amounts of data\n- See HTML::Blitz above\n\no Interpolating an array element count into a string:\n- my($module_list) = [1, 2];\n- say \"Read @{[$#$module_list + 1]} modules from modules.sqlite\"\n\no Mason:\n- Powerful, high-performance templating for the web and beyond\n- https://metacpan.org/pod/Mason\n\no Mojo::Template:\n - Perl-ish templates\n- https://metacpan.org/pod/Mojo::Template\n\no Pango:\n- https://developer.gnome.org/pygtk/stable/pango-markup-language.html\n\no Plate:\n- Fast templating engine with support for embedded Perl\n- https://metacpan.org/pod/Plate\n\no String::Interpolate::Named:\n- Interpolated named arguments in string\n- https://metacpan.org/pod/String::Interpolate::Named\n\no String::Interpolate::RE:\n- Interpolate variables into strings using regular expressions\n- https://metacpan.org/dist/String-Interpolate-RE\n\no Templates in general:\n- Template::Liquid\n- Text::Handlebars (http://handlebarsjs.com/)\n\no Template:\n- Front-end module to the Template Toolkit\n- https://metacpan.org/pod/Template\n- See also Template::Tiny, Text::Template::Tiny below\n\no Template::EmbeddedPerl:\n- A template processing engine using embedding Perl code\n- https://metacpan.org/pod/Template::EmbeddedPerl\n\no Template::Plex:\n- (P)erl (L)exical and (EX)tendable Templating\n- https://metacpan.org/dist/Template-Plex\n\no Template::Plugin::StringTree:\n- Access tree-like groups of strings naturally in code and Templates\n- https://metacpan.org/pod/Template::Plugin::StringTree\n\no Template::Tiny:\n- Template Toolkit re-implemented in as little code as possible\n- https://metacpan.org/dist/Template-Tiny\n- See Template above and Text::Template::Tiny below\n\no Text::Layout:\n- Uses Pango markup language\n- This module will co-operate with PDF::API2, PDF::Builder, Cairo, and Pango\n\no Text::MustacheTemplate:\n- Fast and specification compliant Mustache template engine for Perl\n- https://metacpan.org/dist/Text-MustacheTemplate\n- See also https://mustache.github.io/\n\no Text::Template:\n- Expand template text with embedded Perl\n- https://metacpan.org/pod/Text::Template\n\no Text::Template::Tiny:\n- Variable substituting template processor\n- https://metacpan.org/dist/Text-Template-Tiny\n- See Template and Template::Tiny above\n\no Text::Textile:\n- A humane web text generator\n- https://metacpan.org/pod/Text::Textile\n\no Text::Textile2MarcdownStandalone:\n- Standalone converter from Textile markup to Markdown\n- https://metacpan.org/dist/Text-Textile2MarcdownStandalone\n\no Text::XSlate:\n- Scalable template engine for Perl5\n- https://metacpan.org/dist/Text-Xslate\n- Even faster than HTML::Blitz\n\no YATT::Lite:\n- Template with \"use strict\"\n- https://metacpan.org/dist/YATT-Lite\n\n",
        "title": "TemplateStuff",
        "modified": "20250705074547754",
        "created": "20230510070233734"
    },
    {
        "text": "\"\"\"\no See also:\n- DataTraversal\n- DebuggingStuff\n- ExceptionHandling\n- FileHandling\n- ModuleBuilding\n- NewOperators\n- StringStuff\n- Test::InDomain within DataValidation\n- WantArray\n- https://perlmaven.com/devel-cover-for-markua-parser\n\no A script to set up a new directory+cpanm for each type of testing:\n- https://github.com/MartijnLievaart/penv\n\no https://github.com/FGasper/perl-github-action-tips:\n-  Tips for testing Perl modules via GitHub\n\no App::ReportPrereqs\n\no App::SimpleScan:\n- simple_scan's core code\n- https://metacpan.org/dist/App-SimpleScan\n- Contains simple_scan and simple_report and many examples\n- simple_scan reads test specifications from standard input and generates Perl code based on these specifications\n\no Archive::Merged:\n- Virtually merge two archives\n- Meaning you can interrogate one or more archives or directories\n\no Carp::Assert::More:\n- Convenience assertions for common situations\n- https://metacpan.org/pod/Carp::Assert::More\n\no Chicken::Ipsum\n- Generate random chicken noises\n- https://metacpan.org/dist/Chicken-Ipsum\n\no CPAN test results for a typical module:\n- https://matrix.perl-magpie.org/dist.php?dist=Tree-DAG_Node\n- https://fast2-matrix.cpantesters.org/?dist=Tree%3A%3ADAG_Node\n\no Cucumber::TagExpressions:\n- Tag expression parser\n- https://metacpan.org/dist/Cucumber-TagExpressions\n\no Data::Compare:\n- Compare Perl data structures\n\no Data::Maker:\n- Simple, flexibile and extensible generation of realistic data\n- Includes gender\n- https://metacpan.org/pod/Data::Maker\n\no Data::Person:\n- Data object for person\n- https://metacpan.org/pod/Data::Person\n- Includes gender\n\no Data::Random:\n- Perl module to generate random data\n- https://metacpan.org/pod/Data::Random\n\no Data::RandomPerson:\n- Create random person data\n- https://metacpan.org/pod/Data::RandomPerson\n- Includes gender\n\no Data::Random::Person:\n- Random person objects\n- https://metacpan.org/dist/Data-Random-Person\n- Could use Mock::Person::US instead of Mock::Person:CZ\n- Uses Data::Person\n- Includes gender\n\no Date::Range:\n- Work with a range of dates\n- https://metacpan.org/pod/Date::Range\n\no Date::Simple:\n- A simple date object\n- https://metacpan.org/pod/Date::Simple\n\no Data::SimplePassword:\n- Simple random password generator\n- https://metacpan.org/pod/Data::SimplePassword\n\no DBD::Mock::Session::GenerateFixtures:\n- This distribution generates fixtures for DBD-Mock-Session module\n- https://metacpan.org/pod/DBD::Mock::Session::GenerateFixtures\n\no Debug::CodeBlock:\n- Add DEBUG codeblocks to your code\n- https://metacpan.org/dist/Debug-CodeBlock\n\no Devel::EndStats:\n- Display run time and dependencies after running code:\n\no Devel::Size:\n- Perl extension for finding the memory usage of Perl variables\n- https://metacpan.org/dist/Devel-Size\n\no Devel::Trace::Subs:\n- Generate, track, store and print code flow and stack traces:\n\no Environment::Is:\n- Detect environments like Docker or WSL\n- https://metacpan.org/dist/Environment-Is\n\no Gherkin:\n- A parser and compiler for the Gherkin language\n- https://metacpan.org/pod/Gherkin\n- See Test::BDD::Cucumber below\n'\no Getopt::Kingpin:\n- Command line options parser (like golang kingpin)\n- https://metacpan.org/dist/Getopt-Kingpin\n\no Mock::Data:\n- Extensible toolkit for generating mock data\n- https://metacpan.org/dist/Mock-Data\n- Has a dozen subclasses\n\no Mock::Data::Regex:\n- Generator that uses a Regex as a template to generate strings\n- https://metacpan.org/pod/Mock::Data::Regex\n- Similar to String::Random::Regexp::regxstring in StringStuff\n\no Mock::Person:\n- Generates random last, first and middle name of person\n- https://metacpan.org/pod/Mock::Person\n\no Mock::Populate:\n- Mock data creation\n- https://metacpan.org/pod/Mock::Populate\n\no Mockery:\n- Mock objects for testing purposes\n- https://metacpan.org/pod/Mockery\n\no Module::Mask:\n- Pretend certain modules are not installed\n- https://metacpan.org/dist/Module-Mask\n\no Perl::PrereqScanner\n\no Plack::Test::Agent:\n- OO interface for testing low-level Plack/PSGI apps\n- https://metacpan.org/dist/Plack-Test-Agent\n\no Result::Simple:\n- A dead simple perl-ish Result like F#, Rust, Go, etc\n- https://metacpan.org/pod/Result::Simple\n- Result represents a function's return value as success or failure, enabling safer error handling and more effective control flow management\n\no Scientist:\n- Test new code against old.\n- https://metacpan.org/pod/Scientist\n\no Subs::Trace:\n- Trace all calls in a package\n\no Syntax::Keyword::Assert:\n- Assert keyword for Perl\n- https://metacpan.org/pod/Syntax::Keyword::Assert\n\no TAP::DOM:\n- TAP as Document Object Model\n- https://metacpan.org/pod/TAP::DOM\n\no TAP::Formatter::HTML:\n- TAP Test Harness output delegate for html output\n\no TAP::Harness:\n- prove supports TAP::Harness plugins and has a plugin system of its own\n- Usage: prove -Ilib [-j 9] -r t where t is the dir name\n- See \"FORMATTERS\" in prove, \"SOURCE HANDLERS\" in prove and App::Prove for more details\n- https://metacpan.org/dist/Test-Harness\n\no Tapper::Cmd:\n- Backend functions for CLI and Web\n- https://metacpan.org/dist/Tapper-Cmd\n- Search MetaCPAN for Tapper:: to find other components of this set\n\no Test::BDD::Cucumber:\n- Feature-complete Cucumber-style testing in Perl\n- https://metacpan.org/dist/Test-BDD-Cucumber\n\no Test::Builder:\n- Back-end for building test libraries\n- https://metacpan.org/pod/Test::Builder\n\no Test::CheckGitStatus:\n- Check git status after every test\n- https://metacpan.org/dist/Test-CheckGitStatus\n\no Test::Class::Moose:\n- Serious testing for serious Perl\n- https://metacpan.org/dist/Test-Class-Moose\n\no Test::CVE:\n- Test against known CVE's\n- https://metacpan.org/dist/Test-CVE\n\no Test::Data:\n- Provides utility functions to check properties and values of data and variables\n- use Test::Data qw(Scalar Array Hash Function);\n- See also Mock::Data above\n\no  Test::Database::Temp:\n- Database::Temp is also in DatabaseAndSQL\n- Create temporary test databases and run tests in all available ones\n- https://metacpan.org/dist/Test-Database-Temp\n\no Test::Deep:\n- Extremely flexible deep comparison\n- https://metacpan.org/dist/Test-Deep\n\no Test::Dependencies:\n- Ensure that the dependency listing is complete\n- https://metacpan.org/dist/Test-Dependencies\n\no Test::DescribeMe:\n- Tell test runners what kind of test you are\n- https://metacpan.org/pod/Test::DescribeMe\n\no Test::Env:\n- Test the environment\n- https://metacpan.org/dist/Test-Env\n\no Test::Expander:\n- Expansion of test functionalities that appear to be frequently used while testing\n- The primary objective of Test::Expander is to provide additional convenience while testing based on Test2::V0 considering boilerplate aspects that seem to be important (to the author)\n\no Test::ExpectAndCheck:\n- Expect/check-style unit testing with object methods\n- https://metacpan.org/dist/Test-ExpectAndCheck\n\no Test::File:\n- Test file attributes\n- https://metacpan.org/dist/Test-File\n\no Test::File::Contents\n\no Test::Fixme:\n- Check code for FIXMEs\n- https://metacpan.org/dist/Test-Fixme\n\no Test::Harness:\n- Run Perl standard test scripts with statistics\n- https://metacpan.org/dist/Test-Harness\n\no Test::HTML::Content\n\no Test::HTTP::LocalServer:\n- Spawn a local HTTP server for testing\n\no Test::HTTPStatus:\n- Check an HTTP status\n- https://metacpan.org/dist/Test-HTTPStatus\n\no Test::Instruction:\n- A test framework\n- https://metacpan.org/dist/Test-Instruction\n\no Test::Is:\n- Skip test in a declarative way, following the Lancaster Consensus\n- https://metacpan.org/pod/Test::Is\n\no Test::ISBN:\n- Check International Standard Book Numbers\n- https://metacpan.org/dist/Test-ISBN\n\no Test::JSON::Schema:\n- Test your data against a JSON Schema\n- https://metacpan.org/dist/Test-JSON-Schema\n\no Test::JSON::Schema::Acceptance:\n- Acceptance testing for JSON-Schema based validators\n- https://metacpan.org/pod/Test::JSON::Schema::Acceptance\n\no Test::Kit:\n- Build custom test packages with only the features you want\n- Similar modules: Import::Base, Toolset\n- Test::Kit largely differs from these in that it always makes your module behave like Test::More\n\no Test::Manifest:\n- Interact with a t/test_manifest file\n- https://metacpan.org/dist/Test-Manifest\n\no Test::MixedScripts:\n- Test text for mixed and potentially confusable Unicode scripts\n- https://metacpan.org/pod/Test::MixedScripts\n- See also https://util.unicode.org/UnicodeJsps/confusables.jsp\n\no Test::MockFile:\n- Allows tests to validate code that can interact with files without touching the file system\n- https://metacpan.org/dist/Test-MockFile\n\no Test::Mockingbird:\n- Advanced mocking library for Perl with support for dependency injection and spies\n- https://metacpan.org/dist/Test-Mockingbird\n\no Test::MockModule:\n- Override subroutines in a module for unit testing\n- https://metacpan.org/dist/Test-MockModule\n\no Test::More:\n- See Test::Simple or Test::Simpler or Test2::V0\n\no Test::Needs:\n- Skip tests when modules not available\n- https://metacpan.org/pod/Test::Needs\n\no Test::Output:\n- Utilities to test STDOUT and STDERR messages\n- https://metacpan.org/dist/Test-Output\n\no  Test::Prereq:\n- Check if Makefile.PL has the right prerequisites\n- https://metacpan.org/dist/Test-Prereq\n- Supersedes the next module\n\no Test::Prereq::Meta:\n- Test distribution prerequisites against CPAN meta data file\n- https://metacpan.org/dist/Test-Prereq-Meta\n\no Test regexps:\n- test.openssl.pl\n\no Test::Settings:\n- Ask or tell when certain types of tests should be run\n- https://metacpan.org/pod/Test::Settings\n\no Test::Signature:\n- Automated SIGNATURE testing\n- https://metacpan.org/pod/Test::Signature\n- See also Module::Signature in ModuleBuilding\n\no Test::Simple:\n- Basic utilities for writing tests\n- https://metacpan.org/dist/Test-Simple\n- Has a huge array of components\n- Contains Test::More and Test2\n- But see the next module\n\no Test::Simpler:\n- Simpler than Test::Simple; more powerful than Test::More\n- https://metacpan.org/pod/Test::Simpler\n\no Test::Smoke:\n- The Perl core test smoke suite\n- https://metacpan.org/dist/Test-Smoke\n\no Test::TempDir::Tiny\n- Temporary directories that stick around when tests fail\n- https://metacpan.org/dist/Test-TempDir-Tiny\n- Strongly recommended over File::Temp which uses global \"our\" variables, which affects Capture::Tiny, since the latter also uses File::Temp. Don't do that\n\no Test::URI:\n- Check Uniform Resource Identifiers\n- https://metacpan.org/dist/Test-URI\n\no Test::utf8:\n- Handy utf8 tests\n- https://metacpan.org/dist/Test-utf8\n\no Test::Warnings:\n- https://metacpan.org/dist/Test-Warnings\n\no Test::WWW::Simple:\n- Test Web applications using TAP\n- https://metacpan.org/pod/Test::WWW::Simple\n\no Test::XML::Simple:\n- Easy testing for XML\n- https://metacpan.org/pod/Test::XML::Simple\n\no Test::YAFT:\n- Yet another testing framework\n- https://metacpan.org/dist/Test-YAFT\n\no Test2::Plugin::UUID:\n- Use REAL UUIDs in Test2\n- https://metacpan.org/dist/Test2-Plugin-UUID\n\no Test2::Harness:\n- Contains yath, which replaces test and prove (see below for usage  of prove)\n- https://metacpan.org/pod/yath. Install via App::Yath\n- https://perladvent.org/2023/2023-12-23.html\n\no Test2::Require::ProgramInPath:\n- Skip test unless a program exists in the PATH\n- https://metacpan.org/dist/Test2-Require-ProgramInPath\n\no Test2::Tools::ComboObject:\n- Combine checks and diagnostics into a single test as an object\n- https://metacpan.org/dist/Test2-Tools-ComboObject\n\no Test2::Tools::DOM:\n- Tools to test HTML/XML-based DOM representations\n- https://metacpan.org/dist/Test2-Tools-DOM\n\no Test2::Transition:\n- Transition notes when upgrading to Test2\n- Contained in: https://metacpan.org/dist/Test-Simple/view/lib/Test2/Transition.pod\n- See also: https://metacpan.org/pod/Test2::Suite\n\no Test2::Util::DistFiles:\n- Gather files in a distribution\n- https://metacpan.org/dist/Test2-Util-DistFiles\n\no Test2::V0:\n- Is becoming very popular\n- Convert from Test::More to Test2::V0 as described below in the 'pre' tagged section\n\no Overview of conversion from Test::More to Test2::V0:\n<pre>\nTest2 has a \"migration guide\" manual that you might find useful:\n\n  https://metacpan.org/pod/Test2::Manual::Testing::Migrating\n\nThough honestly I find I get my tests about 99% correct already by\nsimply doing:\n\n  $ find -name \\*.t | xargs sed -i 's/use Test::More/use Test2::V0/'\n  $ find -name \\*.t | xargs sed -i 's/is_deeply(/is(/'\n\nthen manually editing any other edge-cases that I find; but that's\nperhaps easier because my existing test style already mostly matched\nwhat Test2 wanted.\n\nI gave this a bash in a codebase I help maintain, and it worked well\nenough, save for the fact that we use(d) the \"tests => <num_tests>\"\nsyntax, so I had to get rid of that and add \"done_testing\" to the end of\nall the tests. I never enjoyed counting and updating the number of tests\nanyway, so I consider this an improvement :-)\n\nFWIW, the replacement of this is a subsequent call to plan($num); but\ndone_testing is certainly more commonly used as maintenance of the plan\ntends to be more trouble than it's worth.\n\n</pre>\n\no Time::RTM:\n- Run-time metrics stats\n- https://metacpan.org/pod/Time::RTM\n\no UNIVERSAL::dump:\n- Add dump and other methods to all classes and objects\n- https://metacpan.org/dist/UNIVERSAL-dump\n",
        "title": "TestingHelp",
        "modified": "20250713231519249",
        "created": "20200316055735432"
    },
    {
        "text": "\"\"\"\no Algorithm::Diff:\n- Compute differences between two files / lists\n- https://metacpan.org/pod/Algorithm::Diff\n\no App::PPI::Dumper:\n- Use the PPI to dump the structure of a Perl file\n- https://metacpan.org/dist/App-PPI-Dumper\n\no Data::Text:\n- Class to handle text in an OO way\n\no Data::Text::Simple:\n- Data object for text in language\n\no Dist::Surveyor:\n- Survey installed modules and determine the specific distribution versions they came from\n- https://metacpan.org/dist/Dist-Surveyor\n\no HTML::Quoted:\n- Extract structure of quoted HTML mail message\n- Various MUAs use quite different approaches for quoting in emails\n- Purpose and returned structures are very similar to those in Text::Quoted\n- Uses HTML::Parser\n\no Intellexer:\n- API client for Intellexer\n- Perl API client for the Intellexer, a webservice that, \"enables developers to embed Intellexer semantics products using XML or JSON.\"\n- Features:\n- Automatically extract topics from text\n- Parse an input text stream and extract various linguistic information\n- Automatically extracts sentiments (positivity/negativity), opinion objects (e.g., product features with associated sentiment phrases) and emotions (liking, anger, disgust, etc.) in unstructured text data\n- Identifies elements in text and classifies them into predefined categories such as personal names, names of organizations, position/occupation, nationality, geographical location, date, age, duration and names of events\n- Automatically generates a summary (short description) of a document with its main ideas\n- With Related Facts automatically generates a summary (short description) from multiple documents with their main ideas\n- Accurately compares documents of any format and determines the degree of similarity between them\n- And more\n\no Perl::MinimumVersion:\n- Find a minimum required version of perl for Perl code\n- https://metacpan.org/dist/Perl-MinimumVersion\n\no PPI:\n- Parse, Analyze and Manipulate Perl (without perl)\n- https://metacpan.org/dist/PPI\n\no PPIx::Regexp:\n- Represent a regular expression of some sort\n- https://metacpan.org/dist/PPIx-Regexp\n\no PPIx::Utilities:\n- Extensions to PPI.\n- https://metacpan.org/pod/PPIx::Utilities\n\no PPIx::Utils:\n- Utility functions for PPI\n- https://metacpan.org/pod/PPIx::Utils\n\no PPR:\n- Pattern-based Perl Recognizer\n- The docs compare it with PPI\n- https://metacpan.org/pod/PPI\n\no String::Diff:\n- Simple diff to String\n- https://metacpan.org/pod/String::Diff\n- Various ways of listing the difference between 2 strings\n\no Tags:\n- Structure oriented SGML/XML/HTML/etc. elements manipulation.\n- https://metacpan.org/pod/Tags\n\no Text::ANSI::Fold:\n- Text folding library supporting ANSI terminal sequence and Asian wide characters with prohibition character handling\n- https://metacpan.org/dist/Text-ANSI-Fold\n\no Text::ANSI::Printf:\n- Printf function to print string including ANSI sequence\n- https://metacpan.org/pod/Text::ANSI::Printf\n\no Text::Autoformat:\n- Automatic text wrapping and reformatting\n\no Text::Conceal:\n- Conceal and recover interface for text processing\n- https://metacpan.org/pod/Text::Conceal\n\no Text::FindIndent:\n- Heuristically determine the indent style\n- https://metacpan.org/dist/Text-FindIndent\n\no Text::Lorem\n- Generate random Latin looking text\n\no Text::Minify::XS:\n- Remove indentation and trailing whitespace from multi-line text\n- https://metacpan.org/pod/Text::Minify::XS\n\no Text::Quoted:\n- Extract the structure of a quoted mail message\n- Uses Text::Autoformat\n- Uses Text::Tabs\n\no Text::vFile::asData:\n- Parse vFile formatted files into data structures\n- Reads vFile format files, such as vCard (RFC 2426) and vCalendar (RFC 2445)\n- https://metacpan.org/pod/Text::vFile::asData\n- An app using it! See https://metacpan.org/pod/App::MergeCal\n- Command line program that merges iCal files into a single calendar\n\no Text::VisualPrintf:\n- Printf family functions to handle Non-ASCII characters\n- https://metacpan.org/pod/Text::VisualPrintf\n",
        "title": "TextAnalysisAndFormatting",
        "modified": "20250520010036990",
        "created": "20230712061013469"
    },
    {
        "text": "\"\"\"\no Syntax is WikiText:\n- See https://daringfireball.net/projects/markdown/syntax\n\no Escape character for '/' is '#&47;'. See also /''''/ and '////'. Click edit (pencil) to examine\n\no Care! TiddlyWikis contains executable code in order to provide all the features listed below:\n- Your download or antivirus software might complain\n\no Overview:\n- Each TiddlyWiki is restricted to a single web page\n- Each page must use named paragraphs\n- The purpose of these restrictions is to impose guidelines for the naming of things\n- These guidelines help people with no expertise in data collation to index items carefully\n- So, they help prevent growth-like-topsy, a major problem will old-style wikis\n- Do yourself a favour and always include a para in every TiddlyWiki called MainMenu (or Index or TableOfContents), and put in it an alphabetical list of para names\n\no Inbuilt features of all TiddlyWikis:\n- Search engine\n- Editor (can be sent commands, and can generate HTML)\n- The 3 double-quotes at the top of this para is one such command, but they are only visible when you click the pencil (edit) icon to enter edit mode for a para\n- Encryption (good for passwords)\n- History of paras edited per day\n- Import capability (a way of sharing)\n- Programmable in that you can list what paras are to be opened automatically when the file is loaded into the web client (browser). Hence the para called GettingStarted\n\no On-line help:\n- See tiddlywiki.com for a free download and many add-ons from the eco-system\n- The homepage is a TiddlyWiki, and you really should read the para GettingStarted\n- It is quite different than my GettingStarted para\n- In the eco-system there are various public hosting options giving other ways to share besides the import feature mentioned above\n\no Also:\n- By putting all your wikis in a single directory, backup consists of just copying that 1 directory\n",
        "title": "TiddlyWikis",
        "modified": "20250710013152267",
        "created": "20231128215756635"
    },
    {
        "text": "\"\"\"\no POSIX::RT::Signal:\n- POSIX Real-time signal handling functions\n- https://metacpan.org/dist/POSIX-RT-Signal\n\no POSIX::RT::Timer:\n- POSIX real-time timers\n- https://metacpan.org/dist/POSIX-RT-Timer\n- Contains POSIX::RT::Clock\n",
        "title": "TimerWare",
        "modified": "20250513211326478",
        "created": "20250305002414317"
    },
    {
        "text": "\"\"\"\no Font::TTF:\n- Perl module for TrueType Font hacking\n- https://metacpan.org/pod/Font::TTF\n\no Font::TTF::Font:\n- Memory representation of a font\n- https://metacpan.org/pod/Font::TTF::Font\n\no HarfBuzz::Shaper:\n- Use HarfBuzz for text shaping\n- https://metacpan.org/pod/HarfBuzz::Shaper\n- This module is not limited to TTFs\n\no Text::Layout:\n- Uses Pango markup language\n- This module will co-operate with PDF::API2, PDF::Builder, Cairo, and Pango\n",
        "title": "TrueTypeFonts",
        "modified": "20250323234346779",
        "created": "20250323233832528"
    },
    {
        "text": "\"\"\"\no App::pmuninstall\n- Contains pm-uninstall\n",
        "title": "UninstallModule",
        "modified": "20220501000544727",
        "created": "20220501000528719"
    },
    {
        "text": "\"\"\"\no See also:\n- DebianOS\n- SeismicOS\n",
        "title": "UnixWare",
        "modified": "20250609001345889",
        "created": "20250608062106839"
    },
    {
        "text": "\"\"\"\no IO::Prompter:\n- Prompt for input, read it, clean it, return it\n\no Or try:\n- IO::Prompt::Tiny\n- IO::Prompt::Simple\n- IO::Prompt::Hooked\n",
        "title": "UserInput",
        "modified": "20230725010942754",
        "created": "20230725010759791"
    },
    {
        "text": "\"\"\"\no See also:\n- DatabaseAndSQL\n- DataTraversal\n- WebServices\n- https://symboliciq.au/misc/Personal.Security.Wiki.html\n\no App::genpw:\n- (Gen)erate random password/strings, with (p)atterns and (w)ordlists\n- https://metacpan.org/pod/App::genpw\n- Contains script genpw similar to Linux's genpw\n\no Data::Password::Common:\n- Check a password against a list of common passwords\n- https://metacpan.org/pod/Data::Password::Common\n\no Data::Password::Manager:\n- Generate, check, manage crypt - des passwords\n- https://metacpan.org/dist/Data-Password-Manager\n\no DBIx::Array::Connect:\n- Database Connections from an INI Configuration File\n- https://metacpan.org/pod/DBIx::Array::Connect\n\no DBIx::MyPassword:\n- Store database authentication info in a CSV file\n- https://metacpan.org/dist/DBIx-MyPassword\n\no DBIx::Password:\n- Allows you to create a global password file for DB password\n- https://metacpan.org/dist/DBIx-Password\n\no DBIx::PasswordIniFile:\n- Manages DBI connections with password and other params stored in a .ini style file\n- https://metacpan.org/dist/DBIx-PasswordIniFile\n\no File::KDBX:\n- Encrypted database to store secret text and files\n- Works like KeePassXC (https://github.com/keepassxreboot/keepassxc)\n\no MooX::Role::CryptedPassword:\n- Password attribute from a encrypted file\n- https://metacpan.org/dist/MooX-Role-CryptedPassword\n\no Net::SAML2:\n- SAML2 bindings and protocol implementation\n- https://metacpan.org/pod/Net::SAML2\n\no OIDC::Client:\n- OpenID Connect Client\n- https://metacpan.org/dist/OIDC-Client\n\no Pass::OTP:\n- Perl implementation of HOTP / TOTP algorithms\n- https://metacpan.org/pod/Pass::OTP\n\no Password::Policy\n- Make managing multiple password strength profiles easy\n- https://metacpan.org/pod/Password::Policy\n\no statis:\n- An encrypting archive tool using tar, gpg and perl\n- Cannot find URL. Is it Perl-based?\n\no String::Mask:\n- Mask sensitive data\n- https://metacpan.org/pod/String::Mask\n\no String::Mask::XS:\n- Mask sensitive data faster\n- https://metacpan.org/pod/String::Mask::XS\n\no String::Secret:\n- Secret string wrapper to mask secret from logger\n- https://metacpan.org/pod/String::Secret\n\no Tags::HTML::Login::Register:\n- Tags helper for login register\n- Helps generate code for CSS and HTML Login form\n\no Tags::HTML::ChangePassword:\n- Tags helper for change password\n- https://metacpan.org/dist/Tags-HTML-ChangePassword\n\no Text::Password::Pronounceable:\n- Generate pronounceable passwords\n- https://metacpan.org/pod/Text::Password::Pronounceable\n\no URN::OASIS::SAML2:\n- Constants for urn:oasis SAML2 implementations\n- SAML 2.0 (Security Assertion Markup Language 2.0) is an open standard that enables secure Single Sign-On (SSO) for web-based applications\n- https://metacpan.org/dist/URN-OASIS-SAML2\n\no WebService::HashiCorp::Vault:\n- Perl API for HashiCorp's Vault\n- https://metacpan.org/dist/WebService-HashiCorp-Vault\n",
        "title": "UsernamePassword",
        "modified": "20250711223708827",
        "created": "20240208003631502"
    },
    {
        "text": "\"\"\"\no See also:\n- [[TiddlyWikis]]\n\no Consider using the 'exact' pragma:\n- Perl pseudo pragma to enable strict, warnings, features, mro, filehandle methods\n- https://metacpan.org/pod/exact\n",
        "title": "UseUse",
        "modified": "20250710032244609",
        "created": "20210420093231297"
    },
    {
        "text": "\"\"\"\no STDERR->binmode(\":encoding(UTF-8)\");\n- Simple!\n- Or:\n<pre>binmode STDIN,  \":encoding(UTF-8)\";\nbinmode STDOUT, \":encoding(UTF-8)\";\nbinmode STDERR, \":encoding(UTF-8)\";\n</pre>\no See also:\n- https://www.unicode.org/versions/Unicode16.0.0/\n- https://www.unicode.org/reports/tr44/\n- https://www.endpointdev.com/blog/2025/04/encoding-in-perl/\n\no App::safer:\n- CLI for Text::Safer\n- https://metacpan.org/dist/App-safer\n\no App::Uni:\n- uni is a command line program to find or display Unicode characters\n\no Encode/Decode character sets:\n- Encode\n- Encode::Simple (has interesting comments, e.g. next comment)\n- Unicode::UTF8. Its encode_utf8 is not equivalent to encode_utf8 in Encode, which should be avoided\n\no Encode::Wide:\n- Convert wide characters (Unicode) into HTML or XML-safe ASCII entities\n- https://metacpan.org/dist/Encode-Wide\n\no Fix, if possible, the Unicode bug:\n- use 'unicode_strings';\n- Try this code with and without:\nuse Devel::Peek;\nuse feature 'unicode_strings';\nmy $str1 = \"a\\x{100}\";\nmy $str2 = substr($str1, 0, 1);\nchop $str1;\nmy $str3 = substr($str1, 0, 1);\nprint +(\"\\x{DF}\" . $_)=~/ss/i ? \"yes\" : \"no\",\"\\n\" for $str1, $str2, $str3;\n\no ODF::lpOD_Helper:\n- Fix and enhance ODF::lpOD\n- https://metacpan.org/pod/ODF::lpOD_Helper\n- Associated code:\n- ODF::lpOD - An OpenDocument management interface\n- https://metacpan.org/pod/ODF::lpOD\n\no Path::Tiny:\n- Provides methods like slurp_utf8 and spew_utf8 to read and write files using the correct encoding\n- https://metacpan.org/dist/Path-Tiny\n\no Remove accents with:\n- See https://www.reddit.com/r/perl/comments/1d5k4cm/deaccentifying_characters/\n- Search::Tokenizer uses Text::Transliterator::Unaccent\n- Text::StripAccents only handles Latin1\n\no Sys::Binmode:\n- A fix for Perl’s system call character encoding\n\no Text::Iconv\n- Perl interface to iconv() codeset conversion function\n- https://metacpan.org/dist/Text-Iconv\n\no Text::PO:\n- Read and write PO files\n- Multi-lingual messages\n- https://metacpan.org/dist/Text-PO\n\no Text::Safer:\n- Convert text with one of several available methods, usually to a safer/more restricted encoding, e.g. for filenames\n- https://metacpan.org/pod/Text::Safer\n\no Text::Transliterator::Unaccent:\n- Compile a transliterator from Unicode tables, to remove accents from text\n- https://metacpan.org/dist/Text-Transliterator\n\no Text::VisualPrintf:\n- https://metacpan.org/pod/Text::VisualPrintf\n\no Text::Unaccent:\n-  Remove accents from a string\n- https://metacpan.org/dist/Text-Unaccent\n\n Text::Unidecode:\n- Plain ASCII transliterations of Unicode text\n- https://metacpan.org/pod/Text::Unidecode\n\no Tom Christensen:\n- https://stackoverflow.com/questions/6162484/why-does-modern-perl-avoid-utf-8-by-default/6163129#6163129\n- https://www.perl.com/pub/2012/04/perlunicook-standard-preamble.html/\n\no Unicode:\n- Unicode::Tussle\n- Tom's Unicode Scripts So Life is Easier\n- https://metacpan.org/pod/Unicode::Tussle\n- Sample usage:\n$ uniprops '☃'\nU+2603 ‹☃› \\N{SNOWMAN}\n...\n$ uniprops 'U+2603'\nU+2603 ‹☃› \\N{SNOWMAN}\n...\n$ uniprops 'SNOWMAN'\nU+2603 ‹☃› \\N{SNOWMAN}\n...\n$ uni_id ☃\n‹☃› U+2603 SNOWMAN\n\n$ uni_id çà\n‹ç› U+E7 LATIN SMALL LETTER C WITH CEDILLA\n‹à› U+E0 LATIN SMALL LETTER A WITH GRAVE\n- See also:\n-Unicode::UCD\n- Provides accsess at the information found in the Unicode Character Database.\nThe Unicode Standard is more than characters and properties.\n- perluniprops\n- unichars from Unicode-Tussle (e.g. unichars '\\p{Hiragana}')\n- See also charnames\n- Sample usage:\nuse strict;\nuse warnings;\nuse feature      qw( say );\nuse experimental qw( regex_sets );\n\nuse utf8;                              # Source encoded using UTF-8.\nuse open \":std\", \":encoding(UTF-8)\";   # Terminal provides/expects UTF-8.\n\nuse charnames qw( :full );\nuse Encode    qw( decode_utf8 );\n\n@ARGV == 1\n   or die(\"usage\\n\");\n\nmy $s = decode_utf8($ARGV[0]);\n\nfor my $cp ( unpack \"W*\", $s ) {\n   my $ch = chr($cp);\n   if ( $ch =~ /(?[ \\p{Print} - \\p{Mark} ])/ ) {   # Not sure if good enough.\n      printf \"‹%s› \", $ch;\n   } else {\n      print \"--- \";\n   }\n\n   printf \"U+%X \", $cp;\n\n   say charnames::viacode($cp);\n}\n\no Unicode::Block::List:\n- Access to Unicode Block names and tables:\n- https://metacpan.org/pod/Unicode::Block::List\n\no Unicode::Collate:\n- Notes copied from the synopsis\n- Note: Strings in @not_sorted, $a and $b are interpreted according to Perl's Unicode support. See https://metacpan.org/pod/perlunicode, https://metacpan.org/pod/perluniintro, https://metacpan.org/pod/perlunitut, https://metacpan.org/pod/perlunifaq, https://metacpan.org/pod/utf8. Otherwise you can use preprocess or should decode them before\n\no Unicode::Escape:\n- Escape and unescape Unicode characters other than ASCI\n- https://metacpan.org/pod/Unicode::Escape\n\no Unicode::GCString:\n- String as Sequence of UAX #29 Grapheme Clusters\n- https://metacpan.org/pod/Unicode::GCString\n\no Unicode::Precis:\n- RFC 7564 PRECIS Framework - Enforcement and Comparison\n- https://metacpan.org/pod/Unicode::Precis\n\no Unicode::Precis::Preparation:\n- RFC 8264 PRECIS Framework - Preparation\n- https://metacpan.org/pod/Unicode::Precis::Preparation\n\no Unicode::Unihan\n- The Unihan Data Base 5.1.0\n- https://metacpan.org/pod/Unicode::Unihan\n\no UTF8::R2\n\no Wide char support:\n- Text::WideChar::Util\n- Module contains a See Also\n",
        "title": "UTF8",
        "modified": "20250713021547764",
        "created": "20190806211249203"
    },
    {
        "text": "\"\"\"\no Data::GUID:\n- https://metacpan.org/pod/Data::GUID\n- Currently (2024-03-19) uses Data::UUID\n\no  Data::ULID:\n- Universally Unique Lexicographically Sortable Identifier\n- https://metacpan.org/dist/Data-ULID\n\no Data::UUID:\n- https://metacpan.org/pod/Data::UUID\n\no UUID:\n- DCE compatible Universally Unique Identifier library for Perl\n- https://metacpan.org/dist/UUID\n- Uses ChaCha20 which is in CryptX. See CryptoStuff\n",
        "title": "UUID",
        "modified": "20240605022052391",
        "created": "20231101070631052"
    },
    {
        "text": "\"\"\"\no Author:\n- Ron Savage\n- Melbourne, Victoria, Australia\n- http://savage.net.au. Has links to various wikis\n- https://symboliciq.au\n- https://quantumiq.au\n- https://metacpan.org/author/RSAVAGE\n\no version:\n- Perl extension for Version Objects\n- https://metacpan.org/dist/versionhttps://metacpan.org/dist/version\n\no V 1.29:\n- Unreleased\n- Add Alien::Bit, Data::OFN::Address, Math::AnyNum, Math::Interpolator, Math::NLopt, Math::Permutation to MathsLibraries\n- Add Alien::gdal, Data::OFN::Common to GeographicStuff\n- Add Alien::YAMLScript, YAMLScript to YamlStuff\n- Add App::PAUSE::Comaint to GitHubAndPause\n- Add App::KGB, Net::CampaignMonitor, Net::Azure::NotificationHubs, Net::Flickr::Backup, Opsview::RestAPI, Playwright, WebService::TogetherWeRemember, WWW::YaCyBlacklist, XML::Compile::WSS, XML::Compile::WSS::Signature to WebServices\n- Add App::MARC::Validator, Data::MARC::Field008, MARC::Field008, MARC::Validator to BibliographicStuff\n- Add App::pepper to ExtensibleProvisioningProtocol\n- Add App::safer, Encode::Wide, Text::Safer, Unicode::Escape to [[UTF8]]\n- Add App::SpreadRevolutionaryDate, Date::Cmp to DatesAndTimes\n- Add App::sshca to [[SSH]]\n- Add App::traveller, IPCamera::Reolink, Net::Cloudflare::DNS, Travel::Routing::DE::DBRIS, Travel::Status::DE::DBRIS, Travel::Status::DE::HAFAS, Travel::Status::MOTIS to SystemMonitoring\n- Add Art-Net, CIDR, CORS, DMARC, RDM, UPD to [[Acronyms]]\n- Add AsposeCellsCloud::CellsApi to OfficeFiles\n- Add AWS::Lambda, AWS::XRay, BsDiPa, File::Find::Rule, File::FStore, File::FStore::Base, File::FStore::File, File::Information::Base, File::Information::Filesystem, File::Information::Inode, File::Open::NoCache::ReadOnly, File::Stubb, Filename::Type::Audio, Filename::Type::Backup, Filename::Type::Ebook, Filename::Type::Executable, Filename::Type::Image, Filename::Type::Perl::Release to FileHandling\n- Add B::Keywords, exact, Module::Signature, PAR::Packer, URI::PackageURL to ModuleBuilding\n- Add BibTeX para containing BibTeX::Parser\n- Add BioInformatics para containing Bio::MUST::Apps::OmpaPa, Bio::MUST::Core and shift Pheno::Ranker there from DataTraversal\n- Add Blockchain para containing Blockchain::Ethereum\n- Add Bluesky::Poster to SocialMedia\n- Add App::dbitemplater, Couch::DB, DB_File, DBD::KB, DBD::Pg, DBD::PgAsync to DatabaseAndSQL\n- Add CPAN::Testers::Schema to [[CPAN]]\n- Add Crypt::Bear, Crypt::OpenSSL::BaseFunc, Crypt::Protocol, Crypt::Sodium::XS, Filter::Crypto, Filter::Crypto::Decrypt to CryptoStuff\n- Add CtrlO::PDF, PDFio::Architect, PDF::Reuse to PdfStuff\n- Add CVSS to SecurityPolicy\n- Add autobox, autobox::Text, autobox::Time::Piece, CXC::Data::Visitor, Data::Alias, Data::Edit::Xml::Reuse, Data::Printer::Filter::JMAP, Data::Reuse, Data::Visitor::Lite, Data::Visitor::Tiny, Data::Walk, List::Lazy to DataTraversal\n- Add CXC::Exporter::Util to ExportHandling\n- Add Data::Censor to DataCleaning\n- Add CEFACT::Unit, Data::CEFACT::Unit, Data::HashType, Data::IconText, Data::Identifier::Cloudlet, Data::Identifier::Interface::Userdata, Data::Identifier::Generate to DataTypes\n- Add Data::Power::Inspection to [[IoT]]\n- Add Data::SimpleKV, Data::TagDB::Tag, DB::Berkeley, DiaColloDB, Paws::DynamoDB::Response::Parser to DatabaseAndSQL\n- Add Data::URIID::Base, HTTP::ServerEvent, Query::Param to [[HTTPHandling]]\n- Add Date::Holidays, Date::Holidays::TW, Lingua::RU::Num2Word to LinguaStuff\n- Add Device::AVR::UPDI, Net::Async::ArtNet to HardwareStuff\n- Add Dispatch::Class to SwitchStatements\n- Add Dpkg to DebianOS\n- Add Email::Send::YYClouds, Mail::AuthenticationResults, Mail::DMARC to EmailStuff\n- Add Event::RPC, Future, Future::Selector, Future::XS, Promises to EventStuff\n- Add [[Games]] para containing Games::Mahjongg::Solver::deBondt::FFI, Games::Solitaire::BlackHole::Solver\n- Add Genealogy::Obituary::Lookup, Genealogy::Obituary::Parse, Genealogy::Relationship to GenealogyStuff\n- Add Geo::GDAL::FFI to GeographicStuff\n- Add Getopt::EX::i18n to CommandLineStuff\n- Add GoogleAds para containing Google::Ads::GoogleAds::Client\n- Add Hash::AsObject, Hash::Objectify, Object::Adhoc, Object::Anon, Object::Result to ClassStuff\n- Add Hash::Util::Exists::Tiny, Tie::Hash::MultiValue to HashHandling\n- Add HTML::Parser, HTML::Tabulate to [[HTMLHandling]]\n- Add HTTP::Tiny::Mech, HTTP::Tiny::UA, IO::Socket::SSL, Query::Param, URI::Escape to [[HTTPHandling]]\n- Add Imager::File::QOI, PDL::Drawing::Prima to ChartingAndPlotting\n- Add InlineStuff para containing Inline, Inline::C, Inline::Lua\n- Add IO::AIO, IO::AIO::LoadLimited, IO::AIO::Util, IO::Handle, IO::Socket, IO::Socket::IP to [[IO]]\n- Add Iterator, Iterator::DBI, Iterator::IO, Iterator::Misc, Iterator::Simple, Iterator::Util to DataTraversal\n- Add JSON::PP, JSON::Typist, JSONL::Subset to JsonStuff\n- AddLaTeX::ToUnicode to LaTeX\n- Add Lemonldap::NG::Manager, OIDC::Client to UsernamePassword\n- Add Log::Dispatch::UnixSyslog, Log::Report::Template to LoggingStuff\n- Add Markdown::Simple, Term::ANSIEncode to MarkdownHandling\n- Add Mo::utils::CEFACT, Mo::utils::CSS, Number::ZipCode::JP to DataValidation\n- Add Net::Async::HTTP::Server, Net::Firewall::BlockerHelper, Plack::Middleware::Session to [[HTTPServers]]\n- Add Net::IDN::Encode, Net::DNS::Resolver::Unbound, Zonemaster::LDNS to DnsStuff\n- Add Net::UPnP to NetworkProgramming\n- Add OpenAPI::Client::OpenAI to AiEngines\n- Add OrgINI to OrgDocHandling\n- Add Parallel::Pipes to ParallelProcessing\n- Add Pegex, Query::Tags to ParsingStuff\n- Add PerlBench to PerlDistros\n- Add Perl::Critic::Grape to CodeTidyingCode\n- Add perlfaq to PerlDocumentation\n- Add PerlInternals para containing B::CC, Opcode, Opcodes, Safe\n- Add PhpStuff para containing PHP::Serialization, PHP::Serialization::XS\n- Add Plack::Test::Agent, TAP::DOM, Test::MockModule, Test::Signature, Test2::Require::ProgramInPath, Test2::Util::DistFiles to TestingHelp\n- Add Pod::Example, Pod::Html, Pod::L10N to PodHandling\n- Add Poker::Eval to [[Games]]\n- Add [[POSIX]] para containing POSIX::2008\n- Add RT::Extension::ActivityReports, RT::Extension::AI, RT::Extension::AutomaticAssignment,  RT::Extension::CommandByMail, RT::Extension::CSAT, RT::Extension::ExcelFeed, RT::Extension::FormTools, RT::Extension::ExtractCustomFieldValues, RT::Extension::HelpDesk, RT::Extension::InlineHelp, RT::Extension::JSGantt, RT::Extension::RepeatTicket, RT::Extension::Tags to RequestTracker\n- Add SeismicOS containing App::SeismicUnixGui\n- Add Socket to SocketStuff\n- Add String::Truncate, Text::Wrap to StringStuff\n- Add Telugu::TGC to LocaleStuff\n- Add String::Interpolate::RE, Template::Tiny to TemplateStuff\n- Add Term::ReadLine, Term::ReadLine::Gnu to CommandLineStuff\n- Add Thrift to ApacheStuff\n- Add WebAssembly para containing Extism\n- Add WWW::Noss to [[RSS]]\n- Add [[X11]] para containing X11::XCB\n- Add XML::Entities to [[XML]]\n- Delete OpenSCAD para\n- Fold contents of CloneStuff into DataTraversal\n- Fold contents of HashVersusObject into HashHandling\n- Fold contents of Net::SSLeay into [[HTTPHandling]]\n- Rename DebianStuff to DebianOS\n- Update ChildProcesses\n- Update [[Color]] para re Graphics::Toolkit::Color's link to MetaCPAN\n- Update [[Graphs]] para re Graph::Nauty, SVG, Svg::Simple, SVG::TT::Graph\n- Update ModernPerl para re discouraging Modern::Perl for V 5.38 and newer\n\no V 1.28:\n- 2025-06-01\n- Add Aion, Module::Patch, Object::Configure, Perl::APIReference to ModuleBuilding\n- Add Alien::PDFio, PDFio::FFI to PdfStuff, and reorder some entries in that para\n- Add App::CdUtils, File::URIList, Filename::Type::Archive to FileHandling\n- Add App::ClipboardUtils to ClipBoard\n- Add App::rdapper, Net::Whois::Raw to [[RDAP]]\n- Add Basic::Coercion::XS to StringStuff\n- Add Basic::Types::XS to DataTypes\n- Add Business::LetterWriter to TemplateStuff\n- Add Business::Tax::VAT::Validation to BusinessApps\n- Add CPAN::Perl::Releases, CPAN::Testers::ParseReport to [[CPAN]]\n- Add Crypt::SecretBuffer to CryptoStuff\n- Add Cucumber::TagExpressions, Devel::Size, Gherkin, Test::BDD::Cucumber, Test::DescribeMe, Test::Is, Test::Needs, Test::Settings to TestingHelp\n- Add Data::Sah, Params::ValidationCompiler to DataCleaning\n- Add Date::Age to DatesAndTimes\n- Add GraphViz2, GraphViz2::Marpa, GraphViz2::Marpa::PathUtils, JSON::Pointer::Marpa, Marpa::R2, MarpaX::Grammar::GraphViz2, MarpaX::Grammar::Parser, MarpaX::Languages::Dash, MarpaX::Languages::SVG::Parser to [[Marpa]]\n- Add HTML::HTMLdoc, Text::Table::HTML::DataTables to [[HTMLHandling]]\n- Add ICANN::gTLD to RegistrySystemTesting\n- Add Lingua::FR::Numbers::Ordinate to LinguaStuff\n- Add MIDI::RtController::Filter::CC to MidiControllers\n- Add Mo::utils::URI to DataValidation\n- Add Module::CoreList to PerlDocumentation\n- Add Net::CIDR::Set to NetworkProgramming\n- Add Net::SAML2 to UsernamePassword\n- Add Object::Adhoc, Quiq to ClassStuff\n- Add Pheno::Ranker to DataTraversal\n- Add Quiq to ClassStuff\n- Add RT::Extension::Announce, RT::Extension::MandatoryOnTransition, RTx::Calendar to RequestTracker\n- Add Text::Names::Abbreviate to ProperNames\n- Add Thread::CSP to ParallelProcessing\n- Add Wanted to WantArray\n- Delete Class::Debug from DebuggingStuff. Now called Object::Configure\n- Fix a few typos where para [[HTMLHandling]] lacked a closing bracket which make it a TiddlyWiki link-able token\n- Fold contents of GitGUIs into GitStuff\n- Reformat 'See also' at the start of many paras\n- Rename VideoStuff to AudioVisual and add Audio::Nama\n- Try again to make TestingHelp list things in alphabetical order, and add link to CPAN Testers test results for a typical module\n\no V 1.27\n- 21-05-2025\n- Add AnyEvent::Redis, DBD::Oracle, Protocol::Redis::XS, Redis, Redis::hiredis to DatabaseAndSQL\n- Add App::Greple::xlate, Directory::Diff, Doubly, Doubly::Linked, Doubly::Linked::PP to DataTraversal\n- Add App::BlurFill, App::Image::Generator, Image::PNG::QRCode, SVG::Timeline, SVG::TrafficLight to ChartingAndPlotting\n- Add App::Netdisco, App::NetdiscoX::Web::Plugin::Observium to NetworkProgramming\n- Add App::NKC2MARC to BibliographicStuff\n- Add App::PPI::Dumper (was in DataTraversal), Dist::Surveyor, PPIx::Regexp, PPIx::Utilities, PPIx::Utils, Text::FindIndent, Text::Minify::XS to TextAnalysisAndFormatting\n- Add App::Wikidata::Template::CS::CitaceMonografie to BibliographicStuff\n- Add Archive::Unzip::Burst, Archive::Zip, Archive::Zip::SimpleZip, Archive::Zip::SimpleUnzip, Compress::Zstd, FU::Util, IO::Compress::Brotli, IO::Uncompress::Unzip, streamzip to ZipFIles\n- Add Business::ISBN::Data to BusinessApps\n- Add Cache::FastMmap, Cache::File::Simple to CachingStuff\n- Add CGI::Expand, Hash::Flatten, HTTP::Rollup to HashHandling\n- Add CGI::Info, CGI::Session, CGI::Session::Driver::mariadb, CGI::Simple, HTTP::Message, Net::Amazon::Glacier, Net::Amazon::Signature::V4, URI, Web::Components, Web::ComposableRequest, Web::Simple to HTTPHandling\n- Add Char::Replace to RegexpStuff\n- Add para ChatBots containing Eliza::Chatbot\n- Add Class::Debug to DebuggingStuff\n- Add Const::Fast, Const::XS, Readonly, Readonly::Values::Months to ConstantStuff\n- Add Crypt::JWT, Crypt::OpenSSL::RSA, RT::Extension::TOTPMFA to CryptoStuff\n- Add Data::DNS to DnsStuff\n- Add Data::LnArray, Data::LnArray::XS to ArrayHandling\n- Add Datastar::SSE, Monitoring::Livestatus to SystemMonitoring\n- Add Debug::CodeBlock, Module::Mask, Test::Class::Moose, Test::JSON::Schema, Test::MixedScripts, Test::MockFile, Test::YAFT to TestingHelp\n- Add EBook::Gutenberg to EBookHandling\n- Add Encode::IMAPUTF7, Mail::SPF to EmailStuff\n- Add Exporter, Exporter::Tiny, Sub::Exporter to ExportHandling\n- Add ExtUtils::ParseXS, Subclass::Of, Xerarch to ModuleBuilding\n- Add File::Syslogger, Log::Abstraction, Readonly::Values::Syslog to LoggingStuff\n- Add Filename::Type::Compressed, Redirection to FileHandling\n- Add Geo::CheapRuler to GeographicStuff\n- Add HTML::Blitz, HTML::Blitz::Builder, Mojo::Template, Template::Plugin::StringTree, Text::Textile, Text::Textile2MarcdownStandalone, YATT::Lite to TemplateStuff\n- Add HTML::Selector::XPath to CssHandling\n- Add I18N::Langinfo, Lingua::Boolean::Tiny to LinguaStuff\n- Add JavaScript::Packer to JavaScript\n- Add para LibVirt containing Protocol::Sys::Virt, Sys::Async::Virt, Sys::Virt\n- Add Pod::Markdown::Github, Text::Markdown, Text::Markup to MarkdownHandling\n- Add Math::Polygon to MathsLibraries\n- Add MetaCPAN::Client to CPAN\n- Add Net::eBay, WebService::AbuseIPDB to WebServices\n- Add para OpenSCAN containing CAD::OpenSCAD\n- Add OpenTelemetry::Exporter::OTLP, OpenTelemetry::SDK to OpenTelemetry\n- Add Path::Tiny, Text::Iconv to [[UTF8]]\n- Add PDF::API2::Resource::XObject::Image::Imager to PdfStuff\n- Add Perl::Metrics::Halstead, SlapbirdAPM::Agent::Dancer2 to MeasureMetrics\n- Add Perl::Types, String::BooleanSimple to DataTypes\n- Add Pod::Github, Pod::Markdown::Github, Pod::Simple::HTML, Pod::Pod::Webserver to PodHandling\n- Add POE::Loop::EV, prefork to ParallelProcessing\n- Add POSIX::RT::Signal to TimerWare\n- Add para RequestTracker containing Module::Install::RTx, RT::Extension::QuickAssign\n- Add Rope::Cmd to CommandLineStuff\n- Add Safe::Isa to NewOperators\n- Add Selenium::Remote::Driver, Weasel::Driver::Selenium2 to BrowserStuff\n- Add SpeL::Wizard VideoStuff\n- Add Math::Random::MT, Statistics::CaseResampling to StatisticsStuff\n- Add Term::ANSI::Sprintf to [[Color]]\n- Add Text::Table::HTML to [[HTMLHandling]]\n- Add Unexpected to ExceptionHandling\n- Add URN::OASIS::SAML2 to UsernamePassword\n- Add User::Information to OsStuff\n- Add XML::IETF, XML::PP, XML::Simple to [[XML]]\n- Delete para DataMirror since Data::Mirror is in DataTraversal. Also delete same module from WebServices\n- Fold the contents of IpAddresses into NetworkProgramming\n- Fold the contents of DebianStuff into Debian.Wiki.html\n- Simplify this para by replacing all ' and ' with ','\n- Sort modules by name in HTTPHandling\n- Update IoLayers with a note about :raw\n- Update HTTP::Promise in HTTPHandling\n\no V 1.26:\n- 2025-05-02\n- Add para AiEngines containing Langertha\n- Add Alien::Build, Alien::cmake3, App::Module::Lister, B, Blessed::Merge, Caller::Reverse, Class::Accessor, Class::Accessor::Fast, Class::Accessor::Validated, Devel::MaintBlead, DBIx::VersionedSubs, Devel::Required, Devel::ThreadsForks, ExtUtils::Typemaps::Magic, ExtUtils::Typemaps::Misc, Factory::Sub, Hades, Hades::Exporter, Hades::Realm::Import::Export, Local::No::Longer::Indexable, Mite, Module::Extract::VERSION, Module::Generate, Module::Runtime, Nefariousm ODS, ogd, PPI::Dumper, Simple::Tuple, SourceCode::LineCounter::Perl, Variable::Magic, YAOO to ModuleBuilding\n- Add Alien::CFITSIO to ChartingAndPlotting\n- Add App::cpm, App::cpx, CPAN::Mini::Inject, CPAN::Requirements::Dynamic, cpanscan.com to [[CPAN]]\n- Add App::DownloadsDirUtils to GitHubAndPause\n- Add App::GitUtils to GitStuff\n- Add App::MARC::Filter, App::MARC::List, MARC::Leader, MARC::Leader::Utils to BibliographicStuff\n- Add App::PPI::Dumper, Array::Contains, Data::FastPack, Data::LNPath, Data::Page, Data::Pageset, Data::Pageset::Exponential, Object::Iterate to DataTraversal\n- Add App::Mxpress::PDF, PkgConfig to PdfStuff\n- Add Archive::SCS to ZipFiles\n- Add ArrayData::Lingua::Word::ID::KBBI::Proverb, WordList::ID::KBBI::Proverb to LinguaStuff\n- Add Array::Merge::Unique to ArrayHandling\n- Add Authen::Passphrase, Crypt::Curve2551, Crypt::SysRandom::XS, Crypt::URandom::MonkeyPatch  to CryptoStuff\n- Add Benchmark::Thread::Size to BenchmarkingTools\n- Add Bijection, Bijection::XS, Math::GMatrix, Number::Equation,  Number::Equation::XS, Number::Fraction, smallnum, smallnum::XS to MathsLibraries\n- Add para BillOfMaterials containing SBOM::CycloneDX\n- Add Brick, Mo::utils::Number to DataValidation\n- Add Business::ISMN to BusinessApps\n- Add CHI, Class::Simple::Cached, Class::Simple::Readonly::Cached, LCC, Memoize to CachingStuff\n- Add Chrome::Util::Profile, Firefox::Util::Profile, WWW::Mechanize::Chrome, WWW::Mechanize::Chrome::DOMops, Vivaldi::Util::Profile to BrowserStuff\n- Add para CodeTidyingCode containing Code::TinyAll\n- Add Command::Runner to ChildProcesses\n- Add Config::Abstraction, Config::Model, Config::Model::Itself, Config::Model::OpenSsh, Config::Model::Systemd to ConfigFiles. Config::Model::OpenSsh was in para [[SSH]]\n- Add Config::LNPath to YamlStuff\n- Add Cookie,  HTTP::Cookies, HTTP::Cookies::Microsoft, HTTP::Cookies::Mozilla, HTTP::Cookies::Netscape, HTTP::CookieJar::LWP, HTTP::Server::Simple, HTTP::Server::Simple::CGI, Net::Server, Router::R3, Router::Ragel, Router::XS to [[HTTPHandling]]\n- Add Data::OFAC, Data::Validate::Sanctions to SecurityPolicy\n- Add Data::Integer, Tie::BoundedInteger, Tie::Cycle, Tie::Toggle, Types::Music to DataTypes\n- Add Data::Message::Simple, Mo::utils to DataValidation\n- Add DateTime::Ordinal to DatesAndTimes\n- Add DBIx::Class::Helper::ColumnNames, Data::ObjectDriver, TDB_FileX to DatabaseAndSQL\n- Add Data::XLSX::Parser, Excel::ValueReader::XLSX, Excel::XLSX to SpreadsheetStuff\n- Add Devel::Cover, Grafana, InfluxDB, Telegraf, Lab::Measurement::Manual to MeasureMetrics\n- Add Document::OOXML, MsOffice::Word::Template to OfficeFiles\n- Add Enterprise::Licence, Software::Copyright to LicenceStuff\n- Add File::Copy::clonefile, File::Fetch, File::Find::Closures, File::FindUniq, File::Store, File::Util::Copy, Linux::FD to FileHandling\n- Add File::Util::Sort to SortModules\n- Add para FinancialStuff containing Finance::Quote\n- Add gb64, IOLayer::QuotedPrint, PerlIO::via::Include, PerlIO::via::Pod to IoLayers (previously called PerlIoLayers)\n- Add Genealogy::Wills to GenealogyStuff\n- Add Geo::Coder::GeocodeFarm, Geo::Location::IP, Geo::WebService::OpenCellID, IP::Geolocation::MMDB, Starlink::AST to GeographicStuff\n- Add para HardwareStuff containing OPCUA::Open62541\n- Add IO::Interactive to [[IO]]\n- Add sample code to JQ::Lite in para JavaScript\n- Add JSON::MaybeXS, JSON::Schema::Generate, JSON::Schema::Tiny to JsonStuff\n- Add Linux::Statm::Tiny to MeasureMetrics\n- Add Locale::Intl to LocaleStuff\n- Add Log::Dispatch::Buffer, Log::Dispatch::TAP, Log::Dispatch::WarnDie, Log::Dispatch::XML, Log::JSON::Lines, Log::Report, Log::Report::Lexicon, LWP::CurlLog, Parse::Syslog::Line to LoggingStuff\n- Add Mail::Box::IMAP4, Mail::Box::POP3, Mail::Message, MIME::Types to EmailStuff\n- Add Net::EPP to ExtensibleProvisioningProtocol\n- Add Net::FullAuto to [[SSH]]\n- Add Net::OAuth, WWW::OAuth to WebSecurity\n- Add Net::RDAP::Server to [[RDAP]]\n- Add para OpenTelemetry containing OpenTelemetry\n- Add OptArgs2 to CommandLineStuff\n- Add Params::Get to ParameterTypes\n- Add Phone::Valid::International::Loose to PhoneNumbers\n- Add Rule::Engine, Sub::Chain, Sub::Middler, Sub::Pipeline to PipeLines\n- Add para ScreenStuff containing Imager::Screenshot, Screensaver::Any\n- Add SMS::AQL to WebServices\n- Add para SocialMedia containing HTML::SocialMeta\n- Add para StaticSiteGenerators containing App::sitelenmute\n- Add PDL to StatisticsStuff\n- Add para RaspberryPi containing HiPi\n- Add Software::Security::Policy to SecurityPolicy\n- Add String::Elide::Lines, String::Elide::Tiny, String::Lookup, String::Trim::More to StringStuff\n- Add Struct::Match to SwitchStatements because I can't think of a better place for it :-)\n- Add para SystemMonitoring containing Lemonldap::NG::Common, Lemonldap::NG::Handler, Lemonldap::NG::Manager, Lemonldap::NG::Portal, Monitoring::Sneck, Sys::OsPackage\n- Add Template to TemplateStuff\n- Add Test::Builder, Test::CheckGitStatus, Test::Data, Test::Deep, Test::Env, Test::Harness, Test::ISBN, Test::JSON::Schema::Acceptance, Test::Manifest, Test::More, Test::URI to TestingHelp\n- Add IO::Async, IO::Async::Loop::Epoll, IO::Async::Loop::Epoll::FD, Parallel::Iterator, POSIX::AtFork, Thread::Bless, Thread::Conveyor, Thread::Conveyor::Monitored, Thread::Deadlock, Thread::Exit, threads::farm, Thread::Needs, Thread::Pool, Thread::Pool::Resolve, Thread::Queue::Any, Thread::Queue::Any::Monitored, Thread::Rand, Thread::Running, Thread::Serialize, Thread::Status, Thread::Synchronized, Thread::Use to ParallelProcessing\n- Add Text::Transliterator::Unaccent, Unicode::Precis, Unicode::Precis::Preparation, Unicode::Tussle to [[UTF8]]\n- Add validator.w3.org/nu/ to [[HTMLHandling]\n- Add para VirtualEnvironment containing Net::Proxmox::VE\n- Fold contents of RandomStuff into CryptoStuff\n- Fold contents of ReadPipe into ParallelProcessing\n- Fold contents of UtilLibraries into DataTraversal\n- Fold contents of VariableMagic into ModuleBuilding\n- Rename ApacheLogs to ApacheStuff, add Apache::Session::Browseable\n\no V 1.25:\n- 2025-03-31\n- Add Alien, ExtUtils::Depends, LaunchDarkly::Server, Module::List, Package::Subroutine, XS::Framework, XS::Install, XS::Manifesto to ModuleBuilding\n- Add para AntiVirusStuff containing File::Scan::ClamAV\n- Add App::ANSIColorUtils, Color::ANSI::Util, Color::RGB::Util, Term::ANSIColor, Term::Chrome, Term::ExtendedColor,  to [[Color]]\n- Add App::cat::v to CommandLineStuff\n- Add App::Greple::stripe, autobox::Lookup, Devel::Walk, OMOP::CSV::Validator, Text::Pipe to DataTraversal\n- Add App::ipinfo, Net::Whois::IANA to [[RDAP]]\n- Add App::perlimports to ModuleBuilding\n- Add Array::Intersection to ArrayHandling\n- Add ArrayData::Lingua::Word::ID::KBBI::FigureOfSpeech, Calendar::Indonesia::Holiday, Koha::Contrib::Tamil, Lingua::String, Unicode::Japanese, WordList::ID::KBBI::ByClass::Adverb to LinguaStuff\n- Add para AssemblerX86 containing CPU::x86_64::InstructionWriter\n- Add para AutomatedBackups containing App::BackupPlan\n- Add Benchmark::DKbench to BenchmarkingTools\n- Add para BibliographicStuff containing MARC::Convert::Wikidata::Object, Net::Z3950::FOLIO, Net::Z3950::SimpleServer\n- Add Calendar FAQ, DateTime::Format::DB2, DateTime::Format::Natural, HTML::CalendarMonth, HTML::CalendarMonthSimple to DatesAndTimes\n- Add Config::MorePerl to ConfigFiles\n- Add CPAN::Maker to [[CPAN]]\n- Add Authen::SASL, CPANSA::DB to SecurityPolicy\n- Add a link to 'The CSS 2024 Snapshot', CSS::Inliner to CssHandling\n- Add Crypt::Diceware, Crypt::SMIME, libcrypto to CryptoStuff\n- Add Data::Entropy to RandomStuff\n- Add Data::Float, Data::Perl, Data::Pond, MooseX::Types, MooX::HandlesVia, Scalar::Number, Sub::HandlesVia, Type::Guess to DataTypes\n- Add Data::Validate, Data::Validate::Domain, Data::Validate::IP, Scalar::Util::Looks_like_number to DataValidation\n- Add DBD::Sybase, DBIx::Class::EncodedColumn, DBIx::Class::Schema, DBIx::Class::Schema::Loader, LMDB_File, SQL::Interp to DatabaseAndSQL\n- Add Email::Sender::Transport::SMTP, Email::Sender::Transport::SMTP::Persistent to EmailStuff\n- Add Export::XS to ExportHandling\n- Add File::Copy::NoClobber, File::Lockfile::Emacs, File::Sticker, File::Util::Rename, Module::Filename, Storage::Abstract to FileHandling\n- Add Firefox::Marionette etc in BrowserStuff\n- Add Geo::AnomalyDetector, Geo::Coder::GeoApify, Geo::IPinfo to GeographicStuff\n- Add a link to 'The HTML Living Standard', HTML::ElementTable to [[HTMLHandling]]\n- Add https://imagetragick.com/, File::LibMagic, Image::JPEG::Size, Image::Magick::Safer, Imager::Font::FT2 to ChartingAndPlotting\n- Add JQ::Lite to JavaScript\n- Add Locale::Codes to LocaleStuff\n- Add Mail::SpamAssassin::Plugin::DBSCORE to EmailStuff\n- Add App::GUI::Harmonograph, App::GUI::Juliagraph, Math::BigInt, Math::BigInt::BitVect, Math::BigInt::FastCalc, Math::BigInt::GMP, Math::BigInt::GMPz, Math::BigInt::Lite, Math::BigInt::Pari, Math::Pari, Math::PlanePath, Math::Symbolic::Custom::CollectSimplify, Math::Symbolic::Custom::Matrix, Math::Symbolic::Custom::ToShorterString, Math::Symbolic::Custom::ToTallString to MathsLibraries\n- Add para MidiControllers containing MIDI::RtController\n- Add Minima, Mojolicious, UniEvent::HTTP::Manager to HTTPServers. Mojo was in InterestingModules\n- Add Net::Domain::TLD to DnsStuff\n- Add Net::Versa::Director to NetworkProgramming\n- Add next::XS to ModulePlugins\n- Add para OpenGL containing OpenGL, OpenGL::GLFW,  OpenGL::GLUT, OpenGL::Modern\n- Add OpenDNS::MyIP to DsnStuff\n- Add para PacketCapture containing File::PCAP, Image::ExifTool::PCAP, Metabrik::Forensic::Pcap, Net::Inspect, Net::Pcap, Net::Pcap::Easy, Sniffer::HTTP\n- Add PDF::WebKit, https://tools.pdf24.org/en/, extra links to PdfStuff\n- Add para PhoneNumbers containing Number::Phone\n- Add Pod::Coverage, Pod::Coverage::TrustMe, Pod::Usage to PodHandling\n- Add Power::Outlet to [[IoT]]\n- Add para ProjectManagement containing App::Dest\n- Add Rex to RemoteDesktops\n- Add Scientist, Test2::Plugin::UUID to TestingHelp\n- Add ssh_config to [[SSH]]\n- Add para SlackWare containing Slackware::SBoKeeper\n- Add String::CRC32C, String::Fuzzy to StringStuff\n- Add Sys::Cmd to ChildProcesses\n- Add Sys::CpuLoad to SystemInfo\n- Add Text::MustacheTemplate to TemplateStuff\n- Add Time::Progress to MeasureMetrics\n- Add para TimerWare containing POSIX::RT::Clock, POSIX::RT::TImer\n- Add para TrueTypeFonts containing Font::TTF, Font::TTF::Font, HarfBuzz::Shaper, Text::Layout\n- Add Types::MIDI to MidiControllers\n- Add Types::Standard to EnumStuff\n- Add WebService::HashiCorp::Vault to WebServices\n- Add para ZeframsStuff\n- Add Zonemaster::Backend, Zonemaster::CLI to DsnStuff\n- Fold SymbolicMaths into MathsLibraries\n- Fold WorkFlows into WebServices, add WebService::IdoitAPI, WebService::Slack::WebApi\n- Update ConfigFiles with the URL of the TOML wiki\n- Update DomainNames entry App::url\n\no V 1.24:\n- 2025-03-01\n- Add para [[2FA]] containing Auth::GoogleAuth\n- Add AI::Ollama::Client to LargeLanguageModels\n- Add para AlgorithmicStuff containing Algorithm::DLX (2 people released modules with the same name). Now Steffen has released Algorithm::X::DLX\n- Add ANSI::Palette to [[Color]]\n- Add App::CPAN::Get to [[CPAN]]\n- Add App::gimpgitbuild to ChartingAndPlotting\n- Add App::GUI::Cellgraph to [[DFA]]\n- Add Archive::BagIt, App::Greple::charcode, Data::Dump::Color, Data::Edit::Xml, Data::NestedKey,  Data::Record::Serialize::Encode::csv, Data::Unixish, Text::ANSITable, Text::ASCIITable, Term::TablePrint to DataTraversal\n- Add App::orgadb to OrgDocHandling\n- Add App::pause to GitHubAndPause\n- Add App::ReslirpTunnel to NetworkProgramming\n- Add ArrayData::Lingua::Word::ID::KBBI::ByClass::Adjective, ArrayData::Lingua::Word::ID::KBBI::ByClass::Verb, CGI::Lingua, Convert::Number::Ethiopic, Date::Ethiopic, DateTime::Calendar::Coptic, Lingua-RU-Numeral, Text::WagnerFischer::Amharic to LinguaStuff\n- Add Array::Iterator to ArrayHandling\n- Add AWS::S3, FindApp, File::Print::Many, rename to FileHandling\n- Add Config::IOD, Config::IOD::Reader, IOD to ConfigFiles\n- Add Common Vulnerabilities, Exposures, CSAF to SecurityPolicy\n- Add Data::Localize::Format::Maketext, Data::Localize::Format::Sprintf to LocaleStuff\n- Add Data::Maker, Data::Person, Data::RandomPerson, DBD::Mock::Session::GenerateFixtures, Test::Fixme, Text::GenderFromName, Test::Simpler to TestingHelp\n- Add DateTime::Format::ISO8601, DateTime::Format::Mail, DateTime::Format::W3CDTF, Time::Spec, TimeZone::TimeZoneDB to DatesAndTimes\n- Add DBIx::DBO to DatabaseAndSQL\n- Add Excel::ValueWriter::XLSX, Excel::Writer::XLSX, Spreadsheet::ParseExcel, Spreadsheet::WriteExcel to SpreadsheetStuff\n- Add para EBookHandling containing EBook::Ishmael\n- Add para ExtensibleProvisioningProtocol containing Net::EPP::Server\n- Add Genealogy::ChroniclingAmerica to GenealogyStuff\n- Add Geo::Coder::All, Geo::Coder::Bing, Geo::Coder::CA, Geo::Coder::Google::V3, Geo::Coder::GooglePlaces, Geo::Coder::List, Geo::Coder::Many, Geo::Coder::OSM, Geo::Coder::Ovi, Geo::Coder::TomTom, Geo::Inverse, HTML::GoogleMaps::V3, HTML::OSM to GeographicStuff\n- Add Getopt::EX::Config to CommandLineStuff\n- Add Glitch to ExceptionHandling\n- Add GitHub::Actions to GitStuff\n- Add Hustle::Table, Smart::Dispatch to SwitchStatements\n- Add FU, HTTP::Cookies, HTTP::Cookies::Chrome, Router::Boom, Router::Simple, Terse, URI::Router, URI::Shortener to [[HTTPHandling]]\n- Add IO::Async, MCE to ParallelProcessing\n- Add JSON::Lines, OpenAPI::Modern to JsonStuff\n- Add JavaScript::Duktape, JavaScript::V8::XS to JavaScript\n- Add libnet (and its module list), Net::LMTP2 to NetworkProgramming\n- Add para IoLayers containing PerlIO::Via::Base64, PerlIO::via::LineNumber, PerlIO::via::MD5, - Add Log::LogMethods to LoggingStuff\n- Add Mail::Exim::ACL::Geolocation to EmailStuff\n- Add Math::Basic, Math::Basic::XS, Math::Cephes, Math::GMPq, Math::GMPz, Math::MPFR, Math::Polynomial, Math::Polynomial::Solve, Math::Symbolic, Math::Symbolic::Custom::Collect, Math::Symbolic::Custom::Factor, Math::Symbolic::Custom::Equation, Math::Symbolic::Custom::Polynomial, Qhull to MathsLibraries\n- Add MooX::Keyword::Field to ClassStuff\n- Add MooX::LazierAttributes, MooX::Private::Attribute, Role::Basic to ModuleBuilding\n- Add para MusicStuff containing LyricFinder\nPerlIO::via::QuotedPrint, PerlIO::via::Rotate, PerlIO::via::StripHTML, PerlIO::via::UnComment, PerlIO::via::UnPod, PerlIO::via:xz. The latter was moved out of [[UTF8]]\n- Add Plate to TemplateStuff\n- Add para RegistrySystemTesting containing ICANN::RST\n- Add para [[RSS]] containing App::jupiter, XML::RSS\n- Add Params::Validate::Strict to DataValidation\n- Add Specio in DataTypes\n- Add Pg::Explain, SQL::Abstract::ExtraClauses, SQL::Abstract::Plugin::TableAlias to DatabaseAndSQL\n- Add Statistics::Krippendorff to StatisticsStuff\n- Add para SymbolicMaths containing Math::Symbolic, Math::Symbolic::Custom::Factor\n- Add Test::Instruction to TestingHelp\n- Add Text::ANSI::Fold, Text::ANSI::Printf, Text::Conceal, Text::VisualPrintf in TextAnalysisAndFormatting\n- Clean up para [[HTMLHandling]]\n- Clean up para RegexpStuff trying to get the TiddyWiki to display code nicely\n- Delete Data::Search from DataTraversal. It is not on MetaCPAN\n- Extend Data::Random::Person in TestingHelp\n- Extend HTML::T5 in [[HTMLHandling]]\n- Fold SmartMatch in SwitchStatements, delete para SmartMatch\n- Fold TableData into DataTraversal, delete para TableData\n- Move git commands from para GitStuff to Debian.Wiki.html, leaving git-related modules\n- Rename para VLC to VideoStuff, add SReview\n- Move WebService::Chromadb from DatabaseAndSQL to LargeLanguageModels\n\no V 1.23:\n- 2025-02-07\n- Add https://quantumiq.au to the Author block above\n- Add Advanced::Config to ConfigFiles\n- Add AnyEvent::Net::Curl::Queued to EventStuff\n- Add App::Dapper to TemplateStuff\n- Add para BusinessApps with Business::ISBN, Business::ISSN\n- Add Check::NetworkSpans to NetworkProgramming\n- Add Colouring::In::XS to Color\n- Add Convert::CEGH, Convert::Number::Coptic, Convert::Number::Digits, Convert::Number::Roman, String::Equivalence::Amharic, Text::DoubleMetaphone, Text::Metaphone, Text::Metaphone::Amharic, Text::Phonetic::Metaphone, Text::TransMetaphone to LinguaStuff\n- Add Coro, Coro::LWP, Coro::Multicore, Coro::Select to ParallelProcessing\n- Add Crypt::Credentials to CryptoStuff\n- Add Data::Random, Data::SimplePassword, Date::Range, Date::Simple, Mock::Data, Mock::Populate to TestingHelp\n- Add Data::Record::Serialize, DBD::Firebird, DBIx::Migration to DatabaseAndSQL\n- Add Geo::Coder::US::Census, Geo::StreetAddress::US to GeographicStuff\n- Add Image::Dot to ChartingAndPlotting\n- Add JSON::Schema::Modern to JsonStuff\n- Add HTTP::Request::FromCurl, LWP::Protocol::Net::Curl to [[HTTPHandling]]\n- Add para LargeLanguageModels containing Ollama, WebService::Ollama\n- Add Mozilla::CA to BrowserStuff\n- Add Net::Domain::Parts to DnsStuff\n- Add Parser::FIT to DataTraversal\n- Add Statistics::Distributions to StatisticsStuff\n- Add Text::Password::Pronounceable to UsernamePassword\n- Add Text::Unidecode to [[UTF8]]\n- Add Time::Local, Time::Precise to DatesAndTimes\n\no V 1.22:\n- 2025-01-20\n- Add Algorithm::CurveFit, App::bookmarks, App::remotediff, App::uricolor, Catmandu, Data::Match, Data::DRef, Data::Difference, Data::Peek, Data::Walker, DBIx::Array to DataTraversal\n- Add App::geoip, Geo::Spline to GeographicStuff\n- Add App::subsort, Sort::Sub to SortStuff\n- Add Array::Transpose,Math::MatrixBool, Math::MatrixReal to ArrayHandling\n- Add Bit::Vector, Set::CrossProduct to SetStuff\n- Add Config::General to ConfigFiles\n- Add Control::CLI, Control::CLI::Extreme to NetworkProgramming\n- Add CPAN::UnsupportedFinder to [[CPAN]]\n- Add para CpanFile, on how to generate a cpanfile. Add CPAN::Audit\n- Add Crypt::Komihash, Crypt::URandom, Crypt::URandom::Token, Rand::URandom, Random::Any, Sys::GetRandom to RandomStuff\n- Add Crypt::Passphrase::Yescrypt, Crypt::SysRandom, Crypt::Yescrypt to CryptoStuff\n- Add App::Sqitch, Class::Phrasebook::SQL, Data::Phrasebook, Fey, Fey::ORM, MySQL::Hi, Rose::DB::Object, SQL::Library, WebService::Chroma to DatabaseAndSQL\n- Add Data::Identifier to DataTypes\n- Add DateTime::Format::Text, DateTime::TimeZone, DateTimeX::Easy, Oxford::Calendar to DatesAndTimes\n- Add DBIx::Array::Connect, DBIx::MyPassword, DBIx::Password, DBIx::PasswordIniFile, Pass::OTP to UsernamePassword\n- Add Devel::REPL, perldb.pl, Reply, Runtime::Debugger to DebuggingStuff\n- Add para [[DFA]] with module DFA::Kleene\n- Add para EnterpriseApps with EAI::Wrap\n- Add Feersum to EventStuff\n- Add File::Information to FileHandling\n- Add Function::Parameters to ParameterTypes\n- Add Genealogy::FindaGrave in GenealogyStuff\n- Add para GrammarProcessing with module Grammar::Improver\n- Add Hash::Match to HashHandling\n- Add HTML::D3 to ChartingAndPlotting\n- Add HTTP::Parser::XS to [[HTTPHandling]]\n- Add para HTTPServers with modules Furl, Plack, PSGI, Starlet, Starman, mention nginx, picohttpparser\n- Add Graph::Kruskal to [[Graphs]]\n- Add JE to JavaScript\n- Add JSON_LD, Schema.org, Rose::HTML::Objects to [[HTMLHandling]]\n- Add Locale::TextDomain, Locale::TextDomain::OO::Extract to LocaleStuff\n- Add Log::Dispatchouli to LoggingStuff\n- Add para SecurityPolicy\n- Add Module::LicenseScanner to LicenceStuff\n- Add Pod::Perldoc::ToToc to PodHandling\n- Add Poz to DataValidation\n- Add Regexp::Compare, Regex::Range::Number to RegexpStuff. Expand some entries\n- Add String::Sprintf to StringStuff\n- Add Surveyor::App to BenchmarkingTools\n- Add Syntax::Feature::Loop, Syntax::Feature::QwComments, Syntax::Feature::Void to NewOperators\n- Add Test::File, Test::HTTPStatus, Test::Mockingbird, Test::Output to TestingHelp\n- Add Text::HTML::Turndown to MarkdownHandling\n- Add Text::Table::Read::RelationOn::Tiny to TableData\n- Add Time::OlsonTZ::Data to DatesAndTimes\n- Add Unicode::GCString to [[UTF8]]\n- Add VAPID to WebPush, add details for HTTP::Request::Webpush\n- Add para WorkFlows, module Workflow\n- Add XS::Parse::Sublike, Sublike::Extended to [[XS]]\n- Fold contents of SecretManagement into UsernamePassword\n- Rename para RegexpExamples to RegexpStuff\n- Update para builtins\n\no V 1.21:\n- 2024-12-26\n- Add a comment in InterestingModules for PerlPowerTools about the way they can clash with standard Linux tools\n- Add Algorithm::Diff, String::Diff to TextAnalysisAndFormatting\n- Add App::Cme to ConfigFiles\n- Add App::DPath, App::Greple::xp, Data::Dumper::Interp, Data::Section, Data::Section::Pluggable, Data::Section::Simple, Util::Medley::List to DataTraversal\n- Add App::sourcepan to CPAN\n- Add App::perl::distrolint to PerlDistros\n- Add App::ProcUtils to ChildProcesses\n- Add App::sdif to FileHandling\n- Add Archive::Libarchive::Compress, Archive::Libarchive::Peek to ZipFiles\n- Add CPANPLUS::Dist::Debora to [[CPAN]]\n- Add Circle::Chain, Crypt::DSA, Crypt::MatrixSSL3, Crypt::Random::Source, Math::Random::Secure to CryptoStuff\n- Add Data::Password::Common to UsernamePassword\n- Add DateTime::Locale::FromCLDR to DatesAndTimes\n- Expand DB::Object in DatabaseAndSQL\n- Add DBIx::Class::Helpers, DBIx::Lite, Mongo, PGXN::Site, Pongo to DatabaseAndSQL\n- Add Environment::Is, Result::Simple, Tapper::Cmd, Test::Dependencies, Test::Smoke, Test::utf8, Test2::Tools::ComboObject, Test2::Suite, Test2::Transition, Time::RTM to TestingHelp\n- Add Geo::Coordinates::DecimalDegrees to GeographicStuff\n- Add Getopt::EX, Getopt::Lazier to CommandLineStuff\n- Add Gimp to ChartingAndPlotting\n- Expand para GitStuff\n- Add Graph::MaxFlow to [[Graphs]]\n- Add HTML::RewriteAttributes to [[HTMLHandling]]\n- Add a note about INSTALL_BASE, PREFIX in InstallPerl\n- Add Lingua::Interset to LinguaStuff\n- Add Locale::Maketext::Utils, Locale::Unicode::Data to LocaleStuff\n- Add Markdown::Render to MakrdownHandling\n- Add Module::Generic to ModuleBuilding\n- Add Module::ScanDeps::Static to FindDependencies\n- Add Net::IP, Net::IP::XS to IpAddresses\n- Add Object::Simple to ClassStuff\n- Add para ParallelProcessing containing Parallel::WorkUnit\n- Add Parse-Gitignore to GitStuff\n- Add para ProperNames\n- Add para RandomStuff. Add Random::Simple to it, move *Random* from Crypto into it\n- Add Proc::Forkmap to ChildProcesses. Add details for Proc::Fork too\n- Add Signature::Attribute::Checked to ParameterTypes\n- Add Spreadsheet::Write, Spreadsheet::Wright to SpreadsheetStuff\n- Add String::Util to StringStuff\n- Add Switch::Back to SwitchStatements\n- Add para WebSecurity. Add HTTP::CSPHeader, HTTP::SecureHeaders to it\n- Add Zonemaster::Engine to DnsStuff\n- Expand Text::PO in [[UTF8]]\n- Merge CompressionUtils into ZipFIles. Make ArchiveFiles, CompressionUtils point to ZipFiles\n- Rearrange [[UTF8]] into alphabetical order\n- Rename para PerlDoc to PerlDocumentation, add https://niceperl.blogspot.com/\n\no V 1.20:\n- 2024-10-29\n- Fold CaptureTiny para into ExceptionHandling\n- Add Workflow::Inotify to ChildProcesses\n- Update CommandLineStuff\n- Add Pod::Spell to PodHandling\n- Add Cache::Memcached::Fast, Cache::Memcached::PDeque to CachingStuff\n- Expand CaptureTiny, ModulePlugins\n- Add Cairo, Prima, Prima::Cairo to ChartingAndPlotting\n- Add Convert::PEM in new para ASN\n- Add Crypt::RHash, Crypt::CBC, Crypt::DES, Crypt::DES_EDE3 to CryptoStuff\n- Expand DataTraversal a bit, PdfStuff re versions of PDF spec\n- Add Neo4j::Driver to DatabaseAndSQL, expand latter to describe how to generate a database schema image with GraphViz2::DBI\n- Add DateTime::Locale to LocaleStuff, cross-link that with DatesAndTimes\n- Add DBIx::Connector, DBIx::QuickORM to DatabaseAndSQL, deprecate DBIx::Class. Expand note for App::DBBrowser\n- Add File::chdir to FileHandling\n- Add Geo::Address::Formatter to GeographicStuff\n- Rename PDFStuff to PdfStuff to make it a TiddlyWord\n- Add Pod::Spell to PodHandling\n- Add Mock::Data::Regex to TestingHelp\n- Add IO::Async::Process, IPC::Run3, IPC::System::Simple to ReadPipe\n\no V1.09:\n- 2024-10-19\n- Fold ImageHandling, ImageTags into ChartingAndPlotting\n- Rearrange latter into alphabetical order\n- Update para Color\n- Update DataTraversal. Expand. Rearrange into alphabetical order\n- Expand DataTypes, Struct::Dumb\n- Add Sort::Maker, Sort::Naturally, Sort::Versions to SortModules\n\no V 1.08:\n- 2024-10-18\n- Add Pragma para\n- Update the XML para\n- Rearrange [[HTMLHandling]] into alphabetical order\n- Add HTTP::DAV to HTTPHandling\n- Add List::MoreUtils, List::UtilsBy, XS::Parse::Infix to ArrayHandling\n- Add Data::Buffer to CachingStuff\n- Add Berkeley::DB to DatabaseAndSQL\n- Add Hash::Merge::Simple to HashHandling\n- Add Lingua::EN::Titlecase::Simple to LinguaStuff\n- Add Log::Journald to LoggingStuff\n- Add App::pod, Pod::LOL, Pod::Query, Pod::Simple to PodHandling\n- Add Devel::StatProfiler, Tiny::Prof to ProfilingCode\n- Add Subs::Trace, Test::ExpectAndCheck, Test::WWW::Simple, Test::XML::Simple to TestingHelp\n- Rearrange TestingHelp, XML into alphabetical order\n- Update TiddlyWikis, UseUse\n- Add or expand XML::Fast, XML::GDOME, XML::Hash::XS, XML::Sig , XML::Twig in XML\n- Fold TryCatch into ExceptionHandling, expand latter\n- Add Tree::RB::XS, Tree::RedBlack: to RedBlackTrees\n- Add Digest::HMAC to CryptoStuff, rearrange into alphabetical order\n\no V 1.07:\n- 2024-10-12\n- Add DBIx::BatchChunker, DBIx::OnlineDDL, gh-ost to DatabaseAndSQL\n- Add Algorithm::Graphs::Reachable::Tiny to Graphs\n- Note App::rdapper under [[RDAP]]\n- Sort DatesAndTimes into alphabetical order\n- Add a calendar FAQ, Calendar::Simple, Time::Elapsed to DatesAndTimes\n- Expand Email::Stuff\n- Update FileHandling with File::MoreUtil, File::Process. Warn that File::Temp uses global variables\n- Update LaTeX slightly\n- Update ParsingStuff with Parser::MGC\n- Update StatisticsStuff with Math::LiveStats, Statistics::Running, Statistics::Running::Tiny, Statistics::Welford\n- Update StringStuff with String::Random::Regexp::regxstring\n- Update TestingHelp with TAP::Harness, Test::TempDir::Tiny\n\no V 1.06:\n- 2024-10-02\n- Rename ParseTaxonomy to ParsingStuff\n- Add analizo, Lingua::Word::Parser, Syntax::Kamelon to ParsingStuff\n- Add PipeLines\n- Add App::PTP, Atomic::Pipe, File::Collector to PipeLines\n- Add Range::Merge to DataTypes. Sort latter into alphabetical order\n- Add App::week to DatesAndTimes\n- Add Devel::Events to EventStuff\n- Add App::pdfresize to PdfStuff\n\no V 1.05:\n- 2024-09-27\n- Add DateTime::Schedule to DatesAndTimes\n- Expand details about PDF::API2\n- Expand details about Poppler not installing under Debian bookworm\n- Add qpdf etc, App::PDFUtils in PDFStuff\n- Add exim4/sendmail to EmailStuff\n- Add IRI para\n- Add Text::ASCII::Convert to para AsciiCodes\n\no V 1.04:\n- 2024-09-11\n- Add Data::TagDB to DatabaseAndSQL\n- Add OpenGraphProtocol\n- Add UIIID to HTTPHandling\n- Rearrange HTTPHandling so module names are in alphabetical order\n- Add String::Mask, String::Mask::XS to SecretManagement\n- Rearrange SecretManagement so module names are in alphabetical order\n- Add Crypt::Fernet, Data::Mirror, WebService::Client\n- Rearrange TemplateStuff so module names are in alphabetical order\n- Add Mason, Template::EmbeddedPerl to TemplateStuff\n- Add Sys::GetRandom::PP to para CryptoStuff\n- Add para XWindowStuff, App::DesktopNotifyUtils, Desktop::Notify, Net::DBus\n\no V 1.03:\n- 2024-08-27\n- Add notes about Mermaid to MarkdownHandling\n- Rearrange, extend PDFStuff\n- Add Locale::Unicode,  Minilla, Net::DNS::SEC, Number::Iterator::XS, Forks::Super\n- Add Forks::Super, IPC::Cmd, Authen::WebAuthn\n- Add App::optex, Geo::Coder::Abbreviations, HTTP::Cache::Transparent\n- Add Number::Format, Syntax::Keyword::Assert\n- Rearrange TestingHelp so module names are in alphabetical order\n- Rearrange module names in DatabaseAndSQL\n- Add DBI::Shell, kura\n- Add App::csvtool, Regexp::Pattern::License\n- Add version as above\n- Add PPI. Rearrange TextAnalysisAndFormatting into alphabetical order\n- Add Mail::Milter::Authentication. Rearrange EmailStuff into alphabetical order\n- Add Spreadsheet::Read, which reads many formats\n- Add XDGBaseDirectorySpecification. Update MarkdownHandling, ZipFiles\n- Add Clipboard::Any, ExtUtils::Helpers\n\no V 1.02:\n- Previously there was no such para so there is no history\n- Fix typo in MainMenu re SwitchStatements being singular\n- Add List::Gen\n- Transfer contents of para IteratorStuff to DataTraversal. See next line\n- Specifically Iterator::Flex, NumSeq::Iter, Seq\n- Add heaps of stuff about DataTraversal, LoggingStuff, MarkdownHandling, PerlDoc\n- Add App::sdview, Getopt::Class, Markdown::Perl, Prima\n",
        "title": "VersionInfo",
        "modified": "20250714021946499",
        "created": "20240717002307158"
    },
    {
        "text": "\"\"\"\no Net::Proxmox::VE:\n- Pure Perl API for Proxmox Virtual Environment\n- https://metacpan.org/pod/Net::Proxmox::VE\n",
        "title": "VirtualEnvironment",
        "modified": "20250502011449614",
        "created": "20250502011344592"
    },
    {
        "text": "\"\"\"\no Want:\n- Extends wantarray\n- There is a great example in the POD of Nice::Try\n\no Wanted:\n- Extended caller context detection\n- https://metacpan.org/dist/Wanted\n- It seems Want is no longer maintained\n",
        "title": "WantArray",
        "modified": "20250524233506470",
        "created": "20240323050536293"
    },
    {
        "text": "\"\"\"\no Extism:\n- Extism Perl SDK\n- https://metacpan.org/pod/Extism\n- https://extism.org/\n",
        "title": "WebAssembly",
        "modified": "20250704002218112",
        "created": "20250704002135595"
    },
    {
        "text": "\"\"\"\no See also:\n- WebServices\n\no HTTP::Request::Webpush\n- HTTP Request for web push notifications\n- https://metacpan.org/dist/HTTP-Request-Webpush\n\no VAPID:\n- Voluntary Application Server Identification\n- https://metacpan.org/pod/VAPID\n",
        "title": "WebPush",
        "modified": "20250702023048514",
        "created": "20210209235008861"
    },
    {
        "text": "\"\"\"\no HTTP::CSPHeader:\n- Manage dynamic content security policy headers\n- https://metacpan.org/pod/HTTP::CSPHeader\n\no HTTP::SecureHeaders:\n- Manage security headers with many safe defaults\n- https://metacpan.org/pod/HTTP::SecureHeaders\n\no Net::OAuth:\n- Provides a low-level API for reading and writing OAuth messages\n- https://metacpan.org/pod/Net::OAuth\n\no WWW::OAuth:\n- Portable OAuth 1.0 authentication\n- https://metacpan.org/pod/WWW::OAuth\n",
        "title": "WebSecurity",
        "modified": "20250425094434391",
        "created": "20241217214024184"
    },
    {
        "text": "\"\"\"\no See also:\n- DataTraversal for e.g. Data::Mirror\n- UsernamePassword for e.g. OASIS\n- WebPush\n\no App::KGB:\n- Collaborative IRC helper\n- https://metacpan.org/dist/App-KGB\n\no Net::CampaignMonitor:\n- A Perl wrapper for the Campaign Monitor API\n- https://metacpan.org/pod/Net::CampaignMonitor\n\no Net::Azure::NotificationHubs:\n- A Client Class for Azure Notification Hubs\n- https://metacpan.org/dist/Net-Azure-NotificationHubs\n\no Net::eBay:\n- Perl Interface to XML based eBay API.\n- https://metacpan.org/dist/Net-eBay\n\no Net::Flickr::Backup:\n- OOP for backing up your Flickr photos locally\n- https://metacpan.org/dist/Net-Flickr-Backup\n\no Opsview::RestAPI:\n- Interact with the Opsview Rest API interface\n- https://metacpan.org/dist/Opsview-RestAPI\n\no Playwright:\n- Perl client for Playwright\n- https://metacpan.org/dist/Playwright\n- Playwright is a Perl interface to a lightweight node.js webserver\n- See https://playwright.dev/\n\no SMS::AQL:\n- Perl extension to send SMS text messages via AQL's SMS service\n- https://metacpan.org/pod/SMS::AQL\n- Provides an object-oriented interface to send SMS messages via the HTTP gateway provided by AQ Ltd (www.aql.com) in the UK\n\no WebService::AbuseIPDB:\n- Client for the API (version 2) of AbuseIPDB\n- https://metacpan.org/pod/WebService::AbuseIPDB\n\no Webservice client builder:\n- WebService::Client\n\no WebService::HashiCorp::Vault:\n- Perl API for HashiCorp's Vault\n- https://metacpan.org/dist/WebService-HashiCorp-Vault\n\no WebService::IdoitAPI:\n- A library to access the i-doit JSON RPC API\n-https://metacpan.org/dist/WebService-IdoitAPI\n\no Webservice::KeyVal::API:\n- Perl API client for the REPLACE API service, https://keyval.org/\n- https://metacpan.org/dist/Webservice-KeyVal-API\n\no WebService::Simple:\n- Simple Interface To Web Services APIs\n- https://metacpan.org/dist/WebService-Simple\n\no WebService::Slack::WebApi:\n- A simple wrapper for Slack Web API\n- https://metacpan.org/dist/WebService-Slack-WebApi\n- New doc site: https://docs.slack.dev/\n- Old doc site: https://api.slack.com/web\n\no WebService::TogetherWeRemember:\n- Together We Remember!\n- https://metacpan.org/pod/WebService::TogetherWeRemember\n- https://togetherweremember.com/\n\no Workflow:\n- Simple, flexible system to implement workflows\n- https://metacpan.org/pod/Workflow\n\no WWW::YaCyBlacklist:\n- A Perl module to parse and execute YaCy blacklists\n- https://metacpan.org/pod/WWW::YaCyBlacklist\n- YaCy (pronounced \"ya see\") is a fascinating project: a free, distributed, peer-to-peer (P2P) search engine\n\no XML::Compile::WSS:\n- OASIS Web Services Security\n- https://metacpan.org/pod/XML::Compile::WSS\n\no XML::Compile::WSS::Signature:\n- WSS Signatures\n- This extension implements cypto signatures\n- https://metacpan.org/pod/XML::Compile::WSS::Signature\n",
        "title": "WebServices",
        "modified": "20250714034839344",
        "created": "20200408083024235"
    },
    {
        "text": "\"\"\"\no X11::XCB:\n- Perl bindings for libxcb\n- https://metacpan.org/dist/X11-XCB\n\n",
        "title": "X11",
        "modified": "20250705005913946",
        "created": "20250705005848067"
    },
    {
        "text": "\"\"\"\no File::XDG:\n- Basic implementation of the XDG base directory specification\n- https://metacpan.org/pod/File::XDG\n\no XDG Base Directory Specification:\n- https://specifications.freedesktop.org/basedir-spec/latest/\n",
        "title": "XDGBaseDirectorySpecification",
        "modified": "20240831002311279",
        "created": "20240831002147023"
    },
    {
        "text": "\"\"\"\no See also:\n- DataTraversl\n- [[UTF8]]\n\no XML::Entities:\n- Decode strings with XML entities\n- https://metacpan.org/pod/XML::Entities\n\no XML::Fast:\n- Simple and very fast XML - hash conversion\n- https://metacpan.org/dist/XML-Fast\n\no XML::GDOME:\n- Interface to Level 2 DOM gdome2 library\n- https://metacpan.org/pod/XML::GDOME\n\no XML::Hash::XS:\n- Simple and fast hash to XML and XML to hash conversion written in C\n- https://metacpan.org/dist/XML-Hash-XS\n\no XML::IETF:\n- An interface to the IETF XML Registry.\n- https://metacpan.org/dist/XML-IETF\n\no XML::LibXML:\n- Perl Binding for libxml2\n- https://metacpan.org/dist/XML-LibXML\n- http://grantm.github.io/perl-libxml-by-example/\n- Supports parsing huge documents\n- Supports parsing (possibly faulty) HTML\n\no XML::PP:\n- A simple XML parser\n- https://metacpan.org/dist/XML-PP\n- Prefer XML::Simple or XML::LibXML\n\no XML::Sig:\n- A toolkit to help sign and verify XML Digital Signatures\n- https://metacpan.org/dist/XML-Sig\n\no XML::Simple:\n- An API for simple XML files\n- https://metacpan.org/pod/XML::Simple\n- Deprecated\n\no XML::Twig:\n- A Perl module for processing huge XML documents in tree mode\n- https://metacpan.org/dist/XML-Twig\n\no See also XML in file:///home/ron/Documents/wiki/Mojo.html\n",
        "title": "XML",
        "modified": "20250713021435079",
        "created": "20210405091835001"
    },
    {
        "text": "\"\"\"\no See also:\n- ArrayHandling\n- EventStuff\n- NewOperators\n\no List::Util::MaybeXS:\n- List::Util but with Pure Perl fallback\n- https://metacpan.org/dist/List-Util-MaybeXS\n\no List::Util::XS:\n- Indicate if List::Util was compiled with a C compiler\n- https://metacpan.org/pod/List::Util::XS\n- Ships in Scalar::List::Utils\n\no Missing::XS:\n- Print warnings about XS modules you should probably install\n- https://metacpan.org/pod/Missing::XS\n- Meaning you are using the pure Perl version but an  XS version exists\n\no XS::Parse::Sublike:\n- XS functions to assist in parsing sub-like syntax\n- https://metacpan.org/dist/XS-Parse-Sublike\n",
        "title": "XS",
        "modified": "20250714024906740",
        "created": "20230609061015187"
    },
    {
        "text": "\"\"\"\no App::DesktopNotifyUtils:\n- https://metacpan.org/pod/App::DesktopNotifyUtils\n\no Desktop::Notify:\n- This module provides a Perl interface to the Desktop Notifications framework\n- The framework allows applications to display pop-up notifications on an X desktop\n- More information is available from http://trac.galago-project.org/wiki/DesktopNotifications\n\no Net::DBus:\n- Perl extension for the DBus message system\n- https://metacpan.org/dist/Net-DBus\n- Used by Desktop::Notify above\n",
        "title": "XWindowsStuff",
        "modified": "20240926003730192",
        "created": "20240917022358199"
    },
    {
        "text": "\"\"\"\no Alien::YAMLScript:\n- Find or install libys\n- https://metacpan.org/dist/Alien-YAMLScript\n\no Config::LNPath:\n- A Simple YAML Config Reader.\n- https://metacpan.org/dist/Config-LNPath\n\no YAMLScript:\n- Program in YAML — Code is Data\n- https://metacpan.org/dist/YAMLScript\n\no YAML::XS:\n- Perl YAML Serialization using XS and libyaml\n\no Text::FrontMatter::YAML:\n- Read the 'YAML front matter' format\n- See the module's own docs for an explanation\n",
        "title": "YamlStuff",
        "modified": "20250707001126235",
        "created": "20231028000609786"
    },
    {
        "text": "\"\"\"\no https://www.fysh.org/~zefram/\n- An eclectic collection of writings\n",
        "title": "ZeframsStuff",
        "modified": "20250317222150759",
        "created": "20250317222050641"
    },
    {
        "text": "\"\"\"\no Archive::7zip:\n- Read/write 7z, zip, ISO9960 and other archives\n- https://metacpan.org/dist/Archive-SevenZip\n\no Archive::Libarchive::Compress:\n- Recursively archive a directory (using libarchive)\n- https://metacpan.org/dist/Archive-Libarchive-Compress\n- Contains many modules\n\no Archive::Libarchive::Peek:\n- Peek into archives without extracting them\n- https://metacpan.org/dist/Archive-Libarchive-Peek\n\no Archive::SCS:\n- SCS archive controller\n- https://metacpan.org/pod/Archive::SCS\n\no Archive::Tar::Wrapper:\n- API wrapper around the 'tar' utility\n- https://metacpan.org/pod/Archive::Tar::Wrapper\n- This module differs from Archive::Tar in 2 ways\n\no Archive::Unzip::Burst:\n- Featureless but fast ZIP extraction\n- https://metacpan.org/pod/Archive::Unzip::Burst\n\no Archive::Zip:\n- Provide an interface to ZIP archive files\n- https://metacpan.org/pod/Archive::Zip\n\no Archive::Zip::SimpleZip:\n- Create Zip Archives\n- Package contains Archive::Zip::SimpleUnzip\n- https://metacpan.org/pod/Archive::Zip::SimpleZip\n- Supports deflate, store, bzip2, Zstandard (Zstd), Xz and lzma compression\n\no Archive::Zip::SimpleUnzip:\n- Read Zip Archives\n- https://metacpan.org/pod/Archive::Zip::SimpleUnzip\n- Supports deflate, store, bzip2, Zstandard (Zstd), Xz and lzma compression\n\no App::zipdetails:\n- Display the internal structure of zip files\n- https://metacpan.org/dist/App-zipdetails\n- The zipinfo program that comes with the info-zip distribution (http://www.info-zip.org/) can also display details of the structure of a zip file\n\no Compress::Zstd:\n- Perl interface to the Zstd (Zstandard) (de)compressor\n- No dictionary support but support ticket has sample code\n- https://metacpan.org/pod/Compress::Zstd\n\no Compression::Util:\n- Implementation of various techniques used in data compression\n- https://metacpan.org/dist/Compression-Util\n- Contains<pre>\n* Burrows-Wheeler transform\n* Move-to-front transform\n* Huffman Coding\n* Arithmetic Coding (in fixed bits)\n* Run-length encoding\n* Fibonacci coding\n* Elias gamma/omega coding\n* Delta coding\n* BWT-based (de)compression\n* LZ77/LZSS (de)compression\n* LZW (de)compression\n* Bzip2 (de)compression\n* GZIP (de)compression\n* ZLIB (de)compression\n* LZ4 (de)compression\n</pre>o IO::Compress:\n-  Is an interface to zlib compression library\n- Contains streamzip to create a zip file from stdin\n- Contains zipdetails to display the internal structure of zip files\n- Docs: https://metacpan.org/dist/IO-Compress/view/lib/IO/Compress/FAQ.pod\n\no File::Unpack2:\n- A strong bz2/gz/zip/tar/cpio/rpm/deb/cab/lzma/7z/rar/... archive unpacker, based on mime-types\n\no FU::Utils\n- Miscellaneous Utility Functions\n- https://metacpan.org/pod/FU::Util\n- Supports booleans, brotli, file descriptor passing, gzip, HTTP dates and json\n\no Gzip::Libdeflate:\n- Libdeflate compression library\n- This module provides an interface to libdeflate. Libdeflate is a newly-written compression library which offers the same deflate form of compression as zlib, as used in gzip, libpng and many similar utilities. This distribution includes libdeflate within itself, so it is not necessary to have that on your system\n\no IO::Compress::Brotli:\n- Write Brotli buffers/streams\n- https://metacpan.org/pod/IO::Compress::Brotli\n\no IO::Compress::Zip:\n- Write zip files/buffers\n- https://metacpan.org/pod/IO::Compress::Zip\n- Supports store, deflate, bzip2, lzma, xz, zstd\n\no IO::Uncompress::Unzip:\n- Read zip files/buffers\n- https://metacpan.org/pod/IO::Uncompress::Unzip\n\no streamzip:\n- Sreate a zip file from stdin\n- https://metacpan.org/pod/streamzip\n- Supports store, deflate, bzip2, lzma, xz, zstd\n",
        "title": "ZipFiles",
        "modified": "20250710035013723",
        "created": "20220410013047971"
    },
    {
        "text": "\"\"\"\no FFI::Platypus:\n- https://metacpan.org/pod/FFI::Platypus\n\no ZMQ::FFI:\n-  https://metacpan.org/dist/ZMQ-FFI\n\no ZMQ::FFI::Constants\n- ZMQ::FFI::Util\n- FFI::Platypus\n- FFI::Raw\n- ZMQ::LibZMQ3\n\n",
        "title": "ZMQ",
        "modified": "20250625060439453",
        "created": "20230808235031053"
    }
]